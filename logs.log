2024-05-19 13:42:52,361:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:42:52,361:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:42:52,361:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:42:52,361:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:51:34,635:INFO:PyCaret ClassificationExperiment
2024-05-19 13:51:34,635:INFO:Logging name: clf-default-name
2024-05-19 13:51:34,635:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-19 13:51:34,636:INFO:version 3.2.0
2024-05-19 13:51:34,636:INFO:Initializing setup()
2024-05-19 13:51:34,636:INFO:self.USI: 7f5e
2024-05-19 13:51:34,636:INFO:self._variable_keys: {'_ml_usecase', 'is_multiclass', 'fold_groups_param', 'data', 'html_param', 'X_train', 'y_test', 'target_param', 'logging_param', 'exp_name_log', 'USI', 'y_train', 'log_plots_param', '_available_plots', 'memory', 'y', 'X_test', 'fold_generator', 'exp_id', 'n_jobs_param', 'fold_shuffle_param', 'pipeline', 'gpu_param', 'fix_imbalance', 'gpu_n_jobs_param', 'X', 'seed', 'idx'}
2024-05-19 13:51:34,636:INFO:Checking environment
2024-05-19 13:51:34,636:INFO:python_version: 3.11.5
2024-05-19 13:51:34,636:INFO:python_build: ('tags/v3.11.5:cce6ba9', 'Aug 24 2023 14:38:34')
2024-05-19 13:51:34,636:INFO:machine: AMD64
2024-05-19 13:51:34,636:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-19 13:51:34,642:INFO:Memory: svmem(total=16968298496, available=2939539456, percent=82.7, used=14028759040, free=2939539456)
2024-05-19 13:51:34,642:INFO:Physical Core: 4
2024-05-19 13:51:34,642:INFO:Logical Core: 8
2024-05-19 13:51:34,642:INFO:Checking libraries
2024-05-19 13:51:34,642:INFO:System:
2024-05-19 13:51:34,642:INFO:    python: 3.11.5 (tags/v3.11.5:cce6ba9, Aug 24 2023, 14:38:34) [MSC v.1936 64 bit (AMD64)]
2024-05-19 13:51:34,642:INFO:executable: c:\Users\anson\AppData\Local\Programs\Python\Python311\python.exe
2024-05-19 13:51:34,642:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-19 13:51:34,642:INFO:PyCaret required dependencies:
2024-05-19 13:51:35,298:INFO:                 pip: 23.3.2
2024-05-19 13:51:35,298:INFO:          setuptools: 69.0.3
2024-05-19 13:51:35,298:INFO:             pycaret: 3.2.0
2024-05-19 13:51:35,298:INFO:             IPython: 8.12.3
2024-05-19 13:51:35,298:INFO:          ipywidgets: 7.8.1
2024-05-19 13:51:35,298:INFO:                tqdm: 4.66.1
2024-05-19 13:51:35,298:INFO:               numpy: 1.24.2
2024-05-19 13:51:35,298:INFO:              pandas: 1.5.2
2024-05-19 13:51:35,298:INFO:              jinja2: 3.1.3
2024-05-19 13:51:35,298:INFO:               scipy: 1.10.1
2024-05-19 13:51:35,298:INFO:              joblib: 1.2.0
2024-05-19 13:51:35,298:INFO:             sklearn: 1.2.2
2024-05-19 13:51:35,298:INFO:                pyod: 1.1.2
2024-05-19 13:51:35,298:INFO:            imblearn: 0.12.0
2024-05-19 13:51:35,298:INFO:   category_encoders: 2.6.3
2024-05-19 13:51:35,298:INFO:            lightgbm: 4.3.0
2024-05-19 13:51:35,298:INFO:               numba: 0.58.1
2024-05-19 13:51:35,299:INFO:            requests: 2.31.0
2024-05-19 13:51:35,299:INFO:          matplotlib: 3.6.0
2024-05-19 13:51:35,299:INFO:          scikitplot: 0.3.7
2024-05-19 13:51:35,299:INFO:         yellowbrick: 1.5
2024-05-19 13:51:35,299:INFO:              plotly: 5.18.0
2024-05-19 13:51:35,299:INFO:    plotly-resampler: Not installed
2024-05-19 13:51:35,299:INFO:             kaleido: 0.2.1
2024-05-19 13:51:35,299:INFO:           schemdraw: 0.15
2024-05-19 13:51:35,299:INFO:         statsmodels: 0.14.0
2024-05-19 13:51:35,299:INFO:              sktime: 0.21.1
2024-05-19 13:51:35,299:INFO:               tbats: 1.1.3
2024-05-19 13:51:35,299:INFO:            pmdarima: 2.0.4
2024-05-19 13:51:35,299:INFO:              psutil: 5.9.5
2024-05-19 13:51:35,299:INFO:          markupsafe: 2.1.2
2024-05-19 13:51:35,299:INFO:             pickle5: Not installed
2024-05-19 13:51:35,299:INFO:         cloudpickle: 2.2.1
2024-05-19 13:51:35,299:INFO:         deprecation: 2.1.0
2024-05-19 13:51:35,299:INFO:              xxhash: 3.4.1
2024-05-19 13:51:35,299:INFO:           wurlitzer: Not installed
2024-05-19 13:51:35,299:INFO:PyCaret optional dependencies:
2024-05-19 13:51:35,655:WARNING:IPython detected, but you already have a custom exception handler installed. I'll skip installing Trio's custom handler, but this means exception groups will not show full tracebacks.

2024-05-19 13:51:37,787:INFO:                shap: 0.44.1
2024-05-19 13:51:37,787:INFO:           interpret: 0.5.0
2024-05-19 13:51:37,788:INFO:                umap: 0.5.5
2024-05-19 13:51:37,788:INFO:     ydata_profiling: 4.6.0
2024-05-19 13:51:37,788:INFO:  explainerdashboard: 0.4.5
2024-05-19 13:51:37,788:INFO:             autoviz: Not installed
2024-05-19 13:51:37,788:INFO:           fairlearn: 0.7.0
2024-05-19 13:51:37,788:INFO:          deepchecks: Not installed
2024-05-19 13:51:37,788:INFO:             xgboost: 2.0.3
2024-05-19 13:51:37,788:INFO:            catboost: 1.2.2
2024-05-19 13:51:37,788:INFO:              kmodes: 0.12.2
2024-05-19 13:51:37,788:INFO:             mlxtend: 0.23.1
2024-05-19 13:51:37,788:INFO:       statsforecast: 1.5.0
2024-05-19 13:51:37,788:INFO:        tune_sklearn: Not installed
2024-05-19 13:51:37,788:INFO:                 ray: Not installed
2024-05-19 13:51:37,788:INFO:            hyperopt: 0.2.7
2024-05-19 13:51:37,788:INFO:              optuna: 3.5.0
2024-05-19 13:51:37,788:INFO:               skopt: 0.9.0
2024-05-19 13:51:37,788:INFO:              mlflow: 2.10.0
2024-05-19 13:51:37,788:INFO:              gradio: 3.50.2
2024-05-19 13:51:37,788:INFO:             fastapi: 0.109.0
2024-05-19 13:51:37,788:INFO:             uvicorn: 0.27.0
2024-05-19 13:51:37,788:INFO:              m2cgen: 0.10.0
2024-05-19 13:51:37,788:INFO:           evidently: 0.4.17
2024-05-19 13:51:37,788:INFO:               fugue: 0.8.6
2024-05-19 13:51:37,788:INFO:           streamlit: 1.30.0
2024-05-19 13:51:37,788:INFO:             prophet: Not installed
2024-05-19 13:51:37,789:INFO:None
2024-05-19 13:51:37,789:INFO:Set up data.
2024-05-19 13:51:37,798:INFO:Set up folding strategy.
2024-05-19 13:51:37,798:INFO:Set up train/test split.
2024-05-19 13:51:37,804:INFO:Set up index.
2024-05-19 13:51:37,804:INFO:Assigning column types.
2024-05-19 13:51:37,808:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-19 13:51:37,854:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 13:51:37,857:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-19 13:51:37,899:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 13:51:37,901:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 13:51:38,562:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 13:51:38,563:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-19 13:51:38,587:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 13:51:38,590:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 13:51:38,591:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-19 13:51:38,633:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-19 13:51:38,658:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 13:51:38,660:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 13:51:38,704:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-19 13:51:38,731:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 13:51:38,734:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 13:51:38,734:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-19 13:51:38,809:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 13:51:38,812:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 13:51:38,884:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 13:51:38,886:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 13:51:38,889:INFO:Set up column name cleaning.
2024-05-19 13:51:38,899:INFO:Finished creating preprocessing pipeline.
2024-05-19 13:51:38,901:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\anson\AppData\Local\Temp\joblib),
         steps=[('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-05-19 13:51:38,901:INFO:Creating final display dataframe.
2024-05-19 13:51:38,944:INFO:Setup _display_container:                    Description       Value
0                   Session id         888
1                       Target      Target
2                  Target type      Binary
3          Original data shape  (4756, 18)
4       Transformed data shape  (4756, 18)
5  Transformed train set shape  (3329, 18)
6   Transformed test set shape  (1427, 18)
7             Numeric features          17
2024-05-19 13:51:39,030:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 13:51:39,033:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 13:51:39,101:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 13:51:39,104:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 13:51:39,104:INFO:setup() successfully completed in 4.49s...............
2024-05-19 13:53:26,300:INFO:PyCaret ClassificationExperiment
2024-05-19 13:53:26,300:INFO:Logging name: diabetes
2024-05-19 13:53:26,300:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-19 13:53:26,300:INFO:version 3.2.0
2024-05-19 13:53:26,300:INFO:Initializing setup()
2024-05-19 13:53:26,300:INFO:self.USI: 892b
2024-05-19 13:53:26,300:INFO:self._variable_keys: {'_ml_usecase', 'is_multiclass', 'fold_groups_param', 'data', 'html_param', 'X_train', 'y_test', 'target_param', 'logging_param', 'exp_name_log', 'USI', 'y_train', 'log_plots_param', '_available_plots', 'memory', 'y', 'X_test', 'fold_generator', 'exp_id', 'n_jobs_param', 'fold_shuffle_param', 'pipeline', 'gpu_param', 'fix_imbalance', 'gpu_n_jobs_param', 'X', 'seed', 'idx'}
2024-05-19 13:53:26,300:INFO:Checking environment
2024-05-19 13:53:26,301:INFO:python_version: 3.11.5
2024-05-19 13:53:26,301:INFO:python_build: ('tags/v3.11.5:cce6ba9', 'Aug 24 2023 14:38:34')
2024-05-19 13:53:26,301:INFO:machine: AMD64
2024-05-19 13:53:26,301:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-19 13:53:26,306:INFO:Memory: svmem(total=16968298496, available=2880184320, percent=83.0, used=14088114176, free=2880184320)
2024-05-19 13:53:26,306:INFO:Physical Core: 4
2024-05-19 13:53:26,306:INFO:Logical Core: 8
2024-05-19 13:53:26,306:INFO:Checking libraries
2024-05-19 13:53:26,306:INFO:System:
2024-05-19 13:53:26,306:INFO:    python: 3.11.5 (tags/v3.11.5:cce6ba9, Aug 24 2023, 14:38:34) [MSC v.1936 64 bit (AMD64)]
2024-05-19 13:53:26,307:INFO:executable: c:\Users\anson\AppData\Local\Programs\Python\Python311\python.exe
2024-05-19 13:53:26,307:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-19 13:53:26,307:INFO:PyCaret required dependencies:
2024-05-19 13:53:26,307:INFO:                 pip: 23.3.2
2024-05-19 13:53:26,307:INFO:          setuptools: 69.0.3
2024-05-19 13:53:26,307:INFO:             pycaret: 3.2.0
2024-05-19 13:53:26,307:INFO:             IPython: 8.12.3
2024-05-19 13:53:26,307:INFO:          ipywidgets: 7.8.1
2024-05-19 13:53:26,307:INFO:                tqdm: 4.66.1
2024-05-19 13:53:26,307:INFO:               numpy: 1.24.2
2024-05-19 13:53:26,307:INFO:              pandas: 1.5.2
2024-05-19 13:53:26,307:INFO:              jinja2: 3.1.3
2024-05-19 13:53:26,307:INFO:               scipy: 1.10.1
2024-05-19 13:53:26,307:INFO:              joblib: 1.2.0
2024-05-19 13:53:26,307:INFO:             sklearn: 1.2.2
2024-05-19 13:53:26,307:INFO:                pyod: 1.1.2
2024-05-19 13:53:26,307:INFO:            imblearn: 0.12.0
2024-05-19 13:53:26,307:INFO:   category_encoders: 2.6.3
2024-05-19 13:53:26,307:INFO:            lightgbm: 4.3.0
2024-05-19 13:53:26,308:INFO:               numba: 0.58.1
2024-05-19 13:53:26,308:INFO:            requests: 2.31.0
2024-05-19 13:53:26,308:INFO:          matplotlib: 3.6.0
2024-05-19 13:53:26,308:INFO:          scikitplot: 0.3.7
2024-05-19 13:53:26,308:INFO:         yellowbrick: 1.5
2024-05-19 13:53:26,308:INFO:              plotly: 5.18.0
2024-05-19 13:53:26,308:INFO:    plotly-resampler: Not installed
2024-05-19 13:53:26,308:INFO:             kaleido: 0.2.1
2024-05-19 13:53:26,308:INFO:           schemdraw: 0.15
2024-05-19 13:53:26,308:INFO:         statsmodels: 0.14.0
2024-05-19 13:53:26,308:INFO:              sktime: 0.21.1
2024-05-19 13:53:26,308:INFO:               tbats: 1.1.3
2024-05-19 13:53:26,308:INFO:            pmdarima: 2.0.4
2024-05-19 13:53:26,308:INFO:              psutil: 5.9.5
2024-05-19 13:53:26,308:INFO:          markupsafe: 2.1.2
2024-05-19 13:53:26,308:INFO:             pickle5: Not installed
2024-05-19 13:53:26,308:INFO:         cloudpickle: 2.2.1
2024-05-19 13:53:26,308:INFO:         deprecation: 2.1.0
2024-05-19 13:53:26,308:INFO:              xxhash: 3.4.1
2024-05-19 13:53:26,308:INFO:           wurlitzer: Not installed
2024-05-19 13:53:26,308:INFO:PyCaret optional dependencies:
2024-05-19 13:53:26,309:INFO:                shap: 0.44.1
2024-05-19 13:53:26,309:INFO:           interpret: 0.5.0
2024-05-19 13:53:26,309:INFO:                umap: 0.5.5
2024-05-19 13:53:26,309:INFO:     ydata_profiling: 4.6.0
2024-05-19 13:53:26,309:INFO:  explainerdashboard: 0.4.5
2024-05-19 13:53:26,309:INFO:             autoviz: Not installed
2024-05-19 13:53:26,309:INFO:           fairlearn: 0.7.0
2024-05-19 13:53:26,309:INFO:          deepchecks: Not installed
2024-05-19 13:53:26,309:INFO:             xgboost: 2.0.3
2024-05-19 13:53:26,309:INFO:            catboost: 1.2.2
2024-05-19 13:53:26,309:INFO:              kmodes: 0.12.2
2024-05-19 13:53:26,309:INFO:             mlxtend: 0.23.1
2024-05-19 13:53:26,309:INFO:       statsforecast: 1.5.0
2024-05-19 13:53:26,309:INFO:        tune_sklearn: Not installed
2024-05-19 13:53:26,309:INFO:                 ray: Not installed
2024-05-19 13:53:26,309:INFO:            hyperopt: 0.2.7
2024-05-19 13:53:26,309:INFO:              optuna: 3.5.0
2024-05-19 13:53:26,309:INFO:               skopt: 0.9.0
2024-05-19 13:53:26,309:INFO:              mlflow: 2.10.0
2024-05-19 13:53:26,309:INFO:              gradio: 3.50.2
2024-05-19 13:53:26,309:INFO:             fastapi: 0.109.0
2024-05-19 13:53:26,309:INFO:             uvicorn: 0.27.0
2024-05-19 13:53:26,309:INFO:              m2cgen: 0.10.0
2024-05-19 13:53:26,309:INFO:           evidently: 0.4.17
2024-05-19 13:53:26,309:INFO:               fugue: 0.8.6
2024-05-19 13:53:26,309:INFO:           streamlit: 1.30.0
2024-05-19 13:53:26,309:INFO:             prophet: Not installed
2024-05-19 13:53:26,309:INFO:None
2024-05-19 13:53:26,309:INFO:Set up GPU usage.
2024-05-19 13:53:26,309:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:26,309:WARNING:cuML is outdated or not found. Required version is >=23.08.
                Please visit https://rapids.ai/install for installation instructions.
2024-05-19 13:53:26,309:INFO:Set up data.
2024-05-19 13:53:26,320:INFO:Set up folding strategy.
2024-05-19 13:53:26,320:INFO:Set up train/test split.
2024-05-19 13:53:26,329:INFO:Set up index.
2024-05-19 13:53:26,329:INFO:Assigning column types.
2024-05-19 13:53:26,335:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-19 13:53:26,336:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:26,390:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 13:53:26,390:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:26,390:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:26,391:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-19 13:53:26,391:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:26,412:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:26,416:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:26,417:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 13:53:26,569:WARNING:Could not find the number of physical cores for the following reason:
found 0 physical cores < 1
Returning the number of logical cores instead. You can silence this warning by setting LOKY_MAX_CPU_COUNT to the number of cores you want to use.

2024-05-19 13:53:27,027:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 13:53:27,029:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:27,111:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 13:53:27,111:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:27,112:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:27,113:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-19 13:53:27,113:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:27,147:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:27,153:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:27,154:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 13:53:27,179:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 13:53:27,181:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-19 13:53:27,181:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:27,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:27,261:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:27,262:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-19 13:53:27,262:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:27,289:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:27,293:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:27,293:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 13:53:27,310:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 13:53:27,311:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:27,390:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:27,391:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:27,392:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-19 13:53:27,392:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:27,423:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:27,428:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:27,429:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 13:53:27,444:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 13:53:27,446:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-19 13:53:27,446:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:27,520:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:27,520:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:27,521:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:27,552:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:27,557:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:27,557:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 13:53:27,573:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 13:53:27,574:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:27,644:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:27,644:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:27,645:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:27,683:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:27,687:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:27,688:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 13:53:27,705:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 13:53:27,707:INFO:Preparing preprocessing pipeline...
2024-05-19 13:53:27,709:INFO:Set up simple imputation.
2024-05-19 13:53:27,711:INFO:Set up column name cleaning.
2024-05-19 13:53:27,742:INFO:Finished creating preprocessing pipeline.
2024-05-19 13:53:27,750:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\anson\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'tx', 'dx', 'bmi',
                                             'leg', 'armc', 'waist', 'sub',
                                             'gh', 'albumin', 'bun', 'sex_male',
                                             're_Non-Hispanic Black',
                                             're_Non-Hispanic White',
                                             're_Other Hispanic',
                                             're_Other Race Including '
                                             'Multi-Racial'],
                                    transform...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-05-19 13:53:27,750:INFO:Creating final display dataframe.
2024-05-19 13:53:27,842:INFO:Setup _display_container:                     Description            Value
0                    Session id              888
1                        Target           Target
2                   Target type           Binary
3           Original data shape       (4756, 18)
4        Transformed data shape       (4756, 18)
5   Transformed train set shape       (3329, 18)
6    Transformed test set shape       (1427, 18)
7              Numeric features               17
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU             True
16               Log Experiment     MlflowLogger
17              Experiment Name         diabetes
18                          USI             892b
2024-05-19 13:53:27,842:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:27,892:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:27,892:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:27,893:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:27,916:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:27,920:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:27,920:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 13:53:27,937:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 13:53:27,937:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:28,018:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:28,018:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:28,019:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:28,049:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:28,053:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 13:53:28,054:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 13:53:28,069:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 13:53:28,070:INFO:Logging experiment in loggers
2024-05-19 13:53:28,489:INFO:SubProcess save_model() called ==================================
2024-05-19 13:53:28,501:INFO:Initializing save_model()
2024-05-19 13:53:28,501:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\anson\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'tx', 'dx', 'bmi',
                                             'leg', 'armc', 'waist', 'sub',
                                             'gh', 'albumin', 'bun', 'sex_male',
                                             're_Non-Hispanic Black',
                                             're_Non-Hispanic White',
                                             're_Other Hispanic',
                                             're_Other Race Including '
                                             'Multi-Racial'],
                                    transform...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=C:\Users\anson\AppData\Local\Temp\tmpq_zg7c9x\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\anson\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'tx', 'dx', 'bmi',
                                             'leg', 'armc', 'waist', 'sub',
                                             'gh', 'albumin', 'bun', 'sex_male',
                                             're_Non-Hispanic Black',
                                             're_Non-Hispanic White',
                                             're_Other Hispanic',
                                             're_Other Race Including '
                                             'Multi-Racial'],
                                    transform...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-05-19 13:53:28,501:INFO:Adding model into prep_pipe
2024-05-19 13:53:28,501:WARNING:Only Model saved as it was a pipeline.
2024-05-19 13:53:28,503:INFO:C:\Users\anson\AppData\Local\Temp\tmpq_zg7c9x\Transformation Pipeline.pkl saved in current working directory
2024-05-19 13:53:28,507:INFO:Pipeline(memory=FastMemory(location=C:\Users\anson\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'tx', 'dx', 'bmi',
                                             'leg', 'armc', 'waist', 'sub',
                                             'gh', 'albumin', 'bun', 'sex_male',
                                             're_Non-Hispanic Black',
                                             're_Non-Hispanic White',
                                             're_Other Hispanic',
                                             're_Other Race Including '
                                             'Multi-Racial'],
                                    transform...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-05-19 13:53:28,507:INFO:save_model() successfully completed......................................
2024-05-19 13:53:28,752:INFO:SubProcess save_model() end ==================================
2024-05-19 13:53:28,875:INFO:setup() successfully completed in 1.78s...............
2024-05-19 13:55:16,373:INFO:Initializing compare_models()
2024-05-19 13:55:16,373:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017B19B1A150>, include=['lr', 'dt', 'rf'], exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000017B19B1A150>, 'include': ['lr', 'dt', 'rf'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-05-19 13:55:16,373:INFO:Checking exceptions
2024-05-19 13:55:16,381:INFO:Preparing display monitor
2024-05-19 13:55:16,418:INFO:Initializing Logistic Regression
2024-05-19 13:55:16,418:INFO:Total runtime is 0.0 minutes
2024-05-19 13:55:16,423:INFO:SubProcess create_model() called ==================================
2024-05-19 13:55:16,424:INFO:Initializing create_model()
2024-05-19 13:55:16,424:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017B19B1A150>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017B181D3910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 13:55:16,424:INFO:Checking exceptions
2024-05-19 13:55:16,424:INFO:Importing libraries
2024-05-19 13:55:16,424:INFO:Copying training dataset
2024-05-19 13:55:16,429:INFO:Defining folds
2024-05-19 13:55:16,429:INFO:Declaring metric variables
2024-05-19 13:55:16,434:INFO:Importing untrained model
2024-05-19 13:55:16,438:INFO:Logistic Regression Imported successfully
2024-05-19 13:55:16,447:INFO:Starting cross validation
2024-05-19 13:55:16,449:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 13:55:17,337:WARNING:lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression

2024-05-19 13:55:18,225:WARNING:lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression

2024-05-19 13:55:20,493:WARNING:lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression

2024-05-19 13:55:20,942:INFO:Calculating mean and std
2024-05-19 13:55:20,945:INFO:Creating metrics dataframe
2024-05-19 13:55:20,955:INFO:Uploading results into container
2024-05-19 13:55:20,956:INFO:Uploading model into container now
2024-05-19 13:55:20,957:INFO:_master_model_container: 1
2024-05-19 13:55:20,957:INFO:_display_container: 2
2024-05-19 13:55:20,957:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=888, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-19 13:55:20,957:INFO:create_model() successfully completed......................................
2024-05-19 13:55:21,225:INFO:SubProcess create_model() end ==================================
2024-05-19 13:55:21,225:INFO:Creating metrics dataframe
2024-05-19 13:55:21,239:INFO:Initializing Decision Tree Classifier
2024-05-19 13:55:21,240:INFO:Total runtime is 0.0803709348042806 minutes
2024-05-19 13:55:21,246:INFO:SubProcess create_model() called ==================================
2024-05-19 13:55:21,246:INFO:Initializing create_model()
2024-05-19 13:55:21,246:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017B19B1A150>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017B181D3910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 13:55:21,246:INFO:Checking exceptions
2024-05-19 13:55:21,246:INFO:Importing libraries
2024-05-19 13:55:21,246:INFO:Copying training dataset
2024-05-19 13:55:21,255:INFO:Defining folds
2024-05-19 13:55:21,255:INFO:Declaring metric variables
2024-05-19 13:55:21,260:INFO:Importing untrained model
2024-05-19 13:55:21,266:INFO:Decision Tree Classifier Imported successfully
2024-05-19 13:55:21,276:INFO:Starting cross validation
2024-05-19 13:55:21,277:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 13:55:21,626:INFO:Calculating mean and std
2024-05-19 13:55:21,627:INFO:Creating metrics dataframe
2024-05-19 13:55:21,630:INFO:Uploading results into container
2024-05-19 13:55:21,631:INFO:Uploading model into container now
2024-05-19 13:55:21,632:INFO:_master_model_container: 2
2024-05-19 13:55:21,632:INFO:_display_container: 2
2024-05-19 13:55:21,632:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best')
2024-05-19 13:55:21,632:INFO:create_model() successfully completed......................................
2024-05-19 13:55:21,869:INFO:SubProcess create_model() end ==================================
2024-05-19 13:55:21,869:INFO:Creating metrics dataframe
2024-05-19 13:55:21,889:INFO:Initializing Random Forest Classifier
2024-05-19 13:55:21,889:INFO:Total runtime is 0.09117980003356935 minutes
2024-05-19 13:55:21,893:INFO:SubProcess create_model() called ==================================
2024-05-19 13:55:21,894:INFO:Initializing create_model()
2024-05-19 13:55:21,894:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017B19B1A150>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017B181D3910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 13:55:21,894:INFO:Checking exceptions
2024-05-19 13:55:21,894:INFO:Importing libraries
2024-05-19 13:55:21,894:INFO:Copying training dataset
2024-05-19 13:55:21,904:INFO:Defining folds
2024-05-19 13:55:21,904:INFO:Declaring metric variables
2024-05-19 13:55:21,911:INFO:Importing untrained model
2024-05-19 13:55:21,919:INFO:Random Forest Classifier Imported successfully
2024-05-19 13:55:21,928:INFO:Starting cross validation
2024-05-19 13:55:21,929:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 13:55:26,925:INFO:Calculating mean and std
2024-05-19 13:55:26,926:INFO:Creating metrics dataframe
2024-05-19 13:55:26,931:INFO:Uploading results into container
2024-05-19 13:55:26,932:INFO:Uploading model into container now
2024-05-19 13:55:26,932:INFO:_master_model_container: 3
2024-05-19 13:55:26,932:INFO:_display_container: 2
2024-05-19 13:55:26,933:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False)
2024-05-19 13:55:26,933:INFO:create_model() successfully completed......................................
2024-05-19 13:55:27,160:INFO:SubProcess create_model() end ==================================
2024-05-19 13:55:27,160:INFO:Creating metrics dataframe
2024-05-19 13:55:27,188:INFO:Initializing create_model()
2024-05-19 13:55:27,188:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017B19B1A150>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 13:55:27,190:INFO:Checking exceptions
2024-05-19 13:55:27,192:INFO:Importing libraries
2024-05-19 13:55:27,192:INFO:Copying training dataset
2024-05-19 13:55:27,196:INFO:Defining folds
2024-05-19 13:55:27,196:INFO:Declaring metric variables
2024-05-19 13:55:27,196:INFO:Importing untrained model
2024-05-19 13:55:27,196:INFO:Declaring custom model
2024-05-19 13:55:27,197:INFO:Decision Tree Classifier Imported successfully
2024-05-19 13:55:27,198:INFO:Cross validation set to False
2024-05-19 13:55:27,198:INFO:Fitting Model
2024-05-19 13:55:27,214:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best')
2024-05-19 13:55:27,214:INFO:create_model() successfully completed......................................
2024-05-19 13:55:27,428:INFO:Creating Dashboard logs
2024-05-19 13:55:27,435:INFO:Model: Decision Tree Classifier
2024-05-19 13:55:27,506:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 888, 'splitter': 'best'}
2024-05-19 13:55:27,627:INFO:Initializing predict_model()
2024-05-19 13:55:27,627:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017B19B1A150>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017B02BBB240>)
2024-05-19 13:55:27,627:INFO:Checking exceptions
2024-05-19 13:55:27,627:INFO:Preloading libraries
2024-05-19 13:55:27,918:WARNING:Setuptools is replacing distutils.

2024-05-19 13:55:28,221:INFO:Creating Dashboard logs
2024-05-19 13:55:28,226:INFO:Model: Random Forest Classifier
2024-05-19 13:55:28,295:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 888, 'verbose': 0, 'warm_start': False}
2024-05-19 13:55:28,695:INFO:Creating Dashboard logs
2024-05-19 13:55:28,701:INFO:Model: Logistic Regression
2024-05-19 13:55:28,771:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 888, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-05-19 13:55:29,325:INFO:_master_model_container: 3
2024-05-19 13:55:29,325:INFO:_display_container: 2
2024-05-19 13:55:29,326:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best')
2024-05-19 13:55:29,326:INFO:compare_models() successfully completed......................................
2024-05-19 14:15:13,313:INFO:PyCaret ClassificationExperiment
2024-05-19 14:15:13,313:INFO:Logging name: diabetes
2024-05-19 14:15:13,313:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-19 14:15:13,314:INFO:version 3.2.0
2024-05-19 14:15:13,314:INFO:Initializing setup()
2024-05-19 14:15:13,314:INFO:self.USI: 8844
2024-05-19 14:15:13,314:INFO:self._variable_keys: {'_ml_usecase', 'is_multiclass', 'fold_groups_param', 'data', 'html_param', 'X_train', 'y_test', 'target_param', 'logging_param', 'exp_name_log', 'USI', 'y_train', 'log_plots_param', '_available_plots', 'memory', 'y', 'X_test', 'fold_generator', 'exp_id', 'n_jobs_param', 'fold_shuffle_param', 'pipeline', 'gpu_param', 'fix_imbalance', 'gpu_n_jobs_param', 'X', 'seed', 'idx'}
2024-05-19 14:15:13,314:INFO:Checking environment
2024-05-19 14:15:13,314:INFO:python_version: 3.11.5
2024-05-19 14:15:13,314:INFO:python_build: ('tags/v3.11.5:cce6ba9', 'Aug 24 2023 14:38:34')
2024-05-19 14:15:13,315:INFO:machine: AMD64
2024-05-19 14:15:13,315:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-19 14:15:13,321:INFO:Memory: svmem(total=16968298496, available=2442702848, percent=85.6, used=14525595648, free=2442702848)
2024-05-19 14:15:13,322:INFO:Physical Core: 4
2024-05-19 14:15:13,322:INFO:Logical Core: 8
2024-05-19 14:15:13,322:INFO:Checking libraries
2024-05-19 14:15:13,322:INFO:System:
2024-05-19 14:15:13,322:INFO:    python: 3.11.5 (tags/v3.11.5:cce6ba9, Aug 24 2023, 14:38:34) [MSC v.1936 64 bit (AMD64)]
2024-05-19 14:15:13,322:INFO:executable: c:\Users\anson\AppData\Local\Programs\Python\Python311\python.exe
2024-05-19 14:15:13,322:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-19 14:15:13,322:INFO:PyCaret required dependencies:
2024-05-19 14:15:13,323:INFO:                 pip: 23.3.2
2024-05-19 14:15:13,323:INFO:          setuptools: 69.0.3
2024-05-19 14:15:13,323:INFO:             pycaret: 3.2.0
2024-05-19 14:15:13,323:INFO:             IPython: 8.12.3
2024-05-19 14:15:13,323:INFO:          ipywidgets: 7.8.1
2024-05-19 14:15:13,323:INFO:                tqdm: 4.66.1
2024-05-19 14:15:13,323:INFO:               numpy: 1.24.2
2024-05-19 14:15:13,323:INFO:              pandas: 1.5.2
2024-05-19 14:15:13,323:INFO:              jinja2: 3.1.3
2024-05-19 14:15:13,323:INFO:               scipy: 1.10.1
2024-05-19 14:15:13,323:INFO:              joblib: 1.2.0
2024-05-19 14:15:13,323:INFO:             sklearn: 1.2.2
2024-05-19 14:15:13,323:INFO:                pyod: 1.1.2
2024-05-19 14:15:13,323:INFO:            imblearn: 0.12.0
2024-05-19 14:15:13,324:INFO:   category_encoders: 2.6.3
2024-05-19 14:15:13,324:INFO:            lightgbm: 4.3.0
2024-05-19 14:15:13,324:INFO:               numba: 0.58.1
2024-05-19 14:15:13,324:INFO:            requests: 2.31.0
2024-05-19 14:15:13,324:INFO:          matplotlib: 3.6.0
2024-05-19 14:15:13,324:INFO:          scikitplot: 0.3.7
2024-05-19 14:15:13,324:INFO:         yellowbrick: 1.5
2024-05-19 14:15:13,324:INFO:              plotly: 5.18.0
2024-05-19 14:15:13,324:INFO:    plotly-resampler: Not installed
2024-05-19 14:15:13,324:INFO:             kaleido: 0.2.1
2024-05-19 14:15:13,324:INFO:           schemdraw: 0.15
2024-05-19 14:15:13,324:INFO:         statsmodels: 0.14.0
2024-05-19 14:15:13,324:INFO:              sktime: 0.21.1
2024-05-19 14:15:13,324:INFO:               tbats: 1.1.3
2024-05-19 14:15:13,324:INFO:            pmdarima: 2.0.4
2024-05-19 14:15:13,324:INFO:              psutil: 5.9.5
2024-05-19 14:15:13,324:INFO:          markupsafe: 2.1.2
2024-05-19 14:15:13,325:INFO:             pickle5: Not installed
2024-05-19 14:15:13,325:INFO:         cloudpickle: 2.2.1
2024-05-19 14:15:13,325:INFO:         deprecation: 2.1.0
2024-05-19 14:15:13,325:INFO:              xxhash: 3.4.1
2024-05-19 14:15:13,325:INFO:           wurlitzer: Not installed
2024-05-19 14:15:13,325:INFO:PyCaret optional dependencies:
2024-05-19 14:15:13,325:INFO:                shap: 0.44.1
2024-05-19 14:15:13,325:INFO:           interpret: 0.5.0
2024-05-19 14:15:13,325:INFO:                umap: 0.5.5
2024-05-19 14:15:13,325:INFO:     ydata_profiling: 4.6.0
2024-05-19 14:15:13,325:INFO:  explainerdashboard: 0.4.5
2024-05-19 14:15:13,325:INFO:             autoviz: Not installed
2024-05-19 14:15:13,325:INFO:           fairlearn: 0.7.0
2024-05-19 14:15:13,325:INFO:          deepchecks: Not installed
2024-05-19 14:15:13,325:INFO:             xgboost: 2.0.3
2024-05-19 14:15:13,325:INFO:            catboost: 1.2.2
2024-05-19 14:15:13,325:INFO:              kmodes: 0.12.2
2024-05-19 14:15:13,325:INFO:             mlxtend: 0.23.1
2024-05-19 14:15:13,325:INFO:       statsforecast: 1.5.0
2024-05-19 14:15:13,325:INFO:        tune_sklearn: Not installed
2024-05-19 14:15:13,325:INFO:                 ray: Not installed
2024-05-19 14:15:13,325:INFO:            hyperopt: 0.2.7
2024-05-19 14:15:13,325:INFO:              optuna: 3.5.0
2024-05-19 14:15:13,326:INFO:               skopt: 0.9.0
2024-05-19 14:15:13,326:INFO:              mlflow: 2.10.0
2024-05-19 14:15:13,326:INFO:              gradio: 3.50.2
2024-05-19 14:15:13,326:INFO:             fastapi: 0.109.0
2024-05-19 14:15:13,326:INFO:             uvicorn: 0.27.0
2024-05-19 14:15:13,326:INFO:              m2cgen: 0.10.0
2024-05-19 14:15:13,326:INFO:           evidently: 0.4.17
2024-05-19 14:15:13,326:INFO:               fugue: 0.8.6
2024-05-19 14:15:13,326:INFO:           streamlit: 1.30.0
2024-05-19 14:15:13,326:INFO:             prophet: Not installed
2024-05-19 14:15:13,326:INFO:None
2024-05-19 14:15:13,326:INFO:Set up GPU usage.
2024-05-19 14:15:13,326:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:13,326:WARNING:cuML is outdated or not found. Required version is >=23.08.
                Please visit https://rapids.ai/install for installation instructions.
2024-05-19 14:15:13,326:INFO:Set up data.
2024-05-19 14:15:13,339:INFO:Set up folding strategy.
2024-05-19 14:15:13,340:INFO:Set up train/test split.
2024-05-19 14:15:13,346:INFO:Set up index.
2024-05-19 14:15:13,346:INFO:Assigning column types.
2024-05-19 14:15:13,351:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-19 14:15:13,352:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:13,400:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 14:15:13,400:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:13,401:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:13,402:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-19 14:15:13,402:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:13,422:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:13,427:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:13,428:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 14:15:13,462:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 14:15:13,464:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:13,540:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 14:15:13,540:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:13,540:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:13,541:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-19 14:15:13,541:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:13,569:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:13,574:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:13,575:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 14:15:13,590:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 14:15:13,591:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-19 14:15:13,591:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:13,665:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:13,666:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:13,667:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-19 14:15:13,667:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:13,703:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:13,709:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:13,710:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 14:15:13,727:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 14:15:13,728:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:13,814:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:13,814:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:13,816:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-19 14:15:13,816:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:13,847:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:13,853:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:13,854:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 14:15:13,877:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 14:15:13,877:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-19 14:15:13,878:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:13,965:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:13,965:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:13,966:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:13,999:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:14,003:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:14,005:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 14:15:14,022:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 14:15:14,023:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:14,102:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:14,103:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:14,103:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:14,131:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:14,136:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:14,137:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 14:15:14,151:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 14:15:14,156:INFO:Preparing preprocessing pipeline...
2024-05-19 14:15:14,157:INFO:Set up simple imputation.
2024-05-19 14:15:14,158:INFO:Set up column name cleaning.
2024-05-19 14:15:14,183:INFO:Finished creating preprocessing pipeline.
2024-05-19 14:15:14,190:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\anson\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'tx', 'dx', 'bmi',
                                             'leg', 'armc', 'waist', 'sub',
                                             'gh', 'albumin', 'sex_male',
                                             're_Non-Hispanic Black',
                                             're_Non-Hispanic White',
                                             're_Other Hispanic',
                                             're_Other Race Including '
                                             'Multi-Racial'],
                                    transformer=Sim...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-05-19 14:15:14,190:INFO:Creating final display dataframe.
2024-05-19 14:15:14,303:INFO:Setup _display_container:                     Description            Value
0                    Session id              888
1                        Target           Target
2                   Target type           Binary
3           Original data shape       (4756, 17)
4        Transformed data shape       (4756, 17)
5   Transformed train set shape       (3329, 17)
6    Transformed test set shape       (1427, 17)
7              Numeric features               16
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU             True
16               Log Experiment     MlflowLogger
17              Experiment Name         diabetes
18                          USI             8844
2024-05-19 14:15:14,303:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:14,345:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:14,346:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:14,346:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:14,368:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:14,373:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:14,374:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 14:15:14,389:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 14:15:14,390:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:14,465:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:14,466:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:14,467:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:14,501:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:14,505:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 14:15:14,505:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 14:15:14,524:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 14:15:14,526:INFO:Logging experiment in loggers
2024-05-19 14:15:14,672:INFO:SubProcess save_model() called ==================================
2024-05-19 14:15:14,681:INFO:Initializing save_model()
2024-05-19 14:15:14,681:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\anson\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'tx', 'dx', 'bmi',
                                             'leg', 'armc', 'waist', 'sub',
                                             'gh', 'albumin', 'sex_male',
                                             're_Non-Hispanic Black',
                                             're_Non-Hispanic White',
                                             're_Other Hispanic',
                                             're_Other Race Including '
                                             'Multi-Racial'],
                                    transformer=Sim...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=C:\Users\anson\AppData\Local\Temp\tmp33icl7vc\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\anson\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'tx', 'dx', 'bmi',
                                             'leg', 'armc', 'waist', 'sub',
                                             'gh', 'albumin', 'sex_male',
                                             're_Non-Hispanic Black',
                                             're_Non-Hispanic White',
                                             're_Other Hispanic',
                                             're_Other Race Including '
                                             'Multi-Racial'],
                                    transformer=Sim...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-05-19 14:15:14,681:INFO:Adding model into prep_pipe
2024-05-19 14:15:14,681:WARNING:Only Model saved as it was a pipeline.
2024-05-19 14:15:14,684:INFO:C:\Users\anson\AppData\Local\Temp\tmp33icl7vc\Transformation Pipeline.pkl saved in current working directory
2024-05-19 14:15:14,688:INFO:Pipeline(memory=FastMemory(location=C:\Users\anson\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'tx', 'dx', 'bmi',
                                             'leg', 'armc', 'waist', 'sub',
                                             'gh', 'albumin', 'sex_male',
                                             're_Non-Hispanic Black',
                                             're_Non-Hispanic White',
                                             're_Other Hispanic',
                                             're_Other Race Including '
                                             'Multi-Racial'],
                                    transformer=Sim...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-05-19 14:15:14,688:INFO:save_model() successfully completed......................................
2024-05-19 14:15:14,961:INFO:SubProcess save_model() end ==================================
2024-05-19 14:15:15,028:INFO:setup() successfully completed in 1.22s...............
2024-05-19 14:15:20,057:INFO:Initializing compare_models()
2024-05-19 14:15:20,057:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017B151E5F10>, include=['lr', 'dt', 'rf'], exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000017B151E5F10>, 'include': ['lr', 'dt', 'rf'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-05-19 14:15:20,057:INFO:Checking exceptions
2024-05-19 14:15:20,063:INFO:Preparing display monitor
2024-05-19 14:15:20,100:INFO:Initializing Logistic Regression
2024-05-19 14:15:20,100:INFO:Total runtime is 0.0 minutes
2024-05-19 14:15:20,107:INFO:SubProcess create_model() called ==================================
2024-05-19 14:15:20,107:INFO:Initializing create_model()
2024-05-19 14:15:20,107:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017B151E5F10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017B24BCBD50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 14:15:20,107:INFO:Checking exceptions
2024-05-19 14:15:20,108:INFO:Importing libraries
2024-05-19 14:15:20,108:INFO:Copying training dataset
2024-05-19 14:15:20,118:INFO:Defining folds
2024-05-19 14:15:20,119:INFO:Declaring metric variables
2024-05-19 14:15:20,125:INFO:Importing untrained model
2024-05-19 14:15:20,132:INFO:Logistic Regression Imported successfully
2024-05-19 14:15:20,141:INFO:Starting cross validation
2024-05-19 14:15:20,142:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 14:15:21,822:WARNING:lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression

2024-05-19 14:15:22,821:WARNING:lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression

2024-05-19 14:15:23,702:WARNING:lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression

2024-05-19 14:15:24,149:WARNING:lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression

2024-05-19 14:15:24,602:WARNING:lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression

2024-05-19 14:15:24,617:INFO:Calculating mean and std
2024-05-19 14:15:24,618:INFO:Creating metrics dataframe
2024-05-19 14:15:24,620:INFO:Uploading results into container
2024-05-19 14:15:24,621:INFO:Uploading model into container now
2024-05-19 14:15:24,621:INFO:_master_model_container: 1
2024-05-19 14:15:24,621:INFO:_display_container: 2
2024-05-19 14:15:24,621:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=888, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-19 14:15:24,622:INFO:create_model() successfully completed......................................
2024-05-19 14:15:24,879:INFO:SubProcess create_model() end ==================================
2024-05-19 14:15:24,880:INFO:Creating metrics dataframe
2024-05-19 14:15:24,895:INFO:Initializing Decision Tree Classifier
2024-05-19 14:15:24,895:INFO:Total runtime is 0.07991693019866944 minutes
2024-05-19 14:15:24,902:INFO:SubProcess create_model() called ==================================
2024-05-19 14:15:24,902:INFO:Initializing create_model()
2024-05-19 14:15:24,902:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017B151E5F10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017B24BCBD50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 14:15:24,903:INFO:Checking exceptions
2024-05-19 14:15:24,903:INFO:Importing libraries
2024-05-19 14:15:24,903:INFO:Copying training dataset
2024-05-19 14:15:24,908:INFO:Defining folds
2024-05-19 14:15:24,909:INFO:Declaring metric variables
2024-05-19 14:15:24,913:INFO:Importing untrained model
2024-05-19 14:15:24,921:INFO:Decision Tree Classifier Imported successfully
2024-05-19 14:15:24,931:INFO:Starting cross validation
2024-05-19 14:15:24,933:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 14:15:25,253:INFO:Calculating mean and std
2024-05-19 14:15:25,255:INFO:Creating metrics dataframe
2024-05-19 14:15:25,258:INFO:Uploading results into container
2024-05-19 14:15:25,259:INFO:Uploading model into container now
2024-05-19 14:15:25,259:INFO:_master_model_container: 2
2024-05-19 14:15:25,259:INFO:_display_container: 2
2024-05-19 14:15:25,260:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best')
2024-05-19 14:15:25,260:INFO:create_model() successfully completed......................................
2024-05-19 14:15:25,539:INFO:SubProcess create_model() end ==================================
2024-05-19 14:15:25,539:INFO:Creating metrics dataframe
2024-05-19 14:15:25,557:INFO:Initializing Random Forest Classifier
2024-05-19 14:15:25,557:INFO:Total runtime is 0.09093881050745647 minutes
2024-05-19 14:15:25,562:INFO:SubProcess create_model() called ==================================
2024-05-19 14:15:25,562:INFO:Initializing create_model()
2024-05-19 14:15:25,564:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017B151E5F10>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017B24BCBD50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 14:15:25,564:INFO:Checking exceptions
2024-05-19 14:15:25,564:INFO:Importing libraries
2024-05-19 14:15:25,564:INFO:Copying training dataset
2024-05-19 14:15:25,574:INFO:Defining folds
2024-05-19 14:15:25,575:INFO:Declaring metric variables
2024-05-19 14:15:25,584:INFO:Importing untrained model
2024-05-19 14:15:25,590:INFO:Random Forest Classifier Imported successfully
2024-05-19 14:15:25,601:INFO:Starting cross validation
2024-05-19 14:15:25,603:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 14:15:31,436:INFO:Calculating mean and std
2024-05-19 14:15:31,437:INFO:Creating metrics dataframe
2024-05-19 14:15:31,441:INFO:Uploading results into container
2024-05-19 14:15:31,442:INFO:Uploading model into container now
2024-05-19 14:15:31,442:INFO:_master_model_container: 3
2024-05-19 14:15:31,442:INFO:_display_container: 2
2024-05-19 14:15:31,442:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False)
2024-05-19 14:15:31,444:INFO:create_model() successfully completed......................................
2024-05-19 14:15:31,690:INFO:SubProcess create_model() end ==================================
2024-05-19 14:15:31,690:INFO:Creating metrics dataframe
2024-05-19 14:15:31,719:INFO:Initializing create_model()
2024-05-19 14:15:31,719:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017B151E5F10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 14:15:31,721:INFO:Checking exceptions
2024-05-19 14:15:31,725:INFO:Importing libraries
2024-05-19 14:15:31,725:INFO:Copying training dataset
2024-05-19 14:15:31,734:INFO:Defining folds
2024-05-19 14:15:31,734:INFO:Declaring metric variables
2024-05-19 14:15:31,735:INFO:Importing untrained model
2024-05-19 14:15:31,735:INFO:Declaring custom model
2024-05-19 14:15:31,736:INFO:Decision Tree Classifier Imported successfully
2024-05-19 14:15:31,737:INFO:Cross validation set to False
2024-05-19 14:15:31,737:INFO:Fitting Model
2024-05-19 14:15:31,757:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best')
2024-05-19 14:15:31,757:INFO:create_model() successfully completed......................................
2024-05-19 14:15:32,070:INFO:Creating Dashboard logs
2024-05-19 14:15:32,075:INFO:Model: Decision Tree Classifier
2024-05-19 14:15:32,140:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 888, 'splitter': 'best'}
2024-05-19 14:15:32,254:INFO:Initializing predict_model()
2024-05-19 14:15:32,255:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017B151E5F10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017B1982C9A0>)
2024-05-19 14:15:32,255:INFO:Checking exceptions
2024-05-19 14:15:32,255:INFO:Preloading libraries
2024-05-19 14:15:32,841:INFO:Creating Dashboard logs
2024-05-19 14:15:32,845:INFO:Model: Random Forest Classifier
2024-05-19 14:15:32,907:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 888, 'verbose': 0, 'warm_start': False}
2024-05-19 14:15:33,438:INFO:Creating Dashboard logs
2024-05-19 14:15:33,442:INFO:Model: Logistic Regression
2024-05-19 14:15:33,518:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 888, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-05-19 14:15:34,149:INFO:_master_model_container: 3
2024-05-19 14:15:34,149:INFO:_display_container: 2
2024-05-19 14:15:34,150:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best')
2024-05-19 14:15:34,150:INFO:compare_models() successfully completed......................................
2024-05-19 14:15:53,445:INFO:Initializing compare_models()
2024-05-19 14:15:53,445:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017B151E5F10>, include=['lr', 'dt', 'rf'], exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000017B151E5F10>, 'include': ['lr', 'dt', 'rf'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-05-19 14:15:53,445:INFO:Checking exceptions
2024-05-19 14:15:53,450:INFO:Preparing display monitor
2024-05-19 14:15:53,475:INFO:Initializing Logistic Regression
2024-05-19 14:15:53,475:INFO:Total runtime is 0.0 minutes
2024-05-19 14:15:53,482:INFO:SubProcess create_model() called ==================================
2024-05-19 14:15:53,482:INFO:Initializing create_model()
2024-05-19 14:15:53,482:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017B151E5F10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017B17F7F050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 14:15:53,483:INFO:Checking exceptions
2024-05-19 14:15:53,483:INFO:Importing libraries
2024-05-19 14:15:53,483:INFO:Copying training dataset
2024-05-19 14:15:53,488:INFO:Defining folds
2024-05-19 14:15:53,489:INFO:Declaring metric variables
2024-05-19 14:15:53,493:INFO:Importing untrained model
2024-05-19 14:15:53,499:INFO:Logistic Regression Imported successfully
2024-05-19 14:15:53,508:INFO:Starting cross validation
2024-05-19 14:15:53,509:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 14:15:55,202:WARNING:lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression

2024-05-19 14:15:56,112:WARNING:lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression

2024-05-19 14:15:57,088:WARNING:lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression

2024-05-19 14:15:57,540:WARNING:lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression

2024-05-19 14:15:58,039:WARNING:lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression

2024-05-19 14:15:58,055:INFO:Calculating mean and std
2024-05-19 14:15:58,056:INFO:Creating metrics dataframe
2024-05-19 14:15:58,059:INFO:Uploading results into container
2024-05-19 14:15:58,059:INFO:Uploading model into container now
2024-05-19 14:15:58,060:INFO:_master_model_container: 4
2024-05-19 14:15:58,060:INFO:_display_container: 3
2024-05-19 14:15:58,060:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=888, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-19 14:15:58,061:INFO:create_model() successfully completed......................................
2024-05-19 14:15:58,323:INFO:SubProcess create_model() end ==================================
2024-05-19 14:15:58,323:INFO:Creating metrics dataframe
2024-05-19 14:15:58,337:INFO:Initializing Decision Tree Classifier
2024-05-19 14:15:58,337:INFO:Total runtime is 0.08102862437566122 minutes
2024-05-19 14:15:58,341:INFO:SubProcess create_model() called ==================================
2024-05-19 14:15:58,342:INFO:Initializing create_model()
2024-05-19 14:15:58,342:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017B151E5F10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017B17F7F050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 14:15:58,342:INFO:Checking exceptions
2024-05-19 14:15:58,342:INFO:Importing libraries
2024-05-19 14:15:58,342:INFO:Copying training dataset
2024-05-19 14:15:58,357:INFO:Defining folds
2024-05-19 14:15:58,357:INFO:Declaring metric variables
2024-05-19 14:15:58,362:INFO:Importing untrained model
2024-05-19 14:15:58,370:INFO:Decision Tree Classifier Imported successfully
2024-05-19 14:15:58,402:INFO:Starting cross validation
2024-05-19 14:15:58,404:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 14:15:58,792:INFO:Calculating mean and std
2024-05-19 14:15:58,793:INFO:Creating metrics dataframe
2024-05-19 14:15:58,800:INFO:Uploading results into container
2024-05-19 14:15:58,801:INFO:Uploading model into container now
2024-05-19 14:15:58,801:INFO:_master_model_container: 5
2024-05-19 14:15:58,801:INFO:_display_container: 3
2024-05-19 14:15:58,802:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best')
2024-05-19 14:15:58,802:INFO:create_model() successfully completed......................................
2024-05-19 14:15:59,059:INFO:SubProcess create_model() end ==================================
2024-05-19 14:15:59,059:INFO:Creating metrics dataframe
2024-05-19 14:15:59,077:INFO:Initializing Random Forest Classifier
2024-05-19 14:15:59,077:INFO:Total runtime is 0.09336431423823038 minutes
2024-05-19 14:15:59,083:INFO:SubProcess create_model() called ==================================
2024-05-19 14:15:59,083:INFO:Initializing create_model()
2024-05-19 14:15:59,084:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017B151E5F10>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017B17F7F050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 14:15:59,084:INFO:Checking exceptions
2024-05-19 14:15:59,084:INFO:Importing libraries
2024-05-19 14:15:59,084:INFO:Copying training dataset
2024-05-19 14:15:59,090:INFO:Defining folds
2024-05-19 14:15:59,091:INFO:Declaring metric variables
2024-05-19 14:15:59,095:INFO:Importing untrained model
2024-05-19 14:15:59,101:INFO:Random Forest Classifier Imported successfully
2024-05-19 14:15:59,109:INFO:Starting cross validation
2024-05-19 14:15:59,110:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 14:16:01,803:INFO:Calculating mean and std
2024-05-19 14:16:01,806:INFO:Creating metrics dataframe
2024-05-19 14:16:01,810:INFO:Uploading results into container
2024-05-19 14:16:01,811:INFO:Uploading model into container now
2024-05-19 14:16:01,811:INFO:_master_model_container: 6
2024-05-19 14:16:01,811:INFO:_display_container: 3
2024-05-19 14:16:01,812:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False)
2024-05-19 14:16:01,812:INFO:create_model() successfully completed......................................
2024-05-19 14:16:02,065:INFO:SubProcess create_model() end ==================================
2024-05-19 14:16:02,066:INFO:Creating metrics dataframe
2024-05-19 14:16:02,095:INFO:Initializing create_model()
2024-05-19 14:16:02,095:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017B151E5F10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 14:16:02,096:INFO:Checking exceptions
2024-05-19 14:16:02,099:INFO:Importing libraries
2024-05-19 14:16:02,099:INFO:Copying training dataset
2024-05-19 14:16:02,104:INFO:Defining folds
2024-05-19 14:16:02,104:INFO:Declaring metric variables
2024-05-19 14:16:02,105:INFO:Importing untrained model
2024-05-19 14:16:02,105:INFO:Declaring custom model
2024-05-19 14:16:02,105:INFO:Decision Tree Classifier Imported successfully
2024-05-19 14:16:02,106:INFO:Cross validation set to False
2024-05-19 14:16:02,106:INFO:Fitting Model
2024-05-19 14:16:02,120:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best')
2024-05-19 14:16:02,121:INFO:create_model() successfully completed......................................
2024-05-19 14:16:02,387:INFO:Creating Dashboard logs
2024-05-19 14:16:02,393:INFO:Model: Decision Tree Classifier
2024-05-19 14:16:02,457:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 888, 'splitter': 'best'}
2024-05-19 14:16:02,583:INFO:Initializing predict_model()
2024-05-19 14:16:02,583:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017B151E5F10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017B19E5E5C0>)
2024-05-19 14:16:02,583:INFO:Checking exceptions
2024-05-19 14:16:02,584:INFO:Preloading libraries
2024-05-19 14:16:03,315:INFO:Creating Dashboard logs
2024-05-19 14:16:03,318:INFO:Model: Random Forest Classifier
2024-05-19 14:16:03,397:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 888, 'verbose': 0, 'warm_start': False}
2024-05-19 14:16:03,868:INFO:Creating Dashboard logs
2024-05-19 14:16:03,872:INFO:Model: Logistic Regression
2024-05-19 14:16:03,944:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 888, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-05-19 14:16:04,493:INFO:_master_model_container: 6
2024-05-19 14:16:04,493:INFO:_display_container: 3
2024-05-19 14:16:04,495:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best')
2024-05-19 14:16:04,495:INFO:compare_models() successfully completed......................................
2024-05-19 16:29:25,926:INFO:Initializing create_model()
2024-05-19 16:29:25,926:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017B151E5F10>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={'penalty': 'l1', 'solver': 'liblinear'})
2024-05-19 16:29:25,926:INFO:Checking exceptions
2024-05-19 16:29:25,946:INFO:Importing libraries
2024-05-19 16:29:25,946:INFO:Copying training dataset
2024-05-19 16:29:25,954:INFO:Defining folds
2024-05-19 16:29:25,954:INFO:Declaring metric variables
2024-05-19 16:29:25,957:INFO:Importing untrained model
2024-05-19 16:29:25,961:INFO:Logistic Regression Imported successfully
2024-05-19 16:29:25,970:INFO:Starting cross validation
2024-05-19 16:29:25,973:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:29:28,252:INFO:Calculating mean and std
2024-05-19 16:29:28,254:INFO:Creating metrics dataframe
2024-05-19 16:29:28,258:INFO:Finalizing model
2024-05-19 16:29:28,592:INFO:Creating Dashboard logs
2024-05-19 16:29:28,595:INFO:Model: Logistic Regression
2024-05-19 16:29:28,710:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l1', 'random_state': 888, 'solver': 'liblinear', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-05-19 16:29:28,948:INFO:Initializing predict_model()
2024-05-19 16:29:28,948:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017B151E5F10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017B1982FA60>)
2024-05-19 16:29:28,949:INFO:Checking exceptions
2024-05-19 16:29:28,949:INFO:Preloading libraries
2024-05-19 16:29:55,613:INFO:Initializing create_model()
2024-05-19 16:29:55,613:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017B151E5F10>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={'penalty': 'l1', 'solver': 'liblinear'})
2024-05-19 16:29:55,613:INFO:Checking exceptions
2024-05-19 16:29:55,636:INFO:Importing libraries
2024-05-19 16:29:55,636:INFO:Copying training dataset
2024-05-19 16:29:55,644:INFO:Defining folds
2024-05-19 16:29:55,644:INFO:Declaring metric variables
2024-05-19 16:29:55,650:INFO:Importing untrained model
2024-05-19 16:29:55,659:INFO:Logistic Regression Imported successfully
2024-05-19 16:29:55,671:INFO:Starting cross validation
2024-05-19 16:29:55,672:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:29:58,196:INFO:Calculating mean and std
2024-05-19 16:29:58,197:INFO:Creating metrics dataframe
2024-05-19 16:29:58,204:INFO:Finalizing model
2024-05-19 16:29:58,572:INFO:Creating Dashboard logs
2024-05-19 16:29:58,574:INFO:Model: Logistic Regression
2024-05-19 16:29:58,637:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l1', 'random_state': 888, 'solver': 'liblinear', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-05-19 16:29:58,780:INFO:Initializing predict_model()
2024-05-19 16:29:58,781:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017B151E5F10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017B26F0AD40>)
2024-05-19 16:29:58,781:INFO:Checking exceptions
2024-05-19 16:29:58,781:INFO:Preloading libraries
2024-05-19 16:29:59,479:INFO:Uploading results into container
2024-05-19 16:29:59,480:INFO:Uploading model into container now
2024-05-19 16:29:59,497:INFO:_master_model_container: 7
2024-05-19 16:29:59,497:INFO:_display_container: 4
2024-05-19 16:29:59,498:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-19 16:29:59,498:INFO:create_model() successfully completed......................................
2024-05-19 16:29:59,806:INFO:Initializing tune_model()
2024-05-19 16:29:59,806:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000017B151E5F10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False), fold=10, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-19 16:29:59,806:INFO:Checking exceptions
2024-05-19 16:29:59,826:INFO:Copying training dataset
2024-05-19 16:29:59,832:INFO:Checking base model
2024-05-19 16:29:59,832:INFO:Base model : Logistic Regression
2024-05-19 16:29:59,838:INFO:Declaring metric variables
2024-05-19 16:29:59,842:INFO:Defining Hyperparameters
2024-05-19 16:30:00,209:INFO:Tuning with n_jobs=-1
2024-05-19 16:30:00,210:INFO:Initializing RandomizedSearchCV
2024-05-19 16:32:57,614:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:32:57,614:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:32:57,614:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:32:57,614:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:16,834:INFO:PyCaret ClassificationExperiment
2024-05-19 16:33:16,835:INFO:Logging name: diabetes
2024-05-19 16:33:16,835:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-19 16:33:16,835:INFO:version 3.2.0
2024-05-19 16:33:16,835:INFO:Initializing setup()
2024-05-19 16:33:16,835:INFO:self.USI: b310
2024-05-19 16:33:16,835:INFO:self._variable_keys: {'n_jobs_param', '_available_plots', 'gpu_n_jobs_param', 'y_train', 'fold_shuffle_param', 'exp_name_log', 'html_param', 'is_multiclass', 'idx', 'fold_groups_param', 'gpu_param', 'X_train', 'fold_generator', 'logging_param', 'memory', 'log_plots_param', 'y', 'exp_id', '_ml_usecase', 'target_param', 'seed', 'pipeline', 'USI', 'X_test', 'y_test', 'data', 'X', 'fix_imbalance'}
2024-05-19 16:33:16,835:INFO:Checking environment
2024-05-19 16:33:16,835:INFO:python_version: 3.11.5
2024-05-19 16:33:16,835:INFO:python_build: ('tags/v3.11.5:cce6ba9', 'Aug 24 2023 14:38:34')
2024-05-19 16:33:16,835:INFO:machine: AMD64
2024-05-19 16:33:16,836:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-19 16:33:16,842:INFO:Memory: svmem(total=16968298496, available=2680406016, percent=84.2, used=14287892480, free=2680406016)
2024-05-19 16:33:16,842:INFO:Physical Core: 4
2024-05-19 16:33:16,842:INFO:Logical Core: 8
2024-05-19 16:33:16,842:INFO:Checking libraries
2024-05-19 16:33:16,842:INFO:System:
2024-05-19 16:33:16,842:INFO:    python: 3.11.5 (tags/v3.11.5:cce6ba9, Aug 24 2023, 14:38:34) [MSC v.1936 64 bit (AMD64)]
2024-05-19 16:33:16,842:INFO:executable: c:\Users\anson\AppData\Local\Programs\Python\Python311\python.exe
2024-05-19 16:33:16,842:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-19 16:33:16,843:INFO:PyCaret required dependencies:
2024-05-19 16:33:17,243:INFO:                 pip: 23.3.2
2024-05-19 16:33:17,243:INFO:          setuptools: 69.0.3
2024-05-19 16:33:17,243:INFO:             pycaret: 3.2.0
2024-05-19 16:33:17,243:INFO:             IPython: 8.12.3
2024-05-19 16:33:17,243:INFO:          ipywidgets: 7.8.1
2024-05-19 16:33:17,243:INFO:                tqdm: 4.66.1
2024-05-19 16:33:17,243:INFO:               numpy: 1.24.2
2024-05-19 16:33:17,243:INFO:              pandas: 1.5.2
2024-05-19 16:33:17,244:INFO:              jinja2: 3.1.3
2024-05-19 16:33:17,244:INFO:               scipy: 1.10.1
2024-05-19 16:33:17,244:INFO:              joblib: 1.2.0
2024-05-19 16:33:17,244:INFO:             sklearn: 1.2.2
2024-05-19 16:33:17,244:INFO:                pyod: 1.1.2
2024-05-19 16:33:17,244:INFO:            imblearn: 0.12.0
2024-05-19 16:33:17,244:INFO:   category_encoders: 2.6.3
2024-05-19 16:33:17,244:INFO:            lightgbm: 4.3.0
2024-05-19 16:33:17,244:INFO:               numba: 0.58.1
2024-05-19 16:33:17,244:INFO:            requests: 2.31.0
2024-05-19 16:33:17,244:INFO:          matplotlib: 3.6.0
2024-05-19 16:33:17,244:INFO:          scikitplot: 0.3.7
2024-05-19 16:33:17,244:INFO:         yellowbrick: 1.5
2024-05-19 16:33:17,244:INFO:              plotly: 5.18.0
2024-05-19 16:33:17,244:INFO:    plotly-resampler: Not installed
2024-05-19 16:33:17,244:INFO:             kaleido: 0.2.1
2024-05-19 16:33:17,244:INFO:           schemdraw: 0.15
2024-05-19 16:33:17,244:INFO:         statsmodels: 0.14.0
2024-05-19 16:33:17,244:INFO:              sktime: 0.21.1
2024-05-19 16:33:17,244:INFO:               tbats: 1.1.3
2024-05-19 16:33:17,244:INFO:            pmdarima: 2.0.4
2024-05-19 16:33:17,244:INFO:              psutil: 5.9.5
2024-05-19 16:33:17,244:INFO:          markupsafe: 2.1.2
2024-05-19 16:33:17,244:INFO:             pickle5: Not installed
2024-05-19 16:33:17,244:INFO:         cloudpickle: 2.2.1
2024-05-19 16:33:17,245:INFO:         deprecation: 2.1.0
2024-05-19 16:33:17,245:INFO:              xxhash: 3.4.1
2024-05-19 16:33:17,245:INFO:           wurlitzer: Not installed
2024-05-19 16:33:17,245:INFO:PyCaret optional dependencies:
2024-05-19 16:33:17,664:WARNING:IPython detected, but you already have a custom exception handler installed. I'll skip installing Trio's custom handler, but this means exception groups will not show full tracebacks.

2024-05-19 16:33:20,181:INFO:                shap: 0.44.1
2024-05-19 16:33:20,181:INFO:           interpret: 0.5.0
2024-05-19 16:33:20,181:INFO:                umap: 0.5.5
2024-05-19 16:33:20,181:INFO:     ydata_profiling: 4.6.0
2024-05-19 16:33:20,181:INFO:  explainerdashboard: 0.4.5
2024-05-19 16:33:20,181:INFO:             autoviz: Not installed
2024-05-19 16:33:20,181:INFO:           fairlearn: 0.7.0
2024-05-19 16:33:20,181:INFO:          deepchecks: Not installed
2024-05-19 16:33:20,181:INFO:             xgboost: 2.0.3
2024-05-19 16:33:20,181:INFO:            catboost: 1.2.2
2024-05-19 16:33:20,181:INFO:              kmodes: 0.12.2
2024-05-19 16:33:20,181:INFO:             mlxtend: 0.23.1
2024-05-19 16:33:20,181:INFO:       statsforecast: 1.5.0
2024-05-19 16:33:20,181:INFO:        tune_sklearn: Not installed
2024-05-19 16:33:20,181:INFO:                 ray: Not installed
2024-05-19 16:33:20,181:INFO:            hyperopt: 0.2.7
2024-05-19 16:33:20,181:INFO:              optuna: 3.5.0
2024-05-19 16:33:20,181:INFO:               skopt: 0.9.0
2024-05-19 16:33:20,181:INFO:              mlflow: 2.10.0
2024-05-19 16:33:20,181:INFO:              gradio: 3.50.2
2024-05-19 16:33:20,181:INFO:             fastapi: 0.109.0
2024-05-19 16:33:20,181:INFO:             uvicorn: 0.27.0
2024-05-19 16:33:20,181:INFO:              m2cgen: 0.10.0
2024-05-19 16:33:20,181:INFO:           evidently: 0.4.17
2024-05-19 16:33:20,181:INFO:               fugue: 0.8.6
2024-05-19 16:33:20,181:INFO:           streamlit: 1.30.0
2024-05-19 16:33:20,181:INFO:             prophet: Not installed
2024-05-19 16:33:20,181:INFO:None
2024-05-19 16:33:20,183:INFO:Set up GPU usage.
2024-05-19 16:33:20,183:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:20,183:WARNING:cuML is outdated or not found. Required version is >=23.08.
                Please visit https://rapids.ai/install for installation instructions.
2024-05-19 16:33:20,183:INFO:Set up data.
2024-05-19 16:33:20,191:INFO:Set up folding strategy.
2024-05-19 16:33:20,192:INFO:Set up train/test split.
2024-05-19 16:33:20,197:INFO:Set up index.
2024-05-19 16:33:20,197:INFO:Assigning column types.
2024-05-19 16:33:20,200:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-19 16:33:20,200:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:20,247:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 16:33:20,247:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:20,250:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:20,251:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-19 16:33:20,251:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:20,288:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:20,291:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:20,294:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 16:33:20,394:WARNING:Could not find the number of physical cores for the following reason:
found 0 physical cores < 1
Returning the number of logical cores instead. You can silence this warning by setting LOKY_MAX_CPU_COUNT to the number of cores you want to use.

2024-05-19 16:33:20,759:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 16:33:21,230:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:21,275:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 16:33:21,275:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:21,275:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:21,276:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-19 16:33:21,276:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:21,299:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:21,304:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:21,304:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 16:33:21,322:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 16:33:21,323:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-19 16:33:21,323:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:21,395:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:21,395:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:21,396:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-19 16:33:21,396:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:21,426:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:21,430:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:21,431:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 16:33:21,446:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 16:33:21,447:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:21,521:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:21,521:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:21,522:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-19 16:33:21,522:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:21,559:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:21,567:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:21,569:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 16:33:21,592:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 16:33:21,593:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-19 16:33:21,593:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:21,671:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:21,671:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:21,672:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:21,706:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:21,711:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:21,712:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 16:33:21,726:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 16:33:21,727:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:21,801:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:21,801:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:21,802:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:21,834:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:21,840:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:21,842:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 16:33:21,862:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 16:33:21,880:INFO:Preparing preprocessing pipeline...
2024-05-19 16:33:21,881:INFO:Set up simple imputation.
2024-05-19 16:33:21,882:INFO:Set up column name cleaning.
2024-05-19 16:33:21,926:INFO:Finished creating preprocessing pipeline.
2024-05-19 16:33:21,933:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\anson\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'tx', 'dx', 'bmi',
                                             'leg', 'armc', 'waist', 'sub',
                                             'gh', 'albumin', 'sex_male',
                                             're_Non-Hispanic Black',
                                             're_Non-Hispanic White',
                                             're_Other Hispanic',
                                             're_Other Race Including '
                                             'Multi-Racial'],
                                    transformer=Sim...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-05-19 16:33:21,933:INFO:Creating final display dataframe.
2024-05-19 16:33:22,014:INFO:Setup _display_container:                     Description            Value
0                    Session id              888
1                        Target           Target
2                   Target type           Binary
3           Original data shape       (4756, 17)
4        Transformed data shape       (4756, 17)
5   Transformed train set shape       (3329, 17)
6    Transformed test set shape       (1427, 17)
7              Numeric features               16
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU             True
16               Log Experiment     MlflowLogger
17              Experiment Name         diabetes
18                          USI             b310
2024-05-19 16:33:22,014:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:22,057:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:22,058:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:22,058:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:22,082:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:22,087:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:22,088:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 16:33:22,104:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 16:33:22,105:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:22,185:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:22,185:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:22,186:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:22,211:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:22,216:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:33:22,217:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 16:33:22,232:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 16:33:22,234:INFO:Logging experiment in loggers
2024-05-19 16:33:22,592:INFO:SubProcess save_model() called ==================================
2024-05-19 16:33:22,600:INFO:Initializing save_model()
2024-05-19 16:33:22,600:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\anson\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'tx', 'dx', 'bmi',
                                             'leg', 'armc', 'waist', 'sub',
                                             'gh', 'albumin', 'sex_male',
                                             're_Non-Hispanic Black',
                                             're_Non-Hispanic White',
                                             're_Other Hispanic',
                                             're_Other Race Including '
                                             'Multi-Racial'],
                                    transformer=Sim...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=C:\Users\anson\AppData\Local\Temp\tmpwtzmc_m8\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\anson\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'tx', 'dx', 'bmi',
                                             'leg', 'armc', 'waist', 'sub',
                                             'gh', 'albumin', 'sex_male',
                                             're_Non-Hispanic Black',
                                             're_Non-Hispanic White',
                                             're_Other Hispanic',
                                             're_Other Race Including '
                                             'Multi-Racial'],
                                    transformer=Sim...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-05-19 16:33:22,600:INFO:Adding model into prep_pipe
2024-05-19 16:33:22,600:WARNING:Only Model saved as it was a pipeline.
2024-05-19 16:33:22,602:INFO:C:\Users\anson\AppData\Local\Temp\tmpwtzmc_m8\Transformation Pipeline.pkl saved in current working directory
2024-05-19 16:33:22,608:INFO:Pipeline(memory=FastMemory(location=C:\Users\anson\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'tx', 'dx', 'bmi',
                                             'leg', 'armc', 'waist', 'sub',
                                             'gh', 'albumin', 'sex_male',
                                             're_Non-Hispanic Black',
                                             're_Non-Hispanic White',
                                             're_Other Hispanic',
                                             're_Other Race Including '
                                             'Multi-Racial'],
                                    transformer=Sim...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-05-19 16:33:22,608:INFO:save_model() successfully completed......................................
2024-05-19 16:33:22,816:INFO:SubProcess save_model() end ==================================
2024-05-19 16:33:22,883:INFO:setup() successfully completed in 5.41s...............
2024-05-19 16:33:27,395:INFO:Initializing compare_models()
2024-05-19 16:33:27,396:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C3E8B18DD0>, include=['lr', 'dt', 'rf'], exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002C3E8B18DD0>, 'include': ['lr', 'dt', 'rf'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-05-19 16:33:27,396:INFO:Checking exceptions
2024-05-19 16:33:27,403:INFO:Preparing display monitor
2024-05-19 16:33:27,436:INFO:Initializing Logistic Regression
2024-05-19 16:33:27,437:INFO:Total runtime is 2.1445751190185548e-05 minutes
2024-05-19 16:33:27,441:INFO:SubProcess create_model() called ==================================
2024-05-19 16:33:27,441:INFO:Initializing create_model()
2024-05-19 16:33:27,441:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C3E8B18DD0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C39F1C4ED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 16:33:27,441:INFO:Checking exceptions
2024-05-19 16:33:27,441:INFO:Importing libraries
2024-05-19 16:33:27,441:INFO:Copying training dataset
2024-05-19 16:33:27,447:INFO:Defining folds
2024-05-19 16:33:27,447:INFO:Declaring metric variables
2024-05-19 16:33:27,452:INFO:Importing untrained model
2024-05-19 16:33:27,456:INFO:Logistic Regression Imported successfully
2024-05-19 16:33:27,465:INFO:Starting cross validation
2024-05-19 16:33:27,466:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:33:29,278:WARNING:lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression

2024-05-19 16:33:30,147:WARNING:lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression

2024-05-19 16:33:31,199:WARNING:lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression

2024-05-19 16:33:31,653:WARNING:lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression

2024-05-19 16:33:32,095:WARNING:lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression

2024-05-19 16:33:32,111:INFO:Calculating mean and std
2024-05-19 16:33:32,112:INFO:Creating metrics dataframe
2024-05-19 16:33:32,116:INFO:Uploading results into container
2024-05-19 16:33:32,117:INFO:Uploading model into container now
2024-05-19 16:33:32,118:INFO:_master_model_container: 1
2024-05-19 16:33:32,118:INFO:_display_container: 2
2024-05-19 16:33:32,119:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=888, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-19 16:33:32,119:INFO:create_model() successfully completed......................................
2024-05-19 16:33:32,333:INFO:SubProcess create_model() end ==================================
2024-05-19 16:33:32,333:INFO:Creating metrics dataframe
2024-05-19 16:33:32,349:INFO:Initializing Decision Tree Classifier
2024-05-19 16:33:32,349:INFO:Total runtime is 0.08188451528549194 minutes
2024-05-19 16:33:32,354:INFO:SubProcess create_model() called ==================================
2024-05-19 16:33:32,355:INFO:Initializing create_model()
2024-05-19 16:33:32,355:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C3E8B18DD0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C39F1C4ED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 16:33:32,355:INFO:Checking exceptions
2024-05-19 16:33:32,355:INFO:Importing libraries
2024-05-19 16:33:32,355:INFO:Copying training dataset
2024-05-19 16:33:32,361:INFO:Defining folds
2024-05-19 16:33:32,361:INFO:Declaring metric variables
2024-05-19 16:33:32,365:INFO:Importing untrained model
2024-05-19 16:33:32,370:INFO:Decision Tree Classifier Imported successfully
2024-05-19 16:33:32,378:INFO:Starting cross validation
2024-05-19 16:33:32,380:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:33:32,702:INFO:Calculating mean and std
2024-05-19 16:33:32,704:INFO:Creating metrics dataframe
2024-05-19 16:33:32,708:INFO:Uploading results into container
2024-05-19 16:33:32,708:INFO:Uploading model into container now
2024-05-19 16:33:32,710:INFO:_master_model_container: 2
2024-05-19 16:33:32,710:INFO:_display_container: 2
2024-05-19 16:33:32,710:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best')
2024-05-19 16:33:32,710:INFO:create_model() successfully completed......................................
2024-05-19 16:33:32,919:INFO:SubProcess create_model() end ==================================
2024-05-19 16:33:32,919:INFO:Creating metrics dataframe
2024-05-19 16:33:32,937:INFO:Initializing Random Forest Classifier
2024-05-19 16:33:32,937:INFO:Total runtime is 0.09169654051462808 minutes
2024-05-19 16:33:32,944:INFO:SubProcess create_model() called ==================================
2024-05-19 16:33:32,944:INFO:Initializing create_model()
2024-05-19 16:33:32,945:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C3E8B18DD0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C39F1C4ED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 16:33:32,945:INFO:Checking exceptions
2024-05-19 16:33:32,945:INFO:Importing libraries
2024-05-19 16:33:32,945:INFO:Copying training dataset
2024-05-19 16:33:32,951:INFO:Defining folds
2024-05-19 16:33:32,951:INFO:Declaring metric variables
2024-05-19 16:33:32,955:INFO:Importing untrained model
2024-05-19 16:33:32,960:INFO:Random Forest Classifier Imported successfully
2024-05-19 16:33:32,970:INFO:Starting cross validation
2024-05-19 16:33:32,971:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:33:38,092:INFO:Calculating mean and std
2024-05-19 16:33:38,093:INFO:Creating metrics dataframe
2024-05-19 16:33:38,096:INFO:Uploading results into container
2024-05-19 16:33:38,097:INFO:Uploading model into container now
2024-05-19 16:33:38,097:INFO:_master_model_container: 3
2024-05-19 16:33:38,097:INFO:_display_container: 2
2024-05-19 16:33:38,097:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False)
2024-05-19 16:33:38,098:INFO:create_model() successfully completed......................................
2024-05-19 16:33:38,310:INFO:SubProcess create_model() end ==================================
2024-05-19 16:33:38,310:INFO:Creating metrics dataframe
2024-05-19 16:33:38,341:INFO:Initializing create_model()
2024-05-19 16:33:38,341:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C3E8B18DD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 16:33:38,341:INFO:Checking exceptions
2024-05-19 16:33:38,342:INFO:Importing libraries
2024-05-19 16:33:38,342:INFO:Copying training dataset
2024-05-19 16:33:38,348:INFO:Defining folds
2024-05-19 16:33:38,348:INFO:Declaring metric variables
2024-05-19 16:33:38,348:INFO:Importing untrained model
2024-05-19 16:33:38,348:INFO:Declaring custom model
2024-05-19 16:33:38,349:INFO:Decision Tree Classifier Imported successfully
2024-05-19 16:33:38,350:INFO:Cross validation set to False
2024-05-19 16:33:38,350:INFO:Fitting Model
2024-05-19 16:33:38,364:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best')
2024-05-19 16:33:38,364:INFO:create_model() successfully completed......................................
2024-05-19 16:33:38,589:INFO:Creating Dashboard logs
2024-05-19 16:33:38,595:INFO:Model: Decision Tree Classifier
2024-05-19 16:33:38,671:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 888, 'splitter': 'best'}
2024-05-19 16:33:38,793:INFO:Initializing predict_model()
2024-05-19 16:33:38,793:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C3E8B18DD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C39B16DBC0>)
2024-05-19 16:33:38,793:INFO:Checking exceptions
2024-05-19 16:33:38,793:INFO:Preloading libraries
2024-05-19 16:33:39,084:WARNING:Setuptools is replacing distutils.

2024-05-19 16:33:39,397:INFO:Creating Dashboard logs
2024-05-19 16:33:39,406:INFO:Model: Random Forest Classifier
2024-05-19 16:33:39,493:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 888, 'verbose': 0, 'warm_start': False}
2024-05-19 16:33:39,932:INFO:Creating Dashboard logs
2024-05-19 16:33:39,938:INFO:Model: Logistic Regression
2024-05-19 16:33:40,014:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 888, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-05-19 16:33:40,565:INFO:_master_model_container: 3
2024-05-19 16:33:40,565:INFO:_display_container: 2
2024-05-19 16:33:40,566:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best')
2024-05-19 16:33:40,566:INFO:compare_models() successfully completed......................................
2024-05-19 16:34:24,020:INFO:Initializing create_model()
2024-05-19 16:34:24,021:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C3E8B18DD0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={'penalty': 'l1', 'solver': 'liblinear'})
2024-05-19 16:34:24,021:INFO:Checking exceptions
2024-05-19 16:34:24,038:INFO:Importing libraries
2024-05-19 16:34:24,038:INFO:Copying training dataset
2024-05-19 16:34:24,043:INFO:Defining folds
2024-05-19 16:34:24,043:INFO:Declaring metric variables
2024-05-19 16:34:24,047:INFO:Importing untrained model
2024-05-19 16:34:24,052:INFO:Logistic Regression Imported successfully
2024-05-19 16:34:24,061:INFO:Starting cross validation
2024-05-19 16:34:24,062:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:34:26,218:INFO:Calculating mean and std
2024-05-19 16:34:26,220:INFO:Creating metrics dataframe
2024-05-19 16:34:26,225:INFO:Finalizing model
2024-05-19 16:34:26,538:INFO:Creating Dashboard logs
2024-05-19 16:34:26,541:INFO:Model: Logistic Regression
2024-05-19 16:34:26,594:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l1', 'random_state': 888, 'solver': 'liblinear', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-05-19 16:34:26,750:INFO:Initializing predict_model()
2024-05-19 16:34:26,750:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C3E8B18DD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C38CDB0FE0>)
2024-05-19 16:34:26,750:INFO:Checking exceptions
2024-05-19 16:34:26,750:INFO:Preloading libraries
2024-05-19 16:34:27,291:INFO:Uploading results into container
2024-05-19 16:34:27,292:INFO:Uploading model into container now
2024-05-19 16:34:27,305:INFO:_master_model_container: 4
2024-05-19 16:34:27,305:INFO:_display_container: 3
2024-05-19 16:34:27,305:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-19 16:34:27,305:INFO:create_model() successfully completed......................................
2024-05-19 16:34:27,508:INFO:Initializing tune_model()
2024-05-19 16:34:27,509:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C3E8B18DD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False), fold=10, round=4, n_iter=10, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-19 16:34:27,509:INFO:Checking exceptions
2024-05-19 16:34:27,526:INFO:Copying training dataset
2024-05-19 16:34:27,530:INFO:Checking base model
2024-05-19 16:34:27,530:INFO:Base model : Logistic Regression
2024-05-19 16:34:27,534:INFO:Declaring metric variables
2024-05-19 16:34:27,540:INFO:Defining Hyperparameters
2024-05-19 16:34:27,805:INFO:Tuning with n_jobs=-1
2024-05-19 16:34:27,805:INFO:Initializing RandomizedSearchCV
2024-05-19 16:34:57,602:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 8.6}
2024-05-19 16:34:57,603:INFO:Hyperparameter search completed
2024-05-19 16:34:57,603:INFO:SubProcess create_model() called ==================================
2024-05-19 16:34:57,605:INFO:Initializing create_model()
2024-05-19 16:34:57,605:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C3E8B18DD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C3E89D14D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'class_weight': 'balanced', 'C': 8.6})
2024-05-19 16:34:57,605:INFO:Checking exceptions
2024-05-19 16:34:57,605:INFO:Importing libraries
2024-05-19 16:34:57,606:INFO:Copying training dataset
2024-05-19 16:34:57,609:INFO:Defining folds
2024-05-19 16:34:57,609:INFO:Declaring metric variables
2024-05-19 16:34:57,614:INFO:Importing untrained model
2024-05-19 16:34:57,615:INFO:Declaring custom model
2024-05-19 16:34:57,620:INFO:Logistic Regression Imported successfully
2024-05-19 16:34:57,633:INFO:Starting cross validation
2024-05-19 16:34:57,634:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:35:13,718:INFO:Calculating mean and std
2024-05-19 16:35:13,720:INFO:Creating metrics dataframe
2024-05-19 16:35:13,728:INFO:Finalizing model
2024-05-19 16:35:15,542:INFO:Uploading results into container
2024-05-19 16:35:15,543:INFO:Uploading model into container now
2024-05-19 16:35:15,543:INFO:_master_model_container: 5
2024-05-19 16:35:15,543:INFO:_display_container: 4
2024-05-19 16:35:15,543:INFO:LogisticRegression(C=8.6, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-19 16:35:15,543:INFO:create_model() successfully completed......................................
2024-05-19 16:35:15,737:INFO:SubProcess create_model() end ==================================
2024-05-19 16:35:15,737:INFO:choose_better activated
2024-05-19 16:35:15,741:INFO:SubProcess create_model() called ==================================
2024-05-19 16:35:15,742:INFO:Initializing create_model()
2024-05-19 16:35:15,742:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C3E8B18DD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 16:35:15,742:INFO:Checking exceptions
2024-05-19 16:35:15,744:INFO:Importing libraries
2024-05-19 16:35:15,744:INFO:Copying training dataset
2024-05-19 16:35:15,750:INFO:Defining folds
2024-05-19 16:35:15,750:INFO:Declaring metric variables
2024-05-19 16:35:15,750:INFO:Importing untrained model
2024-05-19 16:35:15,750:INFO:Declaring custom model
2024-05-19 16:35:15,752:INFO:Logistic Regression Imported successfully
2024-05-19 16:35:15,752:INFO:Starting cross validation
2024-05-19 16:35:15,753:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:35:17,894:INFO:Calculating mean and std
2024-05-19 16:35:17,894:INFO:Creating metrics dataframe
2024-05-19 16:35:17,895:INFO:Finalizing model
2024-05-19 16:35:18,226:INFO:Uploading results into container
2024-05-19 16:35:18,226:INFO:Uploading model into container now
2024-05-19 16:35:18,226:INFO:_master_model_container: 6
2024-05-19 16:35:18,227:INFO:_display_container: 5
2024-05-19 16:35:18,227:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-19 16:35:18,227:INFO:create_model() successfully completed......................................
2024-05-19 16:35:18,428:INFO:SubProcess create_model() end ==================================
2024-05-19 16:35:18,429:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False) result for AUC is 0.9994
2024-05-19 16:35:18,429:INFO:LogisticRegression(C=8.6, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False) result for AUC is 0.9999
2024-05-19 16:35:18,430:INFO:LogisticRegression(C=8.6, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2024-05-19 16:35:18,430:INFO:choose_better completed
2024-05-19 16:35:18,430:INFO:Creating Dashboard logs
2024-05-19 16:35:18,434:INFO:Model: Logistic Regression
2024-05-19 16:35:18,500:INFO:Logged params: {'C': 8.6, 'class_weight': 'balanced', 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l1', 'random_state': 888, 'solver': 'liblinear', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-05-19 16:35:18,666:INFO:Initializing predict_model()
2024-05-19 16:35:18,666:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C3E8B18DD0>, estimator=LogisticRegression(C=8.6, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C3A354CB80>)
2024-05-19 16:35:18,666:INFO:Checking exceptions
2024-05-19 16:35:18,666:INFO:Preloading libraries
2024-05-19 16:35:19,236:INFO:_master_model_container: 6
2024-05-19 16:35:19,236:INFO:_display_container: 4
2024-05-19 16:35:19,237:INFO:LogisticRegression(C=8.6, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-19 16:35:19,237:INFO:tune_model() successfully completed......................................
2024-05-19 16:35:19,443:INFO:Initializing create_model()
2024-05-19 16:35:19,443:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C3E8B18DD0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 16:35:19,443:INFO:Checking exceptions
2024-05-19 16:35:19,461:INFO:Importing libraries
2024-05-19 16:35:19,461:INFO:Copying training dataset
2024-05-19 16:35:19,466:INFO:Defining folds
2024-05-19 16:35:19,466:INFO:Declaring metric variables
2024-05-19 16:35:19,471:INFO:Importing untrained model
2024-05-19 16:35:19,475:INFO:Decision Tree Classifier Imported successfully
2024-05-19 16:35:19,484:INFO:Starting cross validation
2024-05-19 16:35:19,486:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:35:19,950:INFO:Calculating mean and std
2024-05-19 16:35:19,951:INFO:Creating metrics dataframe
2024-05-19 16:35:19,960:INFO:Finalizing model
2024-05-19 16:35:19,984:INFO:Creating Dashboard logs
2024-05-19 16:35:19,992:INFO:Model: Decision Tree Classifier
2024-05-19 16:35:20,076:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 888, 'splitter': 'best'}
2024-05-19 16:35:20,235:INFO:Initializing predict_model()
2024-05-19 16:35:20,235:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C3E8B18DD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C3A218A200>)
2024-05-19 16:35:20,235:INFO:Checking exceptions
2024-05-19 16:35:20,235:INFO:Preloading libraries
2024-05-19 16:35:20,943:INFO:Uploading results into container
2024-05-19 16:35:20,946:INFO:Uploading model into container now
2024-05-19 16:35:20,961:INFO:_master_model_container: 7
2024-05-19 16:35:20,961:INFO:_display_container: 5
2024-05-19 16:35:20,962:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best')
2024-05-19 16:35:20,962:INFO:create_model() successfully completed......................................
2024-05-19 16:35:21,232:INFO:Initializing tune_model()
2024-05-19 16:35:21,232:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C3E8B18DD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best'), fold=10, round=4, n_iter=10, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-19 16:35:21,232:INFO:Checking exceptions
2024-05-19 16:35:21,255:INFO:Copying training dataset
2024-05-19 16:35:21,261:INFO:Checking base model
2024-05-19 16:35:21,261:INFO:Base model : Decision Tree Classifier
2024-05-19 16:35:21,268:INFO:Declaring metric variables
2024-05-19 16:35:21,274:INFO:Defining Hyperparameters
2024-05-19 16:35:21,527:INFO:Tuning with n_jobs=-1
2024-05-19 16:35:21,527:INFO:Initializing RandomizedSearchCV
2024-05-19 16:35:22,241:INFO:best_params: {'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.005, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 14, 'actual_estimator__criterion': 'gini'}
2024-05-19 16:35:22,241:INFO:Hyperparameter search completed
2024-05-19 16:35:22,241:INFO:SubProcess create_model() called ==================================
2024-05-19 16:35:22,243:INFO:Initializing create_model()
2024-05-19 16:35:22,244:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C3E8B18DD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C3A1C24C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 10, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.005, 'max_features': 1.0, 'max_depth': 14, 'criterion': 'gini'})
2024-05-19 16:35:22,244:INFO:Checking exceptions
2024-05-19 16:35:22,244:INFO:Importing libraries
2024-05-19 16:35:22,244:INFO:Copying training dataset
2024-05-19 16:35:22,254:INFO:Defining folds
2024-05-19 16:35:22,254:INFO:Declaring metric variables
2024-05-19 16:35:22,260:INFO:Importing untrained model
2024-05-19 16:35:22,261:INFO:Declaring custom model
2024-05-19 16:35:22,265:INFO:Decision Tree Classifier Imported successfully
2024-05-19 16:35:22,279:INFO:Starting cross validation
2024-05-19 16:35:22,280:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:35:22,686:INFO:Calculating mean and std
2024-05-19 16:35:22,688:INFO:Creating metrics dataframe
2024-05-19 16:35:22,693:INFO:Finalizing model
2024-05-19 16:35:22,710:INFO:Uploading results into container
2024-05-19 16:35:22,711:INFO:Uploading model into container now
2024-05-19 16:35:22,711:INFO:_master_model_container: 8
2024-05-19 16:35:22,712:INFO:_display_container: 6
2024-05-19 16:35:22,712:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=14, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.005, min_samples_leaf=2,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best')
2024-05-19 16:35:22,712:INFO:create_model() successfully completed......................................
2024-05-19 16:35:22,925:INFO:SubProcess create_model() end ==================================
2024-05-19 16:35:22,925:INFO:choose_better activated
2024-05-19 16:35:22,930:INFO:SubProcess create_model() called ==================================
2024-05-19 16:35:22,932:INFO:Initializing create_model()
2024-05-19 16:35:22,932:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C3E8B18DD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 16:35:22,932:INFO:Checking exceptions
2024-05-19 16:35:22,934:INFO:Importing libraries
2024-05-19 16:35:22,934:INFO:Copying training dataset
2024-05-19 16:35:22,941:INFO:Defining folds
2024-05-19 16:35:22,942:INFO:Declaring metric variables
2024-05-19 16:35:22,942:INFO:Importing untrained model
2024-05-19 16:35:22,942:INFO:Declaring custom model
2024-05-19 16:35:22,943:INFO:Decision Tree Classifier Imported successfully
2024-05-19 16:35:22,943:INFO:Starting cross validation
2024-05-19 16:35:22,944:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:35:23,216:INFO:Calculating mean and std
2024-05-19 16:35:23,216:INFO:Creating metrics dataframe
2024-05-19 16:35:23,218:INFO:Finalizing model
2024-05-19 16:35:23,229:INFO:Uploading results into container
2024-05-19 16:35:23,229:INFO:Uploading model into container now
2024-05-19 16:35:23,230:INFO:_master_model_container: 9
2024-05-19 16:35:23,230:INFO:_display_container: 7
2024-05-19 16:35:23,230:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best')
2024-05-19 16:35:23,230:INFO:create_model() successfully completed......................................
2024-05-19 16:35:23,442:INFO:SubProcess create_model() end ==================================
2024-05-19 16:35:23,443:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best') result for AUC is 1.0
2024-05-19 16:35:23,443:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=14, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.005, min_samples_leaf=2,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best') result for AUC is 1.0
2024-05-19 16:35:23,444:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best') is best model
2024-05-19 16:35:23,444:INFO:choose_better completed
2024-05-19 16:35:23,444:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-19 16:35:23,445:INFO:Creating Dashboard logs
2024-05-19 16:35:23,451:INFO:Model: Decision Tree Classifier
2024-05-19 16:35:23,516:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 888, 'splitter': 'best'}
2024-05-19 16:35:23,627:INFO:Initializing predict_model()
2024-05-19 16:35:23,628:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C3E8B18DD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C3A1F79B20>)
2024-05-19 16:35:23,628:INFO:Checking exceptions
2024-05-19 16:35:23,628:INFO:Preloading libraries
2024-05-19 16:35:24,167:INFO:_master_model_container: 9
2024-05-19 16:35:24,168:INFO:_display_container: 6
2024-05-19 16:35:24,168:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best')
2024-05-19 16:35:24,168:INFO:tune_model() successfully completed......................................
2024-05-19 16:35:24,375:INFO:Initializing create_model()
2024-05-19 16:35:24,375:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C3E8B18DD0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 16:35:24,375:INFO:Checking exceptions
2024-05-19 16:35:24,392:INFO:Importing libraries
2024-05-19 16:35:24,392:INFO:Copying training dataset
2024-05-19 16:35:24,398:INFO:Defining folds
2024-05-19 16:35:24,398:INFO:Declaring metric variables
2024-05-19 16:35:24,402:INFO:Importing untrained model
2024-05-19 16:35:24,408:INFO:Random Forest Classifier Imported successfully
2024-05-19 16:35:24,417:INFO:Starting cross validation
2024-05-19 16:35:24,418:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:35:27,466:INFO:Calculating mean and std
2024-05-19 16:35:27,467:INFO:Creating metrics dataframe
2024-05-19 16:35:27,478:INFO:Finalizing model
2024-05-19 16:35:27,744:INFO:Creating Dashboard logs
2024-05-19 16:35:27,747:INFO:Model: Random Forest Classifier
2024-05-19 16:35:27,846:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 888, 'verbose': 0, 'warm_start': False}
2024-05-19 16:35:28,001:INFO:Initializing predict_model()
2024-05-19 16:35:28,001:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C3E8B18DD0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C3A18547C0>)
2024-05-19 16:35:28,001:INFO:Checking exceptions
2024-05-19 16:35:28,001:INFO:Preloading libraries
2024-05-19 16:35:28,691:INFO:Uploading results into container
2024-05-19 16:35:28,692:INFO:Uploading model into container now
2024-05-19 16:35:28,708:INFO:_master_model_container: 10
2024-05-19 16:35:28,708:INFO:_display_container: 7
2024-05-19 16:35:28,709:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False)
2024-05-19 16:35:28,709:INFO:create_model() successfully completed......................................
2024-05-19 16:35:28,981:INFO:Initializing tune_model()
2024-05-19 16:35:28,981:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C3E8B18DD0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False), fold=10, round=4, n_iter=10, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-19 16:35:28,981:INFO:Checking exceptions
2024-05-19 16:35:29,009:INFO:Copying training dataset
2024-05-19 16:35:29,015:INFO:Checking base model
2024-05-19 16:35:29,016:INFO:Base model : Random Forest Classifier
2024-05-19 16:35:29,024:INFO:Declaring metric variables
2024-05-19 16:35:29,029:INFO:Defining Hyperparameters
2024-05-19 16:35:29,404:INFO:Tuning with n_jobs=-1
2024-05-19 16:35:29,404:INFO:Initializing RandomizedSearchCV
2024-05-19 16:35:50,335:INFO:best_params: {'actual_estimator__n_estimators': 50, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.0001, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 11, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': {}, 'actual_estimator__bootstrap': False}
2024-05-19 16:35:50,336:INFO:Hyperparameter search completed
2024-05-19 16:35:50,337:INFO:SubProcess create_model() called ==================================
2024-05-19 16:35:50,338:INFO:Initializing create_model()
2024-05-19 16:35:50,338:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C3E8B18DD0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C3AC414410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 50, 'min_samples_split': 5, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.0001, 'max_features': 1.0, 'max_depth': 11, 'criterion': 'gini', 'class_weight': {}, 'bootstrap': False})
2024-05-19 16:35:50,338:INFO:Checking exceptions
2024-05-19 16:35:50,338:INFO:Importing libraries
2024-05-19 16:35:50,338:INFO:Copying training dataset
2024-05-19 16:35:50,344:INFO:Defining folds
2024-05-19 16:35:50,344:INFO:Declaring metric variables
2024-05-19 16:35:50,347:INFO:Importing untrained model
2024-05-19 16:35:50,347:INFO:Declaring custom model
2024-05-19 16:35:50,350:INFO:Random Forest Classifier Imported successfully
2024-05-19 16:35:50,358:INFO:Starting cross validation
2024-05-19 16:35:50,359:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:35:51,913:INFO:Calculating mean and std
2024-05-19 16:35:51,915:INFO:Creating metrics dataframe
2024-05-19 16:35:51,922:INFO:Finalizing model
2024-05-19 16:35:52,044:INFO:Uploading results into container
2024-05-19 16:35:52,044:INFO:Uploading model into container now
2024-05-19 16:35:52,045:INFO:_master_model_container: 11
2024-05-19 16:35:52,045:INFO:_display_container: 8
2024-05-19 16:35:52,045:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='gini', max_depth=11, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0001, min_samples_leaf=2,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       n_estimators=50, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False)
2024-05-19 16:35:52,045:INFO:create_model() successfully completed......................................
2024-05-19 16:35:52,286:INFO:SubProcess create_model() end ==================================
2024-05-19 16:35:52,286:INFO:choose_better activated
2024-05-19 16:35:52,291:INFO:SubProcess create_model() called ==================================
2024-05-19 16:35:52,292:INFO:Initializing create_model()
2024-05-19 16:35:52,292:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C3E8B18DD0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 16:35:52,292:INFO:Checking exceptions
2024-05-19 16:35:52,295:INFO:Importing libraries
2024-05-19 16:35:52,295:INFO:Copying training dataset
2024-05-19 16:35:52,302:INFO:Defining folds
2024-05-19 16:35:52,302:INFO:Declaring metric variables
2024-05-19 16:35:52,302:INFO:Importing untrained model
2024-05-19 16:35:52,302:INFO:Declaring custom model
2024-05-19 16:35:52,303:INFO:Random Forest Classifier Imported successfully
2024-05-19 16:35:52,304:INFO:Starting cross validation
2024-05-19 16:35:52,305:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:35:55,080:INFO:Calculating mean and std
2024-05-19 16:35:55,080:INFO:Creating metrics dataframe
2024-05-19 16:35:55,082:INFO:Finalizing model
2024-05-19 16:35:55,346:INFO:Uploading results into container
2024-05-19 16:35:55,347:INFO:Uploading model into container now
2024-05-19 16:35:55,347:INFO:_master_model_container: 12
2024-05-19 16:35:55,347:INFO:_display_container: 9
2024-05-19 16:35:55,348:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False)
2024-05-19 16:35:55,348:INFO:create_model() successfully completed......................................
2024-05-19 16:35:55,735:INFO:SubProcess create_model() end ==================================
2024-05-19 16:35:55,735:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False) result for AUC is 1.0
2024-05-19 16:35:55,738:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='gini', max_depth=11, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0001, min_samples_leaf=2,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       n_estimators=50, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False) result for AUC is 1.0
2024-05-19 16:35:55,741:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False) is best model
2024-05-19 16:35:55,741:INFO:choose_better completed
2024-05-19 16:35:55,742:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-19 16:35:55,742:INFO:Creating Dashboard logs
2024-05-19 16:35:55,749:INFO:Model: Random Forest Classifier
2024-05-19 16:35:55,851:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 888, 'verbose': 0, 'warm_start': False}
2024-05-19 16:35:56,047:INFO:Initializing predict_model()
2024-05-19 16:35:56,047:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C3E8B18DD0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C3A1F799E0>)
2024-05-19 16:35:56,047:INFO:Checking exceptions
2024-05-19 16:35:56,047:INFO:Preloading libraries
2024-05-19 16:35:56,846:INFO:_master_model_container: 12
2024-05-19 16:35:56,846:INFO:_display_container: 8
2024-05-19 16:35:56,847:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False)
2024-05-19 16:35:56,847:INFO:tune_model() successfully completed......................................
2024-05-19 16:41:37,850:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:41:37,850:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:41:37,850:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:41:37,850:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:00,152:INFO:PyCaret ClassificationExperiment
2024-05-19 16:42:00,152:INFO:Logging name: diabetes
2024-05-19 16:42:00,152:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-19 16:42:00,152:INFO:version 3.2.0
2024-05-19 16:42:00,153:INFO:Initializing setup()
2024-05-19 16:42:00,153:INFO:self.USI: 603a
2024-05-19 16:42:00,153:INFO:self._variable_keys: {'memory', 'X_test', 'y_train', 'fold_groups_param', 'pipeline', 'gpu_n_jobs_param', 'USI', 'gpu_param', '_ml_usecase', 'idx', 'seed', 'y_test', 'fix_imbalance', 'data', '_available_plots', 'fold_generator', 'target_param', 'logging_param', 'is_multiclass', 'y', 'exp_name_log', 'X', 'n_jobs_param', 'fold_shuffle_param', 'exp_id', 'X_train', 'log_plots_param', 'html_param'}
2024-05-19 16:42:00,153:INFO:Checking environment
2024-05-19 16:42:00,153:INFO:python_version: 3.11.5
2024-05-19 16:42:00,153:INFO:python_build: ('tags/v3.11.5:cce6ba9', 'Aug 24 2023 14:38:34')
2024-05-19 16:42:00,153:INFO:machine: AMD64
2024-05-19 16:42:00,153:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-19 16:42:00,161:INFO:Memory: svmem(total=16968298496, available=2416836608, percent=85.8, used=14551461888, free=2416836608)
2024-05-19 16:42:00,161:INFO:Physical Core: 4
2024-05-19 16:42:00,161:INFO:Logical Core: 8
2024-05-19 16:42:00,161:INFO:Checking libraries
2024-05-19 16:42:00,161:INFO:System:
2024-05-19 16:42:00,162:INFO:    python: 3.11.5 (tags/v3.11.5:cce6ba9, Aug 24 2023, 14:38:34) [MSC v.1936 64 bit (AMD64)]
2024-05-19 16:42:00,162:INFO:executable: c:\Users\anson\AppData\Local\Programs\Python\Python311\python.exe
2024-05-19 16:42:00,162:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-19 16:42:00,162:INFO:PyCaret required dependencies:
2024-05-19 16:42:00,505:INFO:                 pip: 23.3.2
2024-05-19 16:42:00,505:INFO:          setuptools: 69.0.3
2024-05-19 16:42:00,505:INFO:             pycaret: 3.2.0
2024-05-19 16:42:00,505:INFO:             IPython: 8.12.3
2024-05-19 16:42:00,506:INFO:          ipywidgets: 7.8.1
2024-05-19 16:42:00,506:INFO:                tqdm: 4.66.1
2024-05-19 16:42:00,506:INFO:               numpy: 1.24.2
2024-05-19 16:42:00,506:INFO:              pandas: 1.5.2
2024-05-19 16:42:00,506:INFO:              jinja2: 3.1.3
2024-05-19 16:42:00,506:INFO:               scipy: 1.10.1
2024-05-19 16:42:00,506:INFO:              joblib: 1.2.0
2024-05-19 16:42:00,506:INFO:             sklearn: 1.2.2
2024-05-19 16:42:00,506:INFO:                pyod: 1.1.2
2024-05-19 16:42:00,506:INFO:            imblearn: 0.12.0
2024-05-19 16:42:00,506:INFO:   category_encoders: 2.6.3
2024-05-19 16:42:00,506:INFO:            lightgbm: 4.3.0
2024-05-19 16:42:00,506:INFO:               numba: 0.58.1
2024-05-19 16:42:00,506:INFO:            requests: 2.31.0
2024-05-19 16:42:00,507:INFO:          matplotlib: 3.6.0
2024-05-19 16:42:00,507:INFO:          scikitplot: 0.3.7
2024-05-19 16:42:00,507:INFO:         yellowbrick: 1.5
2024-05-19 16:42:00,507:INFO:              plotly: 5.18.0
2024-05-19 16:42:00,507:INFO:    plotly-resampler: Not installed
2024-05-19 16:42:00,507:INFO:             kaleido: 0.2.1
2024-05-19 16:42:00,507:INFO:           schemdraw: 0.15
2024-05-19 16:42:00,507:INFO:         statsmodels: 0.14.0
2024-05-19 16:42:00,507:INFO:              sktime: 0.21.1
2024-05-19 16:42:00,507:INFO:               tbats: 1.1.3
2024-05-19 16:42:00,507:INFO:            pmdarima: 2.0.4
2024-05-19 16:42:00,507:INFO:              psutil: 5.9.5
2024-05-19 16:42:00,507:INFO:          markupsafe: 2.1.2
2024-05-19 16:42:00,507:INFO:             pickle5: Not installed
2024-05-19 16:42:00,507:INFO:         cloudpickle: 2.2.1
2024-05-19 16:42:00,507:INFO:         deprecation: 2.1.0
2024-05-19 16:42:00,507:INFO:              xxhash: 3.4.1
2024-05-19 16:42:00,507:INFO:           wurlitzer: Not installed
2024-05-19 16:42:00,507:INFO:PyCaret optional dependencies:
2024-05-19 16:42:00,750:WARNING:IPython detected, but you already have a custom exception handler installed. I'll skip installing Trio's custom handler, but this means exception groups will not show full tracebacks.

2024-05-19 16:42:02,480:INFO:                shap: 0.44.1
2024-05-19 16:42:02,480:INFO:           interpret: 0.5.0
2024-05-19 16:42:02,480:INFO:                umap: 0.5.5
2024-05-19 16:42:02,480:INFO:     ydata_profiling: 4.6.0
2024-05-19 16:42:02,480:INFO:  explainerdashboard: 0.4.5
2024-05-19 16:42:02,480:INFO:             autoviz: Not installed
2024-05-19 16:42:02,480:INFO:           fairlearn: 0.7.0
2024-05-19 16:42:02,480:INFO:          deepchecks: Not installed
2024-05-19 16:42:02,480:INFO:             xgboost: 2.0.3
2024-05-19 16:42:02,480:INFO:            catboost: 1.2.2
2024-05-19 16:42:02,480:INFO:              kmodes: 0.12.2
2024-05-19 16:42:02,480:INFO:             mlxtend: 0.23.1
2024-05-19 16:42:02,480:INFO:       statsforecast: 1.5.0
2024-05-19 16:42:02,480:INFO:        tune_sklearn: Not installed
2024-05-19 16:42:02,481:INFO:                 ray: Not installed
2024-05-19 16:42:02,481:INFO:            hyperopt: 0.2.7
2024-05-19 16:42:02,481:INFO:              optuna: 3.5.0
2024-05-19 16:42:02,481:INFO:               skopt: 0.9.0
2024-05-19 16:42:02,481:INFO:              mlflow: 2.10.0
2024-05-19 16:42:02,481:INFO:              gradio: 3.50.2
2024-05-19 16:42:02,481:INFO:             fastapi: 0.109.0
2024-05-19 16:42:02,481:INFO:             uvicorn: 0.27.0
2024-05-19 16:42:02,481:INFO:              m2cgen: 0.10.0
2024-05-19 16:42:02,481:INFO:           evidently: 0.4.17
2024-05-19 16:42:02,481:INFO:               fugue: 0.8.6
2024-05-19 16:42:02,481:INFO:           streamlit: 1.30.0
2024-05-19 16:42:02,481:INFO:             prophet: Not installed
2024-05-19 16:42:02,481:INFO:None
2024-05-19 16:42:02,481:INFO:Set up GPU usage.
2024-05-19 16:42:02,481:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:02,481:WARNING:cuML is outdated or not found. Required version is >=23.08.
                Please visit https://rapids.ai/install for installation instructions.
2024-05-19 16:42:02,482:INFO:Set up data.
2024-05-19 16:42:02,488:INFO:Set up folding strategy.
2024-05-19 16:42:02,489:INFO:Set up train/test split.
2024-05-19 16:42:02,494:INFO:Set up index.
2024-05-19 16:42:02,494:INFO:Assigning column types.
2024-05-19 16:42:02,497:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-19 16:42:02,497:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:02,542:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 16:42:02,542:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:02,544:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:02,544:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-19 16:42:02,544:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:02,573:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:02,578:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:02,581:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 16:42:02,664:WARNING:Could not find the number of physical cores for the following reason:
found 0 physical cores < 1
Returning the number of logical cores instead. You can silence this warning by setting LOKY_MAX_CPU_COUNT to the number of cores you want to use.

2024-05-19 16:42:02,955:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 16:42:02,985:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,055:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 16:42:03,056:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,057:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,059:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-19 16:42:03,059:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,080:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,084:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,085:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 16:42:03,101:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 16:42:03,102:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-19 16:42:03,102:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,175:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,176:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,177:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-19 16:42:03,177:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,217:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,226:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,233:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 16:42:03,256:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 16:42:03,258:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,340:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,341:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,342:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-19 16:42:03,342:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,376:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,384:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,385:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 16:42:03,403:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 16:42:03,404:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-19 16:42:03,404:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,484:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,485:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,486:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,518:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,525:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,527:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 16:42:03,548:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 16:42:03,549:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,627:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,628:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,628:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,658:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,662:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,663:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 16:42:03,680:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 16:42:03,682:INFO:Preparing preprocessing pipeline...
2024-05-19 16:42:03,683:INFO:Set up simple imputation.
2024-05-19 16:42:03,684:INFO:Set up column name cleaning.
2024-05-19 16:42:03,714:INFO:Finished creating preprocessing pipeline.
2024-05-19 16:42:03,721:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\anson\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'tx', 'dx', 'bmi',
                                             'leg', 'armc', 'waist', 'sub',
                                             'albumin', 'sex_male',
                                             're_Non-Hispanic Black',
                                             're_Non-Hispanic White',
                                             're_Other Hispanic',
                                             're_Other Race Including '
                                             'Multi-Racial'],
                                    transformer=SimpleIm...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-05-19 16:42:03,721:INFO:Creating final display dataframe.
2024-05-19 16:42:03,807:INFO:Setup _display_container:                     Description            Value
0                    Session id              888
1                        Target           Target
2                   Target type           Binary
3           Original data shape       (4756, 16)
4        Transformed data shape       (4756, 16)
5   Transformed train set shape       (3329, 16)
6    Transformed test set shape       (1427, 16)
7              Numeric features               15
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU             True
16               Log Experiment     MlflowLogger
17              Experiment Name         diabetes
18                          USI             603a
2024-05-19 16:42:03,807:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,851:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,852:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,852:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,873:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,877:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,878:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 16:42:03,894:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 16:42:03,895:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,967:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,967:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:03,968:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:04,000:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:04,004:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:42:04,005:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 16:42:04,021:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 16:42:04,023:INFO:Logging experiment in loggers
2024-05-19 16:42:04,319:INFO:SubProcess save_model() called ==================================
2024-05-19 16:42:04,327:INFO:Initializing save_model()
2024-05-19 16:42:04,327:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\anson\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'tx', 'dx', 'bmi',
                                             'leg', 'armc', 'waist', 'sub',
                                             'albumin', 'sex_male',
                                             're_Non-Hispanic Black',
                                             're_Non-Hispanic White',
                                             're_Other Hispanic',
                                             're_Other Race Including '
                                             'Multi-Racial'],
                                    transformer=SimpleIm...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=C:\Users\anson\AppData\Local\Temp\tmpn5opy3pg\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\anson\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'tx', 'dx', 'bmi',
                                             'leg', 'armc', 'waist', 'sub',
                                             'albumin', 'sex_male',
                                             're_Non-Hispanic Black',
                                             're_Non-Hispanic White',
                                             're_Other Hispanic',
                                             're_Other Race Including '
                                             'Multi-Racial'],
                                    transformer=SimpleIm...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-05-19 16:42:04,327:INFO:Adding model into prep_pipe
2024-05-19 16:42:04,327:WARNING:Only Model saved as it was a pipeline.
2024-05-19 16:42:04,331:INFO:C:\Users\anson\AppData\Local\Temp\tmpn5opy3pg\Transformation Pipeline.pkl saved in current working directory
2024-05-19 16:42:04,334:INFO:Pipeline(memory=FastMemory(location=C:\Users\anson\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'tx', 'dx', 'bmi',
                                             'leg', 'armc', 'waist', 'sub',
                                             'albumin', 'sex_male',
                                             're_Non-Hispanic Black',
                                             're_Non-Hispanic White',
                                             're_Other Hispanic',
                                             're_Other Race Including '
                                             'Multi-Racial'],
                                    transformer=SimpleIm...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-05-19 16:42:04,334:INFO:save_model() successfully completed......................................
2024-05-19 16:42:04,554:INFO:SubProcess save_model() end ==================================
2024-05-19 16:42:04,605:INFO:setup() successfully completed in 3.87s...............
2024-05-19 16:42:06,254:INFO:Initializing compare_models()
2024-05-19 16:42:06,254:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024486F0A690>, include=['lr', 'dt', 'rf'], exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000024486F0A690>, 'include': ['lr', 'dt', 'rf'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-05-19 16:42:06,254:INFO:Checking exceptions
2024-05-19 16:42:06,259:INFO:Preparing display monitor
2024-05-19 16:42:06,296:INFO:Initializing Logistic Regression
2024-05-19 16:42:06,296:INFO:Total runtime is 1.840988794962565e-05 minutes
2024-05-19 16:42:06,305:INFO:SubProcess create_model() called ==================================
2024-05-19 16:42:06,306:INFO:Initializing create_model()
2024-05-19 16:42:06,306:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024486F0A690>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000244BD3DBF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 16:42:06,306:INFO:Checking exceptions
2024-05-19 16:42:06,306:INFO:Importing libraries
2024-05-19 16:42:06,306:INFO:Copying training dataset
2024-05-19 16:42:06,315:INFO:Defining folds
2024-05-19 16:42:06,315:INFO:Declaring metric variables
2024-05-19 16:42:06,321:INFO:Importing untrained model
2024-05-19 16:42:06,327:INFO:Logistic Regression Imported successfully
2024-05-19 16:42:06,338:INFO:Starting cross validation
2024-05-19 16:42:06,339:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:42:10,489:INFO:Calculating mean and std
2024-05-19 16:42:10,490:INFO:Creating metrics dataframe
2024-05-19 16:42:10,496:INFO:Uploading results into container
2024-05-19 16:42:10,498:INFO:Uploading model into container now
2024-05-19 16:42:10,498:INFO:_master_model_container: 1
2024-05-19 16:42:10,498:INFO:_display_container: 2
2024-05-19 16:42:10,499:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=888, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-19 16:42:10,499:INFO:create_model() successfully completed......................................
2024-05-19 16:42:10,715:INFO:SubProcess create_model() end ==================================
2024-05-19 16:42:10,715:INFO:Creating metrics dataframe
2024-05-19 16:42:10,727:INFO:Initializing Decision Tree Classifier
2024-05-19 16:42:10,727:INFO:Total runtime is 0.0738537629445394 minutes
2024-05-19 16:42:10,733:INFO:SubProcess create_model() called ==================================
2024-05-19 16:42:10,734:INFO:Initializing create_model()
2024-05-19 16:42:10,734:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024486F0A690>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000244BD3DBF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 16:42:10,734:INFO:Checking exceptions
2024-05-19 16:42:10,734:INFO:Importing libraries
2024-05-19 16:42:10,734:INFO:Copying training dataset
2024-05-19 16:42:10,741:INFO:Defining folds
2024-05-19 16:42:10,742:INFO:Declaring metric variables
2024-05-19 16:42:10,748:INFO:Importing untrained model
2024-05-19 16:42:10,752:INFO:Decision Tree Classifier Imported successfully
2024-05-19 16:42:10,760:INFO:Starting cross validation
2024-05-19 16:42:10,762:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:42:11,232:INFO:Calculating mean and std
2024-05-19 16:42:11,234:INFO:Creating metrics dataframe
2024-05-19 16:42:11,238:INFO:Uploading results into container
2024-05-19 16:42:11,239:INFO:Uploading model into container now
2024-05-19 16:42:11,239:INFO:_master_model_container: 2
2024-05-19 16:42:11,240:INFO:_display_container: 2
2024-05-19 16:42:11,240:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best')
2024-05-19 16:42:11,240:INFO:create_model() successfully completed......................................
2024-05-19 16:42:11,481:INFO:SubProcess create_model() end ==================================
2024-05-19 16:42:11,481:INFO:Creating metrics dataframe
2024-05-19 16:42:11,498:INFO:Initializing Random Forest Classifier
2024-05-19 16:42:11,498:INFO:Total runtime is 0.08670239051183065 minutes
2024-05-19 16:42:11,507:INFO:SubProcess create_model() called ==================================
2024-05-19 16:42:11,508:INFO:Initializing create_model()
2024-05-19 16:42:11,508:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024486F0A690>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000244BD3DBF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 16:42:11,508:INFO:Checking exceptions
2024-05-19 16:42:11,508:INFO:Importing libraries
2024-05-19 16:42:11,508:INFO:Copying training dataset
2024-05-19 16:42:11,518:INFO:Defining folds
2024-05-19 16:42:11,518:INFO:Declaring metric variables
2024-05-19 16:42:11,523:INFO:Importing untrained model
2024-05-19 16:42:11,531:INFO:Random Forest Classifier Imported successfully
2024-05-19 16:42:11,538:INFO:Starting cross validation
2024-05-19 16:42:11,539:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:42:17,185:INFO:Calculating mean and std
2024-05-19 16:42:17,186:INFO:Creating metrics dataframe
2024-05-19 16:42:17,189:INFO:Uploading results into container
2024-05-19 16:42:17,189:INFO:Uploading model into container now
2024-05-19 16:42:17,190:INFO:_master_model_container: 3
2024-05-19 16:42:17,190:INFO:_display_container: 2
2024-05-19 16:42:17,191:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False)
2024-05-19 16:42:17,191:INFO:create_model() successfully completed......................................
2024-05-19 16:42:17,406:INFO:SubProcess create_model() end ==================================
2024-05-19 16:42:17,406:INFO:Creating metrics dataframe
2024-05-19 16:42:17,434:INFO:Initializing create_model()
2024-05-19 16:42:17,434:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024486F0A690>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=888, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 16:42:17,434:INFO:Checking exceptions
2024-05-19 16:42:17,436:INFO:Importing libraries
2024-05-19 16:42:17,436:INFO:Copying training dataset
2024-05-19 16:42:17,440:INFO:Defining folds
2024-05-19 16:42:17,441:INFO:Declaring metric variables
2024-05-19 16:42:17,441:INFO:Importing untrained model
2024-05-19 16:42:17,441:INFO:Declaring custom model
2024-05-19 16:42:17,441:INFO:Logistic Regression Imported successfully
2024-05-19 16:42:17,442:INFO:Cross validation set to False
2024-05-19 16:42:17,442:INFO:Fitting Model
2024-05-19 16:42:17,868:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=888, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-19 16:42:17,868:INFO:create_model() successfully completed......................................
2024-05-19 16:42:18,078:INFO:Creating Dashboard logs
2024-05-19 16:42:18,084:INFO:Model: Logistic Regression
2024-05-19 16:42:18,150:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 888, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-05-19 16:42:18,302:INFO:Initializing predict_model()
2024-05-19 16:42:18,302:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024486F0A690>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=888, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000244C049B1A0>)
2024-05-19 16:42:18,302:INFO:Checking exceptions
2024-05-19 16:42:18,302:INFO:Preloading libraries
2024-05-19 16:42:18,648:WARNING:Setuptools is replacing distutils.

2024-05-19 16:42:18,929:INFO:Creating Dashboard logs
2024-05-19 16:42:18,933:INFO:Model: Random Forest Classifier
2024-05-19 16:42:19,003:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 888, 'verbose': 0, 'warm_start': False}
2024-05-19 16:42:19,528:INFO:Creating Dashboard logs
2024-05-19 16:42:19,533:INFO:Model: Decision Tree Classifier
2024-05-19 16:42:19,605:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 888, 'splitter': 'best'}
2024-05-19 16:42:20,146:INFO:_master_model_container: 3
2024-05-19 16:42:20,146:INFO:_display_container: 2
2024-05-19 16:42:20,146:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=888, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-19 16:42:20,147:INFO:compare_models() successfully completed......................................
2024-05-19 16:42:29,472:INFO:Initializing compare_models()
2024-05-19 16:42:29,472:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024486F0A690>, include=['lr', 'dt', 'rf'], exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000024486F0A690>, 'include': ['lr', 'dt', 'rf'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-05-19 16:42:29,472:INFO:Checking exceptions
2024-05-19 16:42:29,475:INFO:Preparing display monitor
2024-05-19 16:42:29,501:INFO:Initializing Logistic Regression
2024-05-19 16:42:29,501:INFO:Total runtime is 0.0 minutes
2024-05-19 16:42:29,506:INFO:SubProcess create_model() called ==================================
2024-05-19 16:42:29,507:INFO:Initializing create_model()
2024-05-19 16:42:29,507:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024486F0A690>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000244B6FA3690>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 16:42:29,507:INFO:Checking exceptions
2024-05-19 16:42:29,508:INFO:Importing libraries
2024-05-19 16:42:29,508:INFO:Copying training dataset
2024-05-19 16:42:29,514:INFO:Defining folds
2024-05-19 16:42:29,514:INFO:Declaring metric variables
2024-05-19 16:42:29,517:INFO:Importing untrained model
2024-05-19 16:42:29,522:INFO:Logistic Regression Imported successfully
2024-05-19 16:42:29,535:INFO:Starting cross validation
2024-05-19 16:42:29,536:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:42:33,877:INFO:Calculating mean and std
2024-05-19 16:42:33,879:INFO:Creating metrics dataframe
2024-05-19 16:42:33,881:INFO:Uploading results into container
2024-05-19 16:42:33,882:INFO:Uploading model into container now
2024-05-19 16:42:33,882:INFO:_master_model_container: 4
2024-05-19 16:42:33,882:INFO:_display_container: 3
2024-05-19 16:42:33,883:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=888, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-19 16:42:33,883:INFO:create_model() successfully completed......................................
2024-05-19 16:42:34,089:INFO:SubProcess create_model() end ==================================
2024-05-19 16:42:34,089:INFO:Creating metrics dataframe
2024-05-19 16:42:34,100:INFO:Initializing Decision Tree Classifier
2024-05-19 16:42:34,100:INFO:Total runtime is 0.0766529401143392 minutes
2024-05-19 16:42:34,105:INFO:SubProcess create_model() called ==================================
2024-05-19 16:42:34,105:INFO:Initializing create_model()
2024-05-19 16:42:34,105:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024486F0A690>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000244B6FA3690>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 16:42:34,106:INFO:Checking exceptions
2024-05-19 16:42:34,106:INFO:Importing libraries
2024-05-19 16:42:34,106:INFO:Copying training dataset
2024-05-19 16:42:34,113:INFO:Defining folds
2024-05-19 16:42:34,113:INFO:Declaring metric variables
2024-05-19 16:42:34,116:INFO:Importing untrained model
2024-05-19 16:42:34,122:INFO:Decision Tree Classifier Imported successfully
2024-05-19 16:42:34,131:INFO:Starting cross validation
2024-05-19 16:42:34,132:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:42:34,600:INFO:Calculating mean and std
2024-05-19 16:42:34,602:INFO:Creating metrics dataframe
2024-05-19 16:42:34,606:INFO:Uploading results into container
2024-05-19 16:42:34,606:INFO:Uploading model into container now
2024-05-19 16:42:34,607:INFO:_master_model_container: 5
2024-05-19 16:42:34,607:INFO:_display_container: 3
2024-05-19 16:42:34,609:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best')
2024-05-19 16:42:34,610:INFO:create_model() successfully completed......................................
2024-05-19 16:42:34,813:INFO:SubProcess create_model() end ==================================
2024-05-19 16:42:34,813:INFO:Creating metrics dataframe
2024-05-19 16:42:34,833:INFO:Initializing Random Forest Classifier
2024-05-19 16:42:34,833:INFO:Total runtime is 0.08886835177739462 minutes
2024-05-19 16:42:34,837:INFO:SubProcess create_model() called ==================================
2024-05-19 16:42:34,839:INFO:Initializing create_model()
2024-05-19 16:42:34,839:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024486F0A690>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000244B6FA3690>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 16:42:34,839:INFO:Checking exceptions
2024-05-19 16:42:34,840:INFO:Importing libraries
2024-05-19 16:42:34,840:INFO:Copying training dataset
2024-05-19 16:42:34,847:INFO:Defining folds
2024-05-19 16:42:34,847:INFO:Declaring metric variables
2024-05-19 16:42:34,851:INFO:Importing untrained model
2024-05-19 16:42:34,855:INFO:Random Forest Classifier Imported successfully
2024-05-19 16:42:34,864:INFO:Starting cross validation
2024-05-19 16:42:34,865:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:42:37,564:INFO:Calculating mean and std
2024-05-19 16:42:37,566:INFO:Creating metrics dataframe
2024-05-19 16:42:37,570:INFO:Uploading results into container
2024-05-19 16:42:37,571:INFO:Uploading model into container now
2024-05-19 16:42:37,571:INFO:_master_model_container: 6
2024-05-19 16:42:37,571:INFO:_display_container: 3
2024-05-19 16:42:37,571:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False)
2024-05-19 16:42:37,572:INFO:create_model() successfully completed......................................
2024-05-19 16:42:37,785:INFO:SubProcess create_model() end ==================================
2024-05-19 16:42:37,785:INFO:Creating metrics dataframe
2024-05-19 16:42:37,816:INFO:Initializing create_model()
2024-05-19 16:42:37,817:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024486F0A690>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=888, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 16:42:37,817:INFO:Checking exceptions
2024-05-19 16:42:37,818:INFO:Importing libraries
2024-05-19 16:42:37,819:INFO:Copying training dataset
2024-05-19 16:42:37,824:INFO:Defining folds
2024-05-19 16:42:37,824:INFO:Declaring metric variables
2024-05-19 16:42:37,825:INFO:Importing untrained model
2024-05-19 16:42:37,825:INFO:Declaring custom model
2024-05-19 16:42:37,826:INFO:Logistic Regression Imported successfully
2024-05-19 16:42:37,829:INFO:Cross validation set to False
2024-05-19 16:42:37,829:INFO:Fitting Model
2024-05-19 16:42:38,321:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=888, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-19 16:42:38,321:INFO:create_model() successfully completed......................................
2024-05-19 16:42:38,526:INFO:Creating Dashboard logs
2024-05-19 16:42:38,532:INFO:Model: Logistic Regression
2024-05-19 16:42:38,595:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 888, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-05-19 16:42:38,764:INFO:Initializing predict_model()
2024-05-19 16:42:38,764:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024486F0A690>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=888, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000244CA9CFC40>)
2024-05-19 16:42:38,764:INFO:Checking exceptions
2024-05-19 16:42:38,764:INFO:Preloading libraries
2024-05-19 16:42:39,356:INFO:Creating Dashboard logs
2024-05-19 16:42:39,363:INFO:Model: Random Forest Classifier
2024-05-19 16:42:39,429:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 888, 'verbose': 0, 'warm_start': False}
2024-05-19 16:42:39,933:INFO:Creating Dashboard logs
2024-05-19 16:42:39,939:INFO:Model: Decision Tree Classifier
2024-05-19 16:42:40,008:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 888, 'splitter': 'best'}
2024-05-19 16:42:40,554:INFO:_master_model_container: 6
2024-05-19 16:42:40,554:INFO:_display_container: 3
2024-05-19 16:42:40,554:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=888, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-19 16:42:40,554:INFO:compare_models() successfully completed......................................
2024-05-19 16:46:12,924:INFO:Initializing create_model()
2024-05-19 16:46:12,924:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024486F0A690>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={'penalty': 'l1', 'solver': 'liblinear'})
2024-05-19 16:46:12,925:INFO:Checking exceptions
2024-05-19 16:46:12,943:INFO:Importing libraries
2024-05-19 16:46:12,943:INFO:Copying training dataset
2024-05-19 16:46:12,950:INFO:Defining folds
2024-05-19 16:46:12,950:INFO:Declaring metric variables
2024-05-19 16:46:12,956:INFO:Importing untrained model
2024-05-19 16:46:12,962:INFO:Logistic Regression Imported successfully
2024-05-19 16:46:12,971:INFO:Starting cross validation
2024-05-19 16:46:12,972:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:46:14,292:INFO:Calculating mean and std
2024-05-19 16:46:14,294:INFO:Creating metrics dataframe
2024-05-19 16:46:14,300:INFO:Finalizing model
2024-05-19 16:46:14,412:INFO:Creating Dashboard logs
2024-05-19 16:46:14,415:INFO:Model: Logistic Regression
2024-05-19 16:46:14,472:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l1', 'random_state': 888, 'solver': 'liblinear', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-05-19 16:46:14,623:INFO:Initializing predict_model()
2024-05-19 16:46:14,623:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024486F0A690>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000244BFAE8E00>)
2024-05-19 16:46:14,623:INFO:Checking exceptions
2024-05-19 16:46:14,623:INFO:Preloading libraries
2024-05-19 16:46:15,168:INFO:Uploading results into container
2024-05-19 16:46:15,170:INFO:Uploading model into container now
2024-05-19 16:46:15,184:INFO:_master_model_container: 7
2024-05-19 16:46:15,184:INFO:_display_container: 4
2024-05-19 16:46:15,184:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-19 16:46:15,184:INFO:create_model() successfully completed......................................
2024-05-19 16:46:15,397:INFO:Initializing tune_model()
2024-05-19 16:46:15,397:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024486F0A690>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False), fold=10, round=4, n_iter=10, custom_grid=None, optimize=recall, custom_scorer=None, search_library=scikit-learn, search_algorithm=complete, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-19 16:46:15,397:INFO:Checking exceptions
2024-05-19 16:46:40,300:INFO:Initializing create_model()
2024-05-19 16:46:40,300:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024486F0A690>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={'penalty': 'l1', 'solver': 'liblinear'})
2024-05-19 16:46:40,300:INFO:Checking exceptions
2024-05-19 16:46:40,317:INFO:Importing libraries
2024-05-19 16:46:40,317:INFO:Copying training dataset
2024-05-19 16:46:40,324:INFO:Defining folds
2024-05-19 16:46:40,325:INFO:Declaring metric variables
2024-05-19 16:46:40,329:INFO:Importing untrained model
2024-05-19 16:46:40,336:INFO:Logistic Regression Imported successfully
2024-05-19 16:46:40,343:INFO:Starting cross validation
2024-05-19 16:46:40,344:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:46:41,509:INFO:Calculating mean and std
2024-05-19 16:46:41,510:INFO:Creating metrics dataframe
2024-05-19 16:46:41,518:INFO:Finalizing model
2024-05-19 16:46:41,640:INFO:Creating Dashboard logs
2024-05-19 16:46:41,642:INFO:Model: Logistic Regression
2024-05-19 16:46:41,698:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l1', 'random_state': 888, 'solver': 'liblinear', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-05-19 16:46:41,846:INFO:Initializing predict_model()
2024-05-19 16:46:41,846:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024486F0A690>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000244CD455260>)
2024-05-19 16:46:41,846:INFO:Checking exceptions
2024-05-19 16:46:41,846:INFO:Preloading libraries
2024-05-19 16:46:42,495:INFO:Uploading results into container
2024-05-19 16:46:42,498:INFO:Uploading model into container now
2024-05-19 16:46:42,511:INFO:_master_model_container: 8
2024-05-19 16:46:42,511:INFO:_display_container: 5
2024-05-19 16:46:42,511:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-19 16:46:42,511:INFO:create_model() successfully completed......................................
2024-05-19 16:46:42,782:INFO:Initializing tune_model()
2024-05-19 16:46:42,782:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024486F0A690>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False), fold=10, round=4, n_iter=10, custom_grid=None, optimize=recall, custom_scorer=None, search_library=scikit-learn, search_algorithm=grid, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-19 16:46:42,782:INFO:Checking exceptions
2024-05-19 16:46:42,801:INFO:Copying training dataset
2024-05-19 16:46:42,807:INFO:Checking base model
2024-05-19 16:46:42,807:INFO:Base model : Logistic Regression
2024-05-19 16:46:42,813:INFO:Declaring metric variables
2024-05-19 16:46:42,818:INFO:Defining Hyperparameters
2024-05-19 16:46:43,196:INFO:Tuning with n_jobs=-1
2024-05-19 16:46:43,196:INFO:Initializing GridSearchCV
2024-05-19 16:49:47,209:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:49:47,209:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:49:47,209:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:49:47,210:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:05,770:INFO:PyCaret ClassificationExperiment
2024-05-19 16:50:05,770:INFO:Logging name: diabetes
2024-05-19 16:50:05,770:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-19 16:50:05,770:INFO:version 3.2.0
2024-05-19 16:50:05,770:INFO:Initializing setup()
2024-05-19 16:50:05,770:INFO:self.USI: 62aa
2024-05-19 16:50:05,770:INFO:self._variable_keys: {'logging_param', 'fold_groups_param', '_ml_usecase', 'log_plots_param', 'y', 'X_test', 'gpu_param', '_available_plots', 'fold_generator', 'exp_id', 'n_jobs_param', 'target_param', 'fix_imbalance', 'y_test', 'pipeline', 'gpu_n_jobs_param', 'X', 'memory', 'data', 'html_param', 'USI', 'fold_shuffle_param', 'idx', 'is_multiclass', 'X_train', 'y_train', 'seed', 'exp_name_log'}
2024-05-19 16:50:05,770:INFO:Checking environment
2024-05-19 16:50:05,771:INFO:python_version: 3.11.5
2024-05-19 16:50:05,771:INFO:python_build: ('tags/v3.11.5:cce6ba9', 'Aug 24 2023 14:38:34')
2024-05-19 16:50:05,771:INFO:machine: AMD64
2024-05-19 16:50:05,771:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-19 16:50:05,778:INFO:Memory: svmem(total=16968298496, available=2912301056, percent=82.8, used=14055997440, free=2912301056)
2024-05-19 16:50:05,778:INFO:Physical Core: 4
2024-05-19 16:50:05,778:INFO:Logical Core: 8
2024-05-19 16:50:05,778:INFO:Checking libraries
2024-05-19 16:50:05,778:INFO:System:
2024-05-19 16:50:05,778:INFO:    python: 3.11.5 (tags/v3.11.5:cce6ba9, Aug 24 2023, 14:38:34) [MSC v.1936 64 bit (AMD64)]
2024-05-19 16:50:05,778:INFO:executable: c:\Users\anson\AppData\Local\Programs\Python\Python311\python.exe
2024-05-19 16:50:05,778:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-19 16:50:05,778:INFO:PyCaret required dependencies:
2024-05-19 16:50:06,239:INFO:                 pip: 23.3.2
2024-05-19 16:50:06,240:INFO:          setuptools: 69.0.3
2024-05-19 16:50:06,240:INFO:             pycaret: 3.2.0
2024-05-19 16:50:06,240:INFO:             IPython: 8.12.3
2024-05-19 16:50:06,240:INFO:          ipywidgets: 7.8.1
2024-05-19 16:50:06,240:INFO:                tqdm: 4.66.1
2024-05-19 16:50:06,240:INFO:               numpy: 1.24.2
2024-05-19 16:50:06,240:INFO:              pandas: 1.5.2
2024-05-19 16:50:06,240:INFO:              jinja2: 3.1.3
2024-05-19 16:50:06,240:INFO:               scipy: 1.10.1
2024-05-19 16:50:06,240:INFO:              joblib: 1.2.0
2024-05-19 16:50:06,240:INFO:             sklearn: 1.2.2
2024-05-19 16:50:06,240:INFO:                pyod: 1.1.2
2024-05-19 16:50:06,240:INFO:            imblearn: 0.12.0
2024-05-19 16:50:06,240:INFO:   category_encoders: 2.6.3
2024-05-19 16:50:06,240:INFO:            lightgbm: 4.3.0
2024-05-19 16:50:06,240:INFO:               numba: 0.58.1
2024-05-19 16:50:06,240:INFO:            requests: 2.31.0
2024-05-19 16:50:06,240:INFO:          matplotlib: 3.6.0
2024-05-19 16:50:06,240:INFO:          scikitplot: 0.3.7
2024-05-19 16:50:06,241:INFO:         yellowbrick: 1.5
2024-05-19 16:50:06,241:INFO:              plotly: 5.18.0
2024-05-19 16:50:06,241:INFO:    plotly-resampler: Not installed
2024-05-19 16:50:06,241:INFO:             kaleido: 0.2.1
2024-05-19 16:50:06,241:INFO:           schemdraw: 0.15
2024-05-19 16:50:06,241:INFO:         statsmodels: 0.14.0
2024-05-19 16:50:06,241:INFO:              sktime: 0.21.1
2024-05-19 16:50:06,241:INFO:               tbats: 1.1.3
2024-05-19 16:50:06,241:INFO:            pmdarima: 2.0.4
2024-05-19 16:50:06,241:INFO:              psutil: 5.9.5
2024-05-19 16:50:06,241:INFO:          markupsafe: 2.1.2
2024-05-19 16:50:06,241:INFO:             pickle5: Not installed
2024-05-19 16:50:06,241:INFO:         cloudpickle: 2.2.1
2024-05-19 16:50:06,241:INFO:         deprecation: 2.1.0
2024-05-19 16:50:06,241:INFO:              xxhash: 3.4.1
2024-05-19 16:50:06,241:INFO:           wurlitzer: Not installed
2024-05-19 16:50:06,241:INFO:PyCaret optional dependencies:
2024-05-19 16:50:06,481:WARNING:IPython detected, but you already have a custom exception handler installed. I'll skip installing Trio's custom handler, but this means exception groups will not show full tracebacks.

2024-05-19 16:50:08,233:INFO:                shap: 0.44.1
2024-05-19 16:50:08,233:INFO:           interpret: 0.5.0
2024-05-19 16:50:08,233:INFO:                umap: 0.5.5
2024-05-19 16:50:08,233:INFO:     ydata_profiling: 4.6.0
2024-05-19 16:50:08,233:INFO:  explainerdashboard: 0.4.5
2024-05-19 16:50:08,233:INFO:             autoviz: Not installed
2024-05-19 16:50:08,233:INFO:           fairlearn: 0.7.0
2024-05-19 16:50:08,233:INFO:          deepchecks: Not installed
2024-05-19 16:50:08,233:INFO:             xgboost: 2.0.3
2024-05-19 16:50:08,233:INFO:            catboost: 1.2.2
2024-05-19 16:50:08,233:INFO:              kmodes: 0.12.2
2024-05-19 16:50:08,233:INFO:             mlxtend: 0.23.1
2024-05-19 16:50:08,233:INFO:       statsforecast: 1.5.0
2024-05-19 16:50:08,233:INFO:        tune_sklearn: Not installed
2024-05-19 16:50:08,233:INFO:                 ray: Not installed
2024-05-19 16:50:08,233:INFO:            hyperopt: 0.2.7
2024-05-19 16:50:08,233:INFO:              optuna: 3.5.0
2024-05-19 16:50:08,234:INFO:               skopt: 0.9.0
2024-05-19 16:50:08,234:INFO:              mlflow: 2.10.0
2024-05-19 16:50:08,234:INFO:              gradio: 3.50.2
2024-05-19 16:50:08,234:INFO:             fastapi: 0.109.0
2024-05-19 16:50:08,234:INFO:             uvicorn: 0.27.0
2024-05-19 16:50:08,234:INFO:              m2cgen: 0.10.0
2024-05-19 16:50:08,234:INFO:           evidently: 0.4.17
2024-05-19 16:50:08,234:INFO:               fugue: 0.8.6
2024-05-19 16:50:08,234:INFO:           streamlit: 1.30.0
2024-05-19 16:50:08,234:INFO:             prophet: Not installed
2024-05-19 16:50:08,234:INFO:None
2024-05-19 16:50:08,234:INFO:Set up GPU usage.
2024-05-19 16:50:08,234:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:08,234:WARNING:cuML is outdated or not found. Required version is >=23.08.
                Please visit https://rapids.ai/install for installation instructions.
2024-05-19 16:50:08,234:INFO:Set up data.
2024-05-19 16:50:08,241:INFO:Set up folding strategy.
2024-05-19 16:50:08,241:INFO:Set up train/test split.
2024-05-19 16:50:08,247:INFO:Set up index.
2024-05-19 16:50:08,247:INFO:Assigning column types.
2024-05-19 16:50:08,251:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-19 16:50:08,251:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:08,299:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 16:50:08,299:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:08,301:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:08,301:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-19 16:50:08,301:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:08,327:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:08,331:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:08,334:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 16:50:08,408:WARNING:Could not find the number of physical cores for the following reason:
found 0 physical cores < 1
Returning the number of logical cores instead. You can silence this warning by setting LOKY_MAX_CPU_COUNT to the number of cores you want to use.

2024-05-19 16:50:08,688:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 16:50:08,720:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:08,793:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 16:50:08,793:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:08,794:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:08,795:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-19 16:50:08,795:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:08,818:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:08,823:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:08,824:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 16:50:08,841:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 16:50:08,842:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-19 16:50:08,842:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:08,916:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:08,916:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:08,917:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-19 16:50:08,917:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:08,952:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:08,959:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:08,960:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 16:50:08,987:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 16:50:08,988:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:09,059:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:09,060:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:09,061:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-19 16:50:09,061:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:09,093:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:09,098:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:09,099:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 16:50:09,116:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 16:50:09,117:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-19 16:50:09,117:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:09,192:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:09,193:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:09,194:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:09,228:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:09,235:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:09,236:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 16:50:09,256:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 16:50:09,257:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:09,341:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:09,342:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:09,342:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:09,372:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:09,376:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:09,377:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 16:50:09,395:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 16:50:09,398:INFO:Preparing preprocessing pipeline...
2024-05-19 16:50:09,399:INFO:Set up simple imputation.
2024-05-19 16:50:09,402:INFO:Set up column name cleaning.
2024-05-19 16:50:09,431:INFO:Finished creating preprocessing pipeline.
2024-05-19 16:50:09,439:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\anson\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'tx', 'dx', 'bmi',
                                             'leg', 'armc', 'waist', 'sub',
                                             'albumin', 'sex_male',
                                             're_Non-Hispanic Black',
                                             're_Non-Hispanic White',
                                             're_Other Hispanic',
                                             're_Other Race Including '
                                             'Multi-Racial'],
                                    transformer=SimpleIm...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-05-19 16:50:09,439:INFO:Creating final display dataframe.
2024-05-19 16:50:09,536:INFO:Setup _display_container:                     Description            Value
0                    Session id              888
1                        Target           Target
2                   Target type           Binary
3           Original data shape       (4756, 16)
4        Transformed data shape       (4756, 16)
5   Transformed train set shape       (3329, 16)
6    Transformed test set shape       (1427, 16)
7              Numeric features               15
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU             True
16               Log Experiment     MlflowLogger
17              Experiment Name         diabetes
18                          USI             62aa
2024-05-19 16:50:09,536:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:09,588:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:09,588:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:09,589:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:09,613:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:09,619:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:09,620:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 16:50:09,637:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 16:50:09,639:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:09,711:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:09,711:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:09,712:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:09,747:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:09,751:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:50:09,752:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 16:50:09,768:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 16:50:09,769:INFO:Logging experiment in loggers
2024-05-19 16:50:10,090:INFO:SubProcess save_model() called ==================================
2024-05-19 16:50:10,096:INFO:Initializing save_model()
2024-05-19 16:50:10,096:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\anson\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'tx', 'dx', 'bmi',
                                             'leg', 'armc', 'waist', 'sub',
                                             'albumin', 'sex_male',
                                             're_Non-Hispanic Black',
                                             're_Non-Hispanic White',
                                             're_Other Hispanic',
                                             're_Other Race Including '
                                             'Multi-Racial'],
                                    transformer=SimpleIm...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=C:\Users\anson\AppData\Local\Temp\tmpgitulukd\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\anson\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'tx', 'dx', 'bmi',
                                             'leg', 'armc', 'waist', 'sub',
                                             'albumin', 'sex_male',
                                             're_Non-Hispanic Black',
                                             're_Non-Hispanic White',
                                             're_Other Hispanic',
                                             're_Other Race Including '
                                             'Multi-Racial'],
                                    transformer=SimpleIm...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-05-19 16:50:10,096:INFO:Adding model into prep_pipe
2024-05-19 16:50:10,096:WARNING:Only Model saved as it was a pipeline.
2024-05-19 16:50:10,099:INFO:C:\Users\anson\AppData\Local\Temp\tmpgitulukd\Transformation Pipeline.pkl saved in current working directory
2024-05-19 16:50:10,104:INFO:Pipeline(memory=FastMemory(location=C:\Users\anson\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'tx', 'dx', 'bmi',
                                             'leg', 'armc', 'waist', 'sub',
                                             'albumin', 'sex_male',
                                             're_Non-Hispanic Black',
                                             're_Non-Hispanic White',
                                             're_Other Hispanic',
                                             're_Other Race Including '
                                             'Multi-Racial'],
                                    transformer=SimpleIm...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-05-19 16:50:10,104:INFO:save_model() successfully completed......................................
2024-05-19 16:50:10,319:INFO:SubProcess save_model() end ==================================
2024-05-19 16:50:10,376:INFO:setup() successfully completed in 4.0s...............
2024-05-19 16:50:12,813:INFO:Initializing compare_models()
2024-05-19 16:50:12,813:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E86B8D710>, include=['lr', 'dt', 'rf'], exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000018E86B8D710>, 'include': ['lr', 'dt', 'rf'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-05-19 16:50:12,813:INFO:Checking exceptions
2024-05-19 16:50:12,820:INFO:Preparing display monitor
2024-05-19 16:50:12,851:INFO:Initializing Logistic Regression
2024-05-19 16:50:12,852:INFO:Total runtime is 1.682440439860026e-05 minutes
2024-05-19 16:50:12,857:INFO:SubProcess create_model() called ==================================
2024-05-19 16:50:12,857:INFO:Initializing create_model()
2024-05-19 16:50:12,857:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E86B8D710>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E93160250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 16:50:12,858:INFO:Checking exceptions
2024-05-19 16:50:12,858:INFO:Importing libraries
2024-05-19 16:50:12,858:INFO:Copying training dataset
2024-05-19 16:50:12,866:INFO:Defining folds
2024-05-19 16:50:12,866:INFO:Declaring metric variables
2024-05-19 16:50:12,870:INFO:Importing untrained model
2024-05-19 16:50:12,876:INFO:Logistic Regression Imported successfully
2024-05-19 16:50:12,891:INFO:Starting cross validation
2024-05-19 16:50:12,892:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:50:16,975:INFO:Calculating mean and std
2024-05-19 16:50:16,977:INFO:Creating metrics dataframe
2024-05-19 16:50:16,985:INFO:Uploading results into container
2024-05-19 16:50:16,986:INFO:Uploading model into container now
2024-05-19 16:50:16,986:INFO:_master_model_container: 1
2024-05-19 16:50:16,986:INFO:_display_container: 2
2024-05-19 16:50:16,987:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=888, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-19 16:50:16,987:INFO:create_model() successfully completed......................................
2024-05-19 16:50:17,207:INFO:SubProcess create_model() end ==================================
2024-05-19 16:50:17,208:INFO:Creating metrics dataframe
2024-05-19 16:50:17,223:INFO:Initializing Decision Tree Classifier
2024-05-19 16:50:17,223:INFO:Total runtime is 0.0728692372639974 minutes
2024-05-19 16:50:17,228:INFO:SubProcess create_model() called ==================================
2024-05-19 16:50:17,229:INFO:Initializing create_model()
2024-05-19 16:50:17,229:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E86B8D710>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E93160250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 16:50:17,229:INFO:Checking exceptions
2024-05-19 16:50:17,229:INFO:Importing libraries
2024-05-19 16:50:17,229:INFO:Copying training dataset
2024-05-19 16:50:17,237:INFO:Defining folds
2024-05-19 16:50:17,237:INFO:Declaring metric variables
2024-05-19 16:50:17,243:INFO:Importing untrained model
2024-05-19 16:50:17,247:INFO:Decision Tree Classifier Imported successfully
2024-05-19 16:50:17,260:INFO:Starting cross validation
2024-05-19 16:50:17,261:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:50:17,745:INFO:Calculating mean and std
2024-05-19 16:50:17,746:INFO:Creating metrics dataframe
2024-05-19 16:50:17,750:INFO:Uploading results into container
2024-05-19 16:50:17,750:INFO:Uploading model into container now
2024-05-19 16:50:17,751:INFO:_master_model_container: 2
2024-05-19 16:50:17,751:INFO:_display_container: 2
2024-05-19 16:50:17,751:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best')
2024-05-19 16:50:17,751:INFO:create_model() successfully completed......................................
2024-05-19 16:50:17,961:INFO:SubProcess create_model() end ==================================
2024-05-19 16:50:17,962:INFO:Creating metrics dataframe
2024-05-19 16:50:17,979:INFO:Initializing Random Forest Classifier
2024-05-19 16:50:17,980:INFO:Total runtime is 0.0854783336321513 minutes
2024-05-19 16:50:17,986:INFO:SubProcess create_model() called ==================================
2024-05-19 16:50:17,986:INFO:Initializing create_model()
2024-05-19 16:50:17,986:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E86B8D710>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E93160250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 16:50:17,986:INFO:Checking exceptions
2024-05-19 16:50:17,986:INFO:Importing libraries
2024-05-19 16:50:17,987:INFO:Copying training dataset
2024-05-19 16:50:17,994:INFO:Defining folds
2024-05-19 16:50:17,994:INFO:Declaring metric variables
2024-05-19 16:50:18,000:INFO:Importing untrained model
2024-05-19 16:50:18,007:INFO:Random Forest Classifier Imported successfully
2024-05-19 16:50:18,019:INFO:Starting cross validation
2024-05-19 16:50:18,020:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:50:23,332:INFO:Calculating mean and std
2024-05-19 16:50:23,334:INFO:Creating metrics dataframe
2024-05-19 16:50:23,337:INFO:Uploading results into container
2024-05-19 16:50:23,337:INFO:Uploading model into container now
2024-05-19 16:50:23,339:INFO:_master_model_container: 3
2024-05-19 16:50:23,339:INFO:_display_container: 2
2024-05-19 16:50:23,339:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False)
2024-05-19 16:50:23,339:INFO:create_model() successfully completed......................................
2024-05-19 16:50:23,559:INFO:SubProcess create_model() end ==================================
2024-05-19 16:50:23,559:INFO:Creating metrics dataframe
2024-05-19 16:50:23,592:INFO:Initializing create_model()
2024-05-19 16:50:23,592:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E86B8D710>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=888, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 16:50:23,593:INFO:Checking exceptions
2024-05-19 16:50:23,594:INFO:Importing libraries
2024-05-19 16:50:23,594:INFO:Copying training dataset
2024-05-19 16:50:23,600:INFO:Defining folds
2024-05-19 16:50:23,600:INFO:Declaring metric variables
2024-05-19 16:50:23,601:INFO:Importing untrained model
2024-05-19 16:50:23,601:INFO:Declaring custom model
2024-05-19 16:50:23,601:INFO:Logistic Regression Imported successfully
2024-05-19 16:50:23,603:INFO:Cross validation set to False
2024-05-19 16:50:23,603:INFO:Fitting Model
2024-05-19 16:50:24,059:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=888, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-19 16:50:24,059:INFO:create_model() successfully completed......................................
2024-05-19 16:50:24,267:INFO:Creating Dashboard logs
2024-05-19 16:50:24,274:INFO:Model: Logistic Regression
2024-05-19 16:50:24,344:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 888, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-05-19 16:50:24,496:INFO:Initializing predict_model()
2024-05-19 16:50:24,496:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E86B8D710>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=888, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018E94C20EA0>)
2024-05-19 16:50:24,496:INFO:Checking exceptions
2024-05-19 16:50:24,496:INFO:Preloading libraries
2024-05-19 16:50:24,773:WARNING:Setuptools is replacing distutils.

2024-05-19 16:50:25,046:INFO:Creating Dashboard logs
2024-05-19 16:50:25,051:INFO:Model: Random Forest Classifier
2024-05-19 16:50:25,111:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 888, 'verbose': 0, 'warm_start': False}
2024-05-19 16:50:25,562:INFO:Creating Dashboard logs
2024-05-19 16:50:25,566:INFO:Model: Decision Tree Classifier
2024-05-19 16:50:25,633:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 888, 'splitter': 'best'}
2024-05-19 16:50:26,149:INFO:_master_model_container: 3
2024-05-19 16:50:26,150:INFO:_display_container: 2
2024-05-19 16:50:26,150:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=888, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-19 16:50:26,150:INFO:compare_models() successfully completed......................................
2024-05-19 16:54:27,873:INFO:Initializing create_model()
2024-05-19 16:54:27,873:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E86B8D710>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={'penalty': 'l1', 'solver': 'liblinear'})
2024-05-19 16:54:27,873:INFO:Checking exceptions
2024-05-19 16:54:27,892:INFO:Importing libraries
2024-05-19 16:54:27,894:INFO:Copying training dataset
2024-05-19 16:54:27,900:INFO:Defining folds
2024-05-19 16:54:27,900:INFO:Declaring metric variables
2024-05-19 16:54:27,906:INFO:Importing untrained model
2024-05-19 16:54:27,910:INFO:Logistic Regression Imported successfully
2024-05-19 16:54:27,920:INFO:Starting cross validation
2024-05-19 16:54:27,922:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:54:29,197:INFO:Calculating mean and std
2024-05-19 16:54:29,198:INFO:Creating metrics dataframe
2024-05-19 16:54:29,202:INFO:Finalizing model
2024-05-19 16:54:29,322:INFO:Creating Dashboard logs
2024-05-19 16:54:29,324:INFO:Model: Logistic Regression
2024-05-19 16:54:29,381:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l1', 'random_state': 888, 'solver': 'liblinear', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-05-19 16:54:29,523:INFO:Initializing predict_model()
2024-05-19 16:54:29,523:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E86B8D710>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018E938F7880>)
2024-05-19 16:54:29,523:INFO:Checking exceptions
2024-05-19 16:54:29,523:INFO:Preloading libraries
2024-05-19 16:54:30,059:INFO:Uploading results into container
2024-05-19 16:54:30,060:INFO:Uploading model into container now
2024-05-19 16:54:30,072:INFO:_master_model_container: 4
2024-05-19 16:54:30,073:INFO:_display_container: 3
2024-05-19 16:54:30,073:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-19 16:54:30,074:INFO:create_model() successfully completed......................................
2024-05-19 16:54:30,302:INFO:Initializing tune_model()
2024-05-19 16:54:30,302:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E86B8D710>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False), fold=10, round=4, n_iter=10, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-19 16:54:30,302:INFO:Checking exceptions
2024-05-19 16:54:30,324:INFO:Copying training dataset
2024-05-19 16:54:30,328:INFO:Checking base model
2024-05-19 16:54:30,328:INFO:Base model : Logistic Regression
2024-05-19 16:54:30,334:INFO:Declaring metric variables
2024-05-19 16:54:30,338:INFO:Defining Hyperparameters
2024-05-19 16:54:30,691:INFO:Tuning with n_jobs=-1
2024-05-19 16:54:30,691:INFO:Initializing RandomizedSearchCV
2024-05-19 16:54:41,907:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 0.974}
2024-05-19 16:54:41,908:INFO:Hyperparameter search completed
2024-05-19 16:54:41,908:INFO:SubProcess create_model() called ==================================
2024-05-19 16:54:41,908:INFO:Initializing create_model()
2024-05-19 16:54:41,909:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E86B8D710>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018ED9F2B0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'class_weight': 'balanced', 'C': 0.974})
2024-05-19 16:54:41,909:INFO:Checking exceptions
2024-05-19 16:54:41,909:INFO:Importing libraries
2024-05-19 16:54:41,909:INFO:Copying training dataset
2024-05-19 16:54:41,914:INFO:Defining folds
2024-05-19 16:54:41,914:INFO:Declaring metric variables
2024-05-19 16:54:41,917:INFO:Importing untrained model
2024-05-19 16:54:41,917:INFO:Declaring custom model
2024-05-19 16:54:41,923:INFO:Logistic Regression Imported successfully
2024-05-19 16:54:41,930:INFO:Starting cross validation
2024-05-19 16:54:41,930:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:54:44,553:INFO:Calculating mean and std
2024-05-19 16:54:44,554:INFO:Creating metrics dataframe
2024-05-19 16:54:44,559:INFO:Finalizing model
2024-05-19 16:54:44,807:INFO:Uploading results into container
2024-05-19 16:54:44,808:INFO:Uploading model into container now
2024-05-19 16:54:44,808:INFO:_master_model_container: 5
2024-05-19 16:54:44,808:INFO:_display_container: 4
2024-05-19 16:54:44,810:INFO:LogisticRegression(C=0.974, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-19 16:54:44,810:INFO:create_model() successfully completed......................................
2024-05-19 16:54:45,013:INFO:SubProcess create_model() end ==================================
2024-05-19 16:54:45,013:INFO:choose_better activated
2024-05-19 16:54:45,020:INFO:SubProcess create_model() called ==================================
2024-05-19 16:54:45,021:INFO:Initializing create_model()
2024-05-19 16:54:45,021:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E86B8D710>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 16:54:45,021:INFO:Checking exceptions
2024-05-19 16:54:45,023:INFO:Importing libraries
2024-05-19 16:54:45,023:INFO:Copying training dataset
2024-05-19 16:54:45,029:INFO:Defining folds
2024-05-19 16:54:45,029:INFO:Declaring metric variables
2024-05-19 16:54:45,030:INFO:Importing untrained model
2024-05-19 16:54:45,030:INFO:Declaring custom model
2024-05-19 16:54:45,031:INFO:Logistic Regression Imported successfully
2024-05-19 16:54:45,031:INFO:Starting cross validation
2024-05-19 16:54:45,032:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:54:46,283:INFO:Calculating mean and std
2024-05-19 16:54:46,283:INFO:Creating metrics dataframe
2024-05-19 16:54:46,285:INFO:Finalizing model
2024-05-19 16:54:46,405:INFO:Uploading results into container
2024-05-19 16:54:46,406:INFO:Uploading model into container now
2024-05-19 16:54:46,407:INFO:_master_model_container: 6
2024-05-19 16:54:46,407:INFO:_display_container: 5
2024-05-19 16:54:46,407:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-19 16:54:46,407:INFO:create_model() successfully completed......................................
2024-05-19 16:54:46,615:INFO:SubProcess create_model() end ==================================
2024-05-19 16:54:46,616:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False) result for AUC is 0.9267
2024-05-19 16:54:46,617:INFO:LogisticRegression(C=0.974, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False) result for AUC is 0.9298
2024-05-19 16:54:46,617:INFO:LogisticRegression(C=0.974, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2024-05-19 16:54:46,617:INFO:choose_better completed
2024-05-19 16:54:46,618:INFO:Creating Dashboard logs
2024-05-19 16:54:46,624:INFO:Model: Logistic Regression
2024-05-19 16:54:46,692:INFO:Logged params: {'C': 0.974, 'class_weight': 'balanced', 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l1', 'random_state': 888, 'solver': 'liblinear', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-05-19 16:54:46,864:INFO:Initializing predict_model()
2024-05-19 16:54:46,864:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E86B8D710>, estimator=LogisticRegression(C=0.974, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018E910C4540>)
2024-05-19 16:54:46,865:INFO:Checking exceptions
2024-05-19 16:54:46,865:INFO:Preloading libraries
2024-05-19 16:54:47,480:INFO:_master_model_container: 6
2024-05-19 16:54:47,480:INFO:_display_container: 4
2024-05-19 16:54:47,481:INFO:LogisticRegression(C=0.974, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-19 16:54:47,481:INFO:tune_model() successfully completed......................................
2024-05-19 16:54:47,704:INFO:Initializing create_model()
2024-05-19 16:54:47,705:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E86B8D710>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 16:54:47,705:INFO:Checking exceptions
2024-05-19 16:54:47,721:INFO:Importing libraries
2024-05-19 16:54:47,721:INFO:Copying training dataset
2024-05-19 16:54:47,728:INFO:Defining folds
2024-05-19 16:54:47,728:INFO:Declaring metric variables
2024-05-19 16:54:47,733:INFO:Importing untrained model
2024-05-19 16:54:47,740:INFO:Decision Tree Classifier Imported successfully
2024-05-19 16:54:47,755:INFO:Starting cross validation
2024-05-19 16:54:47,756:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:54:48,566:INFO:Calculating mean and std
2024-05-19 16:54:48,566:INFO:Creating metrics dataframe
2024-05-19 16:54:48,573:INFO:Finalizing model
2024-05-19 16:54:48,608:INFO:Creating Dashboard logs
2024-05-19 16:54:48,611:INFO:Model: Decision Tree Classifier
2024-05-19 16:54:48,675:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 888, 'splitter': 'best'}
2024-05-19 16:54:48,840:INFO:Initializing predict_model()
2024-05-19 16:54:48,840:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E86B8D710>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018E9D840180>)
2024-05-19 16:54:48,840:INFO:Checking exceptions
2024-05-19 16:54:48,840:INFO:Preloading libraries
2024-05-19 16:54:49,601:INFO:Uploading results into container
2024-05-19 16:54:49,603:INFO:Uploading model into container now
2024-05-19 16:54:49,617:INFO:_master_model_container: 7
2024-05-19 16:54:49,617:INFO:_display_container: 5
2024-05-19 16:54:49,617:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best')
2024-05-19 16:54:49,618:INFO:create_model() successfully completed......................................
2024-05-19 16:54:49,860:INFO:Initializing tune_model()
2024-05-19 16:54:49,860:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E86B8D710>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best'), fold=10, round=4, n_iter=10, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-19 16:54:49,860:INFO:Checking exceptions
2024-05-19 16:54:49,881:INFO:Copying training dataset
2024-05-19 16:54:49,887:INFO:Checking base model
2024-05-19 16:54:49,887:INFO:Base model : Decision Tree Classifier
2024-05-19 16:54:49,893:INFO:Declaring metric variables
2024-05-19 16:54:49,900:INFO:Defining Hyperparameters
2024-05-19 16:54:50,158:INFO:Tuning with n_jobs=-1
2024-05-19 16:54:50,158:INFO:Initializing RandomizedSearchCV
2024-05-19 16:54:50,950:INFO:best_params: {'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.005, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 14, 'actual_estimator__criterion': 'gini'}
2024-05-19 16:54:50,951:INFO:Hyperparameter search completed
2024-05-19 16:54:50,951:INFO:SubProcess create_model() called ==================================
2024-05-19 16:54:50,952:INFO:Initializing create_model()
2024-05-19 16:54:50,953:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E86B8D710>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018ED9F2B0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 10, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.005, 'max_features': 1.0, 'max_depth': 14, 'criterion': 'gini'})
2024-05-19 16:54:50,953:INFO:Checking exceptions
2024-05-19 16:54:50,953:INFO:Importing libraries
2024-05-19 16:54:50,953:INFO:Copying training dataset
2024-05-19 16:54:50,960:INFO:Defining folds
2024-05-19 16:54:50,960:INFO:Declaring metric variables
2024-05-19 16:54:50,965:INFO:Importing untrained model
2024-05-19 16:54:50,966:INFO:Declaring custom model
2024-05-19 16:54:50,971:INFO:Decision Tree Classifier Imported successfully
2024-05-19 16:54:50,981:INFO:Starting cross validation
2024-05-19 16:54:50,982:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:54:51,282:INFO:Calculating mean and std
2024-05-19 16:54:51,283:INFO:Creating metrics dataframe
2024-05-19 16:54:51,290:INFO:Finalizing model
2024-05-19 16:54:51,310:INFO:Uploading results into container
2024-05-19 16:54:51,311:INFO:Uploading model into container now
2024-05-19 16:54:51,312:INFO:_master_model_container: 8
2024-05-19 16:54:51,312:INFO:_display_container: 6
2024-05-19 16:54:51,312:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=14, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.005, min_samples_leaf=2,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best')
2024-05-19 16:54:51,312:INFO:create_model() successfully completed......................................
2024-05-19 16:54:51,530:INFO:SubProcess create_model() end ==================================
2024-05-19 16:54:51,530:INFO:choose_better activated
2024-05-19 16:54:51,536:INFO:SubProcess create_model() called ==================================
2024-05-19 16:54:51,538:INFO:Initializing create_model()
2024-05-19 16:54:51,538:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E86B8D710>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 16:54:51,538:INFO:Checking exceptions
2024-05-19 16:54:51,541:INFO:Importing libraries
2024-05-19 16:54:51,541:INFO:Copying training dataset
2024-05-19 16:54:51,547:INFO:Defining folds
2024-05-19 16:54:51,547:INFO:Declaring metric variables
2024-05-19 16:54:51,547:INFO:Importing untrained model
2024-05-19 16:54:51,547:INFO:Declaring custom model
2024-05-19 16:54:51,548:INFO:Decision Tree Classifier Imported successfully
2024-05-19 16:54:51,548:INFO:Starting cross validation
2024-05-19 16:54:51,549:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:54:51,988:INFO:Calculating mean and std
2024-05-19 16:54:51,988:INFO:Creating metrics dataframe
2024-05-19 16:54:51,990:INFO:Finalizing model
2024-05-19 16:54:52,015:INFO:Uploading results into container
2024-05-19 16:54:52,016:INFO:Uploading model into container now
2024-05-19 16:54:52,016:INFO:_master_model_container: 9
2024-05-19 16:54:52,016:INFO:_display_container: 7
2024-05-19 16:54:52,017:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best')
2024-05-19 16:54:52,017:INFO:create_model() successfully completed......................................
2024-05-19 16:54:52,229:INFO:SubProcess create_model() end ==================================
2024-05-19 16:54:52,230:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best') result for AUC is 0.7154
2024-05-19 16:54:52,231:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=14, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.005, min_samples_leaf=2,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best') result for AUC is 0.8343
2024-05-19 16:54:52,232:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=14, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.005, min_samples_leaf=2,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best') is best model
2024-05-19 16:54:52,232:INFO:choose_better completed
2024-05-19 16:54:52,232:INFO:Creating Dashboard logs
2024-05-19 16:54:52,239:INFO:Model: Decision Tree Classifier
2024-05-19 16:54:52,301:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': 14, 'max_features': 1.0, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.005, 'min_samples_leaf': 2, 'min_samples_split': 10, 'min_weight_fraction_leaf': 0.0, 'random_state': 888, 'splitter': 'best'}
2024-05-19 16:54:52,448:INFO:Initializing predict_model()
2024-05-19 16:54:52,448:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E86B8D710>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=14, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.005, min_samples_leaf=2,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018E9D8EB100>)
2024-05-19 16:54:52,448:INFO:Checking exceptions
2024-05-19 16:54:52,448:INFO:Preloading libraries
2024-05-19 16:54:53,048:INFO:_master_model_container: 9
2024-05-19 16:54:53,048:INFO:_display_container: 6
2024-05-19 16:54:53,049:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=14, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.005, min_samples_leaf=2,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best')
2024-05-19 16:54:53,049:INFO:tune_model() successfully completed......................................
2024-05-19 16:54:53,296:INFO:Initializing create_model()
2024-05-19 16:54:53,296:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E86B8D710>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 16:54:53,296:INFO:Checking exceptions
2024-05-19 16:54:53,313:INFO:Importing libraries
2024-05-19 16:54:53,313:INFO:Copying training dataset
2024-05-19 16:54:53,328:INFO:Defining folds
2024-05-19 16:54:53,329:INFO:Declaring metric variables
2024-05-19 16:54:53,342:INFO:Importing untrained model
2024-05-19 16:54:53,350:INFO:Random Forest Classifier Imported successfully
2024-05-19 16:54:53,366:INFO:Starting cross validation
2024-05-19 16:54:53,367:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:54:56,532:INFO:Calculating mean and std
2024-05-19 16:54:56,533:INFO:Creating metrics dataframe
2024-05-19 16:54:56,538:INFO:Finalizing model
2024-05-19 16:54:56,752:INFO:Creating Dashboard logs
2024-05-19 16:54:56,756:INFO:Model: Random Forest Classifier
2024-05-19 16:54:56,807:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 888, 'verbose': 0, 'warm_start': False}
2024-05-19 16:54:57,007:INFO:Initializing predict_model()
2024-05-19 16:54:57,007:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E86B8D710>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018E94BF8900>)
2024-05-19 16:54:57,008:INFO:Checking exceptions
2024-05-19 16:54:57,008:INFO:Preloading libraries
2024-05-19 16:54:57,686:INFO:Uploading results into container
2024-05-19 16:54:57,687:INFO:Uploading model into container now
2024-05-19 16:54:57,704:INFO:_master_model_container: 10
2024-05-19 16:54:57,705:INFO:_display_container: 7
2024-05-19 16:54:57,705:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False)
2024-05-19 16:54:57,705:INFO:create_model() successfully completed......................................
2024-05-19 16:54:57,961:INFO:Initializing tune_model()
2024-05-19 16:54:57,961:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E86B8D710>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False), fold=10, round=4, n_iter=10, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-19 16:54:57,962:INFO:Checking exceptions
2024-05-19 16:54:57,983:INFO:Copying training dataset
2024-05-19 16:54:57,991:INFO:Checking base model
2024-05-19 16:54:57,992:INFO:Base model : Random Forest Classifier
2024-05-19 16:54:57,996:INFO:Declaring metric variables
2024-05-19 16:54:58,000:INFO:Defining Hyperparameters
2024-05-19 16:54:58,271:INFO:Tuning with n_jobs=-1
2024-05-19 16:54:58,272:INFO:Initializing RandomizedSearchCV
2024-05-19 16:55:22,441:INFO:best_params: {'actual_estimator__n_estimators': 160, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.005, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 7, 'actual_estimator__criterion': 'entropy', 'actual_estimator__class_weight': 'balanced', 'actual_estimator__bootstrap': True}
2024-05-19 16:55:22,442:INFO:Hyperparameter search completed
2024-05-19 16:55:22,442:INFO:SubProcess create_model() called ==================================
2024-05-19 16:55:22,443:INFO:Initializing create_model()
2024-05-19 16:55:22,443:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E86B8D710>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E938D7690>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 160, 'min_samples_split': 5, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.005, 'max_features': 'log2', 'max_depth': 7, 'criterion': 'entropy', 'class_weight': 'balanced', 'bootstrap': True})
2024-05-19 16:55:22,443:INFO:Checking exceptions
2024-05-19 16:55:22,443:INFO:Importing libraries
2024-05-19 16:55:22,443:INFO:Copying training dataset
2024-05-19 16:55:22,447:INFO:Defining folds
2024-05-19 16:55:22,447:INFO:Declaring metric variables
2024-05-19 16:55:22,449:INFO:Importing untrained model
2024-05-19 16:55:22,450:INFO:Declaring custom model
2024-05-19 16:55:22,455:INFO:Random Forest Classifier Imported successfully
2024-05-19 16:55:22,463:INFO:Starting cross validation
2024-05-19 16:55:22,463:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:55:26,714:INFO:Calculating mean and std
2024-05-19 16:55:26,715:INFO:Creating metrics dataframe
2024-05-19 16:55:26,721:INFO:Finalizing model
2024-05-19 16:55:27,051:INFO:Uploading results into container
2024-05-19 16:55:27,052:INFO:Uploading model into container now
2024-05-19 16:55:27,053:INFO:_master_model_container: 11
2024-05-19 16:55:27,053:INFO:_display_container: 8
2024-05-19 16:55:27,054:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=7, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.005, min_samples_leaf=5,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       n_estimators=160, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False)
2024-05-19 16:55:27,054:INFO:create_model() successfully completed......................................
2024-05-19 16:55:27,268:INFO:SubProcess create_model() end ==================================
2024-05-19 16:55:27,268:INFO:choose_better activated
2024-05-19 16:55:27,274:INFO:SubProcess create_model() called ==================================
2024-05-19 16:55:27,274:INFO:Initializing create_model()
2024-05-19 16:55:27,275:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E86B8D710>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 16:55:27,275:INFO:Checking exceptions
2024-05-19 16:55:27,276:INFO:Importing libraries
2024-05-19 16:55:27,278:INFO:Copying training dataset
2024-05-19 16:55:27,282:INFO:Defining folds
2024-05-19 16:55:27,282:INFO:Declaring metric variables
2024-05-19 16:55:27,283:INFO:Importing untrained model
2024-05-19 16:55:27,283:INFO:Declaring custom model
2024-05-19 16:55:27,283:INFO:Random Forest Classifier Imported successfully
2024-05-19 16:55:27,284:INFO:Starting cross validation
2024-05-19 16:55:27,285:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:55:29,937:INFO:Calculating mean and std
2024-05-19 16:55:29,938:INFO:Creating metrics dataframe
2024-05-19 16:55:29,939:INFO:Finalizing model
2024-05-19 16:55:30,155:INFO:Uploading results into container
2024-05-19 16:55:30,155:INFO:Uploading model into container now
2024-05-19 16:55:30,156:INFO:_master_model_container: 12
2024-05-19 16:55:30,156:INFO:_display_container: 9
2024-05-19 16:55:30,156:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False)
2024-05-19 16:55:30,156:INFO:create_model() successfully completed......................................
2024-05-19 16:55:30,368:INFO:SubProcess create_model() end ==================================
2024-05-19 16:55:30,369:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False) result for AUC is 0.9068
2024-05-19 16:55:30,370:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=7, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.005, min_samples_leaf=5,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       n_estimators=160, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False) result for AUC is 0.9281
2024-05-19 16:55:30,371:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=7, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.005, min_samples_leaf=5,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       n_estimators=160, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False) is best model
2024-05-19 16:55:30,371:INFO:choose_better completed
2024-05-19 16:55:30,371:INFO:Creating Dashboard logs
2024-05-19 16:55:30,375:INFO:Model: Random Forest Classifier
2024-05-19 16:55:30,441:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': 'balanced', 'criterion': 'entropy', 'max_depth': 7, 'max_features': 'log2', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.005, 'min_samples_leaf': 5, 'min_samples_split': 5, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 160, 'n_jobs': -1, 'oob_score': False, 'random_state': 888, 'verbose': 0, 'warm_start': False}
2024-05-19 16:55:30,599:INFO:Initializing predict_model()
2024-05-19 16:55:30,599:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E86B8D710>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=7, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.005, min_samples_leaf=5,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       n_estimators=160, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018E94C20EA0>)
2024-05-19 16:55:30,599:INFO:Checking exceptions
2024-05-19 16:55:30,599:INFO:Preloading libraries
2024-05-19 16:55:31,267:INFO:_master_model_container: 12
2024-05-19 16:55:31,267:INFO:_display_container: 8
2024-05-19 16:55:31,267:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=7, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.005, min_samples_leaf=5,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       n_estimators=160, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False)
2024-05-19 16:55:31,268:INFO:tune_model() successfully completed......................................
2024-05-19 16:57:19,594:INFO:PyCaret ClassificationExperiment
2024-05-19 16:57:19,594:INFO:Logging name: diabetes
2024-05-19 16:57:19,594:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-19 16:57:19,594:INFO:version 3.2.0
2024-05-19 16:57:19,594:INFO:Initializing setup()
2024-05-19 16:57:19,594:INFO:self.USI: 1d27
2024-05-19 16:57:19,595:INFO:self._variable_keys: {'logging_param', 'fold_groups_param', '_ml_usecase', 'log_plots_param', 'y', 'X_test', 'gpu_param', '_available_plots', 'fold_generator', 'exp_id', 'n_jobs_param', 'target_param', 'fix_imbalance', 'y_test', 'pipeline', 'gpu_n_jobs_param', 'X', 'memory', 'data', 'html_param', 'USI', 'fold_shuffle_param', 'idx', 'is_multiclass', 'X_train', 'y_train', 'seed', 'exp_name_log'}
2024-05-19 16:57:19,595:INFO:Checking environment
2024-05-19 16:57:19,595:INFO:python_version: 3.11.5
2024-05-19 16:57:19,595:INFO:python_build: ('tags/v3.11.5:cce6ba9', 'Aug 24 2023 14:38:34')
2024-05-19 16:57:19,595:INFO:machine: AMD64
2024-05-19 16:57:19,595:INFO:platform: Windows-10-10.0.22631-SP0
2024-05-19 16:57:19,603:INFO:Memory: svmem(total=16968298496, available=1095426048, percent=93.5, used=15872872448, free=1095426048)
2024-05-19 16:57:19,603:INFO:Physical Core: 4
2024-05-19 16:57:19,603:INFO:Logical Core: 8
2024-05-19 16:57:19,603:INFO:Checking libraries
2024-05-19 16:57:19,603:INFO:System:
2024-05-19 16:57:19,603:INFO:    python: 3.11.5 (tags/v3.11.5:cce6ba9, Aug 24 2023, 14:38:34) [MSC v.1936 64 bit (AMD64)]
2024-05-19 16:57:19,603:INFO:executable: c:\Users\anson\AppData\Local\Programs\Python\Python311\python.exe
2024-05-19 16:57:19,603:INFO:   machine: Windows-10-10.0.22631-SP0
2024-05-19 16:57:19,603:INFO:PyCaret required dependencies:
2024-05-19 16:57:19,603:INFO:                 pip: 23.3.2
2024-05-19 16:57:19,603:INFO:          setuptools: 69.0.3
2024-05-19 16:57:19,603:INFO:             pycaret: 3.2.0
2024-05-19 16:57:19,603:INFO:             IPython: 8.12.3
2024-05-19 16:57:19,603:INFO:          ipywidgets: 7.8.1
2024-05-19 16:57:19,603:INFO:                tqdm: 4.66.1
2024-05-19 16:57:19,603:INFO:               numpy: 1.24.2
2024-05-19 16:57:19,603:INFO:              pandas: 1.5.2
2024-05-19 16:57:19,603:INFO:              jinja2: 3.1.3
2024-05-19 16:57:19,603:INFO:               scipy: 1.10.1
2024-05-19 16:57:19,603:INFO:              joblib: 1.2.0
2024-05-19 16:57:19,603:INFO:             sklearn: 1.2.2
2024-05-19 16:57:19,604:INFO:                pyod: 1.1.2
2024-05-19 16:57:19,604:INFO:            imblearn: 0.12.0
2024-05-19 16:57:19,604:INFO:   category_encoders: 2.6.3
2024-05-19 16:57:19,604:INFO:            lightgbm: 4.3.0
2024-05-19 16:57:19,604:INFO:               numba: 0.58.1
2024-05-19 16:57:19,604:INFO:            requests: 2.31.0
2024-05-19 16:57:19,604:INFO:          matplotlib: 3.6.0
2024-05-19 16:57:19,604:INFO:          scikitplot: 0.3.7
2024-05-19 16:57:19,604:INFO:         yellowbrick: 1.5
2024-05-19 16:57:19,604:INFO:              plotly: 5.18.0
2024-05-19 16:57:19,604:INFO:    plotly-resampler: Not installed
2024-05-19 16:57:19,604:INFO:             kaleido: 0.2.1
2024-05-19 16:57:19,604:INFO:           schemdraw: 0.15
2024-05-19 16:57:19,604:INFO:         statsmodels: 0.14.0
2024-05-19 16:57:19,604:INFO:              sktime: 0.21.1
2024-05-19 16:57:19,604:INFO:               tbats: 1.1.3
2024-05-19 16:57:19,604:INFO:            pmdarima: 2.0.4
2024-05-19 16:57:19,605:INFO:              psutil: 5.9.5
2024-05-19 16:57:19,605:INFO:          markupsafe: 2.1.2
2024-05-19 16:57:19,605:INFO:             pickle5: Not installed
2024-05-19 16:57:19,605:INFO:         cloudpickle: 2.2.1
2024-05-19 16:57:19,605:INFO:         deprecation: 2.1.0
2024-05-19 16:57:19,605:INFO:              xxhash: 3.4.1
2024-05-19 16:57:19,605:INFO:           wurlitzer: Not installed
2024-05-19 16:57:19,605:INFO:PyCaret optional dependencies:
2024-05-19 16:57:19,605:INFO:                shap: 0.44.1
2024-05-19 16:57:19,605:INFO:           interpret: 0.5.0
2024-05-19 16:57:19,605:INFO:                umap: 0.5.5
2024-05-19 16:57:19,605:INFO:     ydata_profiling: 4.6.0
2024-05-19 16:57:19,605:INFO:  explainerdashboard: 0.4.5
2024-05-19 16:57:19,605:INFO:             autoviz: Not installed
2024-05-19 16:57:19,605:INFO:           fairlearn: 0.7.0
2024-05-19 16:57:19,605:INFO:          deepchecks: Not installed
2024-05-19 16:57:19,605:INFO:             xgboost: 2.0.3
2024-05-19 16:57:19,605:INFO:            catboost: 1.2.2
2024-05-19 16:57:19,605:INFO:              kmodes: 0.12.2
2024-05-19 16:57:19,605:INFO:             mlxtend: 0.23.1
2024-05-19 16:57:19,605:INFO:       statsforecast: 1.5.0
2024-05-19 16:57:19,605:INFO:        tune_sklearn: Not installed
2024-05-19 16:57:19,605:INFO:                 ray: Not installed
2024-05-19 16:57:19,605:INFO:            hyperopt: 0.2.7
2024-05-19 16:57:19,605:INFO:              optuna: 3.5.0
2024-05-19 16:57:19,605:INFO:               skopt: 0.9.0
2024-05-19 16:57:19,605:INFO:              mlflow: 2.10.0
2024-05-19 16:57:19,605:INFO:              gradio: 3.50.2
2024-05-19 16:57:19,605:INFO:             fastapi: 0.109.0
2024-05-19 16:57:19,605:INFO:             uvicorn: 0.27.0
2024-05-19 16:57:19,605:INFO:              m2cgen: 0.10.0
2024-05-19 16:57:19,606:INFO:           evidently: 0.4.17
2024-05-19 16:57:19,606:INFO:               fugue: 0.8.6
2024-05-19 16:57:19,606:INFO:           streamlit: 1.30.0
2024-05-19 16:57:19,606:INFO:             prophet: Not installed
2024-05-19 16:57:19,606:INFO:None
2024-05-19 16:57:19,606:INFO:Set up GPU usage.
2024-05-19 16:57:19,606:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:19,606:WARNING:cuML is outdated or not found. Required version is >=23.08.
                Please visit https://rapids.ai/install for installation instructions.
2024-05-19 16:57:19,606:INFO:Set up data.
2024-05-19 16:57:19,615:INFO:Set up folding strategy.
2024-05-19 16:57:19,615:INFO:Set up train/test split.
2024-05-19 16:57:19,620:INFO:Set up index.
2024-05-19 16:57:19,620:INFO:Assigning column types.
2024-05-19 16:57:19,625:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-19 16:57:19,625:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:19,667:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 16:57:19,668:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:19,668:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:19,668:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-19 16:57:19,668:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:19,691:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:19,695:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:19,696:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 16:57:19,715:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 16:57:19,716:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:19,791:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-19 16:57:19,791:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:19,791:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:19,792:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-19 16:57:19,792:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:19,827:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:19,832:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:19,832:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 16:57:19,848:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 16:57:19,849:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-19 16:57:19,849:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:19,925:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:19,925:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:19,926:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-19 16:57:19,927:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:19,962:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:19,968:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:19,970:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 16:57:19,994:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 16:57:19,995:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:20,084:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:20,085:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:20,086:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-19 16:57:20,086:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:20,108:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:20,112:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:20,113:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 16:57:20,129:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 16:57:20,130:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-19 16:57:20,131:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:20,205:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:20,205:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:20,206:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:20,239:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:20,243:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:20,244:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 16:57:20,262:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 16:57:20,263:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:20,341:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:20,341:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:20,342:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:20,379:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:20,382:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:20,383:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 16:57:20,398:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 16:57:20,400:INFO:Preparing preprocessing pipeline...
2024-05-19 16:57:20,401:INFO:Set up simple imputation.
2024-05-19 16:57:20,402:INFO:Set up column name cleaning.
2024-05-19 16:57:20,430:INFO:Finished creating preprocessing pipeline.
2024-05-19 16:57:20,436:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\anson\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'tx', 'dx', 'bmi',
                                             'leg', 'armc', 'waist', 'sub',
                                             'albumin', 'sex_male',
                                             're_Non-Hispanic Black',
                                             're_Non-Hispanic White',
                                             're_Other Hispanic',
                                             're_Other Race Including '
                                             'Multi-Racial'],
                                    transformer=SimpleIm...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-05-19 16:57:20,436:INFO:Creating final display dataframe.
2024-05-19 16:57:20,533:INFO:Setup _display_container:                     Description            Value
0                    Session id              888
1                        Target           Target
2                   Target type           Binary
3           Original data shape       (4756, 16)
4        Transformed data shape       (4756, 16)
5   Transformed train set shape       (3329, 16)
6    Transformed test set shape       (1427, 16)
7              Numeric features               15
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU             True
16               Log Experiment     MlflowLogger
17              Experiment Name         diabetes
18                          USI             1d27
2024-05-19 16:57:20,533:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:20,578:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:20,578:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:20,579:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:20,600:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:20,606:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:20,608:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 16:57:20,629:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 16:57:20,630:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:20,718:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:20,718:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:20,719:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:20,751:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:20,757:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-19 16:57:20,758:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-19 16:57:20,774:INFO:Soft dependency imported: catboost: 1.2.2
2024-05-19 16:57:20,776:INFO:Logging experiment in loggers
2024-05-19 16:57:20,918:INFO:SubProcess save_model() called ==================================
2024-05-19 16:57:20,935:INFO:Initializing save_model()
2024-05-19 16:57:20,935:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\anson\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'tx', 'dx', 'bmi',
                                             'leg', 'armc', 'waist', 'sub',
                                             'albumin', 'sex_male',
                                             're_Non-Hispanic Black',
                                             're_Non-Hispanic White',
                                             're_Other Hispanic',
                                             're_Other Race Including '
                                             'Multi-Racial'],
                                    transformer=SimpleIm...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=C:\Users\anson\AppData\Local\Temp\tmp876ynqr9\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\anson\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'tx', 'dx', 'bmi',
                                             'leg', 'armc', 'waist', 'sub',
                                             'albumin', 'sex_male',
                                             're_Non-Hispanic Black',
                                             're_Non-Hispanic White',
                                             're_Other Hispanic',
                                             're_Other Race Including '
                                             'Multi-Racial'],
                                    transformer=SimpleIm...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-05-19 16:57:20,935:INFO:Adding model into prep_pipe
2024-05-19 16:57:20,935:WARNING:Only Model saved as it was a pipeline.
2024-05-19 16:57:20,939:INFO:C:\Users\anson\AppData\Local\Temp\tmp876ynqr9\Transformation Pipeline.pkl saved in current working directory
2024-05-19 16:57:20,945:INFO:Pipeline(memory=FastMemory(location=C:\Users\anson\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'income', 'tx', 'dx', 'bmi',
                                             'leg', 'armc', 'waist', 'sub',
                                             'albumin', 'sex_male',
                                             're_Non-Hispanic Black',
                                             're_Non-Hispanic White',
                                             're_Other Hispanic',
                                             're_Other Race Including '
                                             'Multi-Racial'],
                                    transformer=SimpleIm...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-05-19 16:57:20,945:INFO:save_model() successfully completed......................................
2024-05-19 16:57:21,247:INFO:SubProcess save_model() end ==================================
2024-05-19 16:57:21,310:INFO:setup() successfully completed in 1.19s...............
2024-05-19 16:57:23,559:INFO:Initializing compare_models()
2024-05-19 16:57:23,559:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E90B76B90>, include=['lr', 'dt', 'rf'], exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000018E90B76B90>, 'include': ['lr', 'dt', 'rf'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-05-19 16:57:23,561:INFO:Checking exceptions
2024-05-19 16:57:23,564:INFO:Preparing display monitor
2024-05-19 16:57:23,592:INFO:Initializing Logistic Regression
2024-05-19 16:57:23,593:INFO:Total runtime is 1.678466796875e-05 minutes
2024-05-19 16:57:23,597:INFO:SubProcess create_model() called ==================================
2024-05-19 16:57:23,597:INFO:Initializing create_model()
2024-05-19 16:57:23,597:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E90B76B90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018ED8D707D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 16:57:23,597:INFO:Checking exceptions
2024-05-19 16:57:23,597:INFO:Importing libraries
2024-05-19 16:57:23,598:INFO:Copying training dataset
2024-05-19 16:57:23,604:INFO:Defining folds
2024-05-19 16:57:23,604:INFO:Declaring metric variables
2024-05-19 16:57:23,609:INFO:Importing untrained model
2024-05-19 16:57:23,614:INFO:Logistic Regression Imported successfully
2024-05-19 16:57:23,626:INFO:Starting cross validation
2024-05-19 16:57:23,627:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:57:27,594:INFO:Calculating mean and std
2024-05-19 16:57:27,595:INFO:Creating metrics dataframe
2024-05-19 16:57:27,598:INFO:Uploading results into container
2024-05-19 16:57:27,598:INFO:Uploading model into container now
2024-05-19 16:57:27,599:INFO:_master_model_container: 1
2024-05-19 16:57:27,599:INFO:_display_container: 2
2024-05-19 16:57:27,599:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=888, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-19 16:57:27,599:INFO:create_model() successfully completed......................................
2024-05-19 16:57:27,831:INFO:SubProcess create_model() end ==================================
2024-05-19 16:57:27,832:INFO:Creating metrics dataframe
2024-05-19 16:57:27,843:INFO:Initializing Decision Tree Classifier
2024-05-19 16:57:27,843:INFO:Total runtime is 0.07084904114405315 minutes
2024-05-19 16:57:27,847:INFO:SubProcess create_model() called ==================================
2024-05-19 16:57:27,847:INFO:Initializing create_model()
2024-05-19 16:57:27,848:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E90B76B90>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018ED8D707D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 16:57:27,848:INFO:Checking exceptions
2024-05-19 16:57:27,848:INFO:Importing libraries
2024-05-19 16:57:27,848:INFO:Copying training dataset
2024-05-19 16:57:27,853:INFO:Defining folds
2024-05-19 16:57:27,853:INFO:Declaring metric variables
2024-05-19 16:57:27,859:INFO:Importing untrained model
2024-05-19 16:57:27,863:INFO:Decision Tree Classifier Imported successfully
2024-05-19 16:57:27,870:INFO:Starting cross validation
2024-05-19 16:57:27,871:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:57:28,362:INFO:Calculating mean and std
2024-05-19 16:57:28,363:INFO:Creating metrics dataframe
2024-05-19 16:57:28,366:INFO:Uploading results into container
2024-05-19 16:57:28,367:INFO:Uploading model into container now
2024-05-19 16:57:28,368:INFO:_master_model_container: 2
2024-05-19 16:57:28,368:INFO:_display_container: 2
2024-05-19 16:57:28,368:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best')
2024-05-19 16:57:28,369:INFO:create_model() successfully completed......................................
2024-05-19 16:57:28,597:INFO:SubProcess create_model() end ==================================
2024-05-19 16:57:28,597:INFO:Creating metrics dataframe
2024-05-19 16:57:28,613:INFO:Initializing Random Forest Classifier
2024-05-19 16:57:28,613:INFO:Total runtime is 0.08367446660995484 minutes
2024-05-19 16:57:28,618:INFO:SubProcess create_model() called ==================================
2024-05-19 16:57:28,619:INFO:Initializing create_model()
2024-05-19 16:57:28,619:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E90B76B90>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018ED8D707D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 16:57:28,619:INFO:Checking exceptions
2024-05-19 16:57:28,619:INFO:Importing libraries
2024-05-19 16:57:28,621:INFO:Copying training dataset
2024-05-19 16:57:28,628:INFO:Defining folds
2024-05-19 16:57:28,628:INFO:Declaring metric variables
2024-05-19 16:57:28,633:INFO:Importing untrained model
2024-05-19 16:57:28,638:INFO:Random Forest Classifier Imported successfully
2024-05-19 16:57:28,648:INFO:Starting cross validation
2024-05-19 16:57:28,649:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:57:31,426:INFO:Calculating mean and std
2024-05-19 16:57:31,427:INFO:Creating metrics dataframe
2024-05-19 16:57:31,431:INFO:Uploading results into container
2024-05-19 16:57:31,431:INFO:Uploading model into container now
2024-05-19 16:57:31,432:INFO:_master_model_container: 3
2024-05-19 16:57:31,432:INFO:_display_container: 2
2024-05-19 16:57:31,432:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False)
2024-05-19 16:57:31,432:INFO:create_model() successfully completed......................................
2024-05-19 16:57:31,658:INFO:SubProcess create_model() end ==================================
2024-05-19 16:57:31,659:INFO:Creating metrics dataframe
2024-05-19 16:57:31,685:INFO:Initializing create_model()
2024-05-19 16:57:31,686:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E90B76B90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=888, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 16:57:31,686:INFO:Checking exceptions
2024-05-19 16:57:31,688:INFO:Importing libraries
2024-05-19 16:57:31,688:INFO:Copying training dataset
2024-05-19 16:57:31,695:INFO:Defining folds
2024-05-19 16:57:31,695:INFO:Declaring metric variables
2024-05-19 16:57:31,696:INFO:Importing untrained model
2024-05-19 16:57:31,696:INFO:Declaring custom model
2024-05-19 16:57:31,696:INFO:Logistic Regression Imported successfully
2024-05-19 16:57:31,697:INFO:Cross validation set to False
2024-05-19 16:57:31,697:INFO:Fitting Model
2024-05-19 16:57:32,200:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=888, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-19 16:57:32,200:INFO:create_model() successfully completed......................................
2024-05-19 16:57:32,424:INFO:Creating Dashboard logs
2024-05-19 16:57:32,432:INFO:Model: Logistic Regression
2024-05-19 16:57:32,501:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 888, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-05-19 16:57:32,690:INFO:Initializing predict_model()
2024-05-19 16:57:32,691:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E90B76B90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=888, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018E94BFA5C0>)
2024-05-19 16:57:32,691:INFO:Checking exceptions
2024-05-19 16:57:32,691:INFO:Preloading libraries
2024-05-19 16:57:33,240:INFO:Creating Dashboard logs
2024-05-19 16:57:33,246:INFO:Model: Random Forest Classifier
2024-05-19 16:57:33,310:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 888, 'verbose': 0, 'warm_start': False}
2024-05-19 16:57:33,745:INFO:Creating Dashboard logs
2024-05-19 16:57:33,748:INFO:Model: Decision Tree Classifier
2024-05-19 16:57:33,813:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 888, 'splitter': 'best'}
2024-05-19 16:57:34,280:INFO:_master_model_container: 3
2024-05-19 16:57:34,280:INFO:_display_container: 2
2024-05-19 16:57:34,281:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=888, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-19 16:57:34,281:INFO:compare_models() successfully completed......................................
2024-05-19 16:57:39,403:INFO:Initializing create_model()
2024-05-19 16:57:39,404:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E90B76B90>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={'penalty': 'l1', 'solver': 'liblinear'})
2024-05-19 16:57:39,404:INFO:Checking exceptions
2024-05-19 16:57:39,421:INFO:Importing libraries
2024-05-19 16:57:39,421:INFO:Copying training dataset
2024-05-19 16:57:39,429:INFO:Defining folds
2024-05-19 16:57:39,429:INFO:Declaring metric variables
2024-05-19 16:57:39,432:INFO:Importing untrained model
2024-05-19 16:57:39,437:INFO:Logistic Regression Imported successfully
2024-05-19 16:57:39,446:INFO:Starting cross validation
2024-05-19 16:57:39,447:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:57:40,743:INFO:Calculating mean and std
2024-05-19 16:57:40,744:INFO:Creating metrics dataframe
2024-05-19 16:57:40,748:INFO:Finalizing model
2024-05-19 16:57:40,882:INFO:Creating Dashboard logs
2024-05-19 16:57:40,885:INFO:Model: Logistic Regression
2024-05-19 16:57:40,951:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l1', 'random_state': 888, 'solver': 'liblinear', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-05-19 16:57:41,124:INFO:Initializing predict_model()
2024-05-19 16:57:41,124:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E90B76B90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018E9D8EA840>)
2024-05-19 16:57:41,124:INFO:Checking exceptions
2024-05-19 16:57:41,124:INFO:Preloading libraries
2024-05-19 16:57:41,661:INFO:Uploading results into container
2024-05-19 16:57:41,662:INFO:Uploading model into container now
2024-05-19 16:57:41,674:INFO:_master_model_container: 4
2024-05-19 16:57:41,674:INFO:_display_container: 3
2024-05-19 16:57:41,674:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-19 16:57:41,674:INFO:create_model() successfully completed......................................
2024-05-19 16:57:41,897:INFO:Initializing create_model()
2024-05-19 16:57:41,897:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E90B76B90>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 16:57:41,897:INFO:Checking exceptions
2024-05-19 16:57:41,914:INFO:Importing libraries
2024-05-19 16:57:41,915:INFO:Copying training dataset
2024-05-19 16:57:41,922:INFO:Defining folds
2024-05-19 16:57:41,922:INFO:Declaring metric variables
2024-05-19 16:57:41,928:INFO:Importing untrained model
2024-05-19 16:57:41,934:INFO:Decision Tree Classifier Imported successfully
2024-05-19 16:57:41,946:INFO:Starting cross validation
2024-05-19 16:57:41,948:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:57:42,645:INFO:Calculating mean and std
2024-05-19 16:57:42,645:INFO:Creating metrics dataframe
2024-05-19 16:57:42,650:INFO:Finalizing model
2024-05-19 16:57:42,689:INFO:Creating Dashboard logs
2024-05-19 16:57:42,694:INFO:Model: Decision Tree Classifier
2024-05-19 16:57:42,763:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 888, 'splitter': 'best'}
2024-05-19 16:57:42,962:INFO:Initializing predict_model()
2024-05-19 16:57:42,962:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E90B76B90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018E94C20EA0>)
2024-05-19 16:57:42,962:INFO:Checking exceptions
2024-05-19 16:57:42,962:INFO:Preloading libraries
2024-05-19 16:57:43,735:INFO:Uploading results into container
2024-05-19 16:57:43,736:INFO:Uploading model into container now
2024-05-19 16:57:43,752:INFO:_master_model_container: 5
2024-05-19 16:57:43,752:INFO:_display_container: 4
2024-05-19 16:57:43,752:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best')
2024-05-19 16:57:43,753:INFO:create_model() successfully completed......................................
2024-05-19 16:57:43,994:INFO:Initializing create_model()
2024-05-19 16:57:43,994:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E90B76B90>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 16:57:43,994:INFO:Checking exceptions
2024-05-19 16:57:44,015:INFO:Importing libraries
2024-05-19 16:57:44,016:INFO:Copying training dataset
2024-05-19 16:57:44,028:INFO:Defining folds
2024-05-19 16:57:44,028:INFO:Declaring metric variables
2024-05-19 16:57:44,032:INFO:Importing untrained model
2024-05-19 16:57:44,037:INFO:Random Forest Classifier Imported successfully
2024-05-19 16:57:44,051:INFO:Starting cross validation
2024-05-19 16:57:44,052:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:57:46,918:INFO:Calculating mean and std
2024-05-19 16:57:46,919:INFO:Creating metrics dataframe
2024-05-19 16:57:46,926:INFO:Finalizing model
2024-05-19 16:57:47,176:INFO:Creating Dashboard logs
2024-05-19 16:57:47,181:INFO:Model: Random Forest Classifier
2024-05-19 16:57:47,254:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 888, 'verbose': 0, 'warm_start': False}
2024-05-19 16:57:47,431:INFO:Initializing predict_model()
2024-05-19 16:57:47,431:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E90B76B90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018E939160C0>)
2024-05-19 16:57:47,431:INFO:Checking exceptions
2024-05-19 16:57:47,431:INFO:Preloading libraries
2024-05-19 16:57:48,147:INFO:Uploading results into container
2024-05-19 16:57:48,148:INFO:Uploading model into container now
2024-05-19 16:57:48,164:INFO:_master_model_container: 6
2024-05-19 16:57:48,164:INFO:_display_container: 5
2024-05-19 16:57:48,166:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False)
2024-05-19 16:57:48,166:INFO:create_model() successfully completed......................................
2024-05-19 16:57:54,311:INFO:Initializing tune_model()
2024-05-19 16:57:54,312:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E90B76B90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False), fold=10, round=4, n_iter=10, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-19 16:57:54,312:INFO:Checking exceptions
2024-05-19 16:57:54,333:INFO:Copying training dataset
2024-05-19 16:57:54,341:INFO:Checking base model
2024-05-19 16:57:54,342:INFO:Base model : Logistic Regression
2024-05-19 16:57:54,348:INFO:Declaring metric variables
2024-05-19 16:57:54,356:INFO:Defining Hyperparameters
2024-05-19 16:57:54,680:INFO:Tuning with n_jobs=-1
2024-05-19 16:57:54,680:INFO:Initializing RandomizedSearchCV
2024-05-19 16:58:00,205:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 0.974}
2024-05-19 16:58:00,206:INFO:Hyperparameter search completed
2024-05-19 16:58:00,207:INFO:SubProcess create_model() called ==================================
2024-05-19 16:58:00,207:INFO:Initializing create_model()
2024-05-19 16:58:00,207:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E90B76B90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E938FF0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'class_weight': 'balanced', 'C': 0.974})
2024-05-19 16:58:00,207:INFO:Checking exceptions
2024-05-19 16:58:00,208:INFO:Importing libraries
2024-05-19 16:58:00,208:INFO:Copying training dataset
2024-05-19 16:58:00,214:INFO:Defining folds
2024-05-19 16:58:00,214:INFO:Declaring metric variables
2024-05-19 16:58:00,218:INFO:Importing untrained model
2024-05-19 16:58:00,219:INFO:Declaring custom model
2024-05-19 16:58:00,226:INFO:Logistic Regression Imported successfully
2024-05-19 16:58:00,235:INFO:Starting cross validation
2024-05-19 16:58:00,236:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:58:02,649:INFO:Calculating mean and std
2024-05-19 16:58:02,651:INFO:Creating metrics dataframe
2024-05-19 16:58:02,659:INFO:Finalizing model
2024-05-19 16:58:02,898:INFO:Uploading results into container
2024-05-19 16:58:02,900:INFO:Uploading model into container now
2024-05-19 16:58:02,900:INFO:_master_model_container: 7
2024-05-19 16:58:02,900:INFO:_display_container: 6
2024-05-19 16:58:02,901:INFO:LogisticRegression(C=0.974, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-19 16:58:02,901:INFO:create_model() successfully completed......................................
2024-05-19 16:58:03,113:INFO:SubProcess create_model() end ==================================
2024-05-19 16:58:03,113:INFO:choose_better activated
2024-05-19 16:58:03,119:INFO:SubProcess create_model() called ==================================
2024-05-19 16:58:03,119:INFO:Initializing create_model()
2024-05-19 16:58:03,120:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E90B76B90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 16:58:03,120:INFO:Checking exceptions
2024-05-19 16:58:03,124:INFO:Importing libraries
2024-05-19 16:58:03,124:INFO:Copying training dataset
2024-05-19 16:58:03,130:INFO:Defining folds
2024-05-19 16:58:03,130:INFO:Declaring metric variables
2024-05-19 16:58:03,130:INFO:Importing untrained model
2024-05-19 16:58:03,131:INFO:Declaring custom model
2024-05-19 16:58:03,131:INFO:Logistic Regression Imported successfully
2024-05-19 16:58:03,132:INFO:Starting cross validation
2024-05-19 16:58:03,133:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:58:04,494:INFO:Calculating mean and std
2024-05-19 16:58:04,494:INFO:Creating metrics dataframe
2024-05-19 16:58:04,496:INFO:Finalizing model
2024-05-19 16:58:04,625:INFO:Uploading results into container
2024-05-19 16:58:04,626:INFO:Uploading model into container now
2024-05-19 16:58:04,627:INFO:_master_model_container: 8
2024-05-19 16:58:04,627:INFO:_display_container: 7
2024-05-19 16:58:04,627:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-19 16:58:04,628:INFO:create_model() successfully completed......................................
2024-05-19 16:58:04,840:INFO:SubProcess create_model() end ==================================
2024-05-19 16:58:04,841:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False) result for AUC is 0.9267
2024-05-19 16:58:04,842:INFO:LogisticRegression(C=0.974, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False) result for AUC is 0.9298
2024-05-19 16:58:04,843:INFO:LogisticRegression(C=0.974, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2024-05-19 16:58:04,843:INFO:choose_better completed
2024-05-19 16:58:04,843:INFO:Creating Dashboard logs
2024-05-19 16:58:04,848:INFO:Model: Logistic Regression
2024-05-19 16:58:04,911:INFO:Logged params: {'C': 0.974, 'class_weight': 'balanced', 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l1', 'random_state': 888, 'solver': 'liblinear', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-05-19 16:58:05,072:INFO:Initializing predict_model()
2024-05-19 16:58:05,072:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E90B76B90>, estimator=LogisticRegression(C=0.974, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018E94C20EA0>)
2024-05-19 16:58:05,072:INFO:Checking exceptions
2024-05-19 16:58:05,073:INFO:Preloading libraries
2024-05-19 16:58:05,663:INFO:_master_model_container: 8
2024-05-19 16:58:05,663:INFO:_display_container: 6
2024-05-19 16:58:05,664:INFO:LogisticRegression(C=0.974, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l1',
                   random_state=888, solver='liblinear', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-19 16:58:05,664:INFO:tune_model() successfully completed......................................
2024-05-19 16:58:05,933:INFO:Initializing tune_model()
2024-05-19 16:58:05,933:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E90B76B90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best'), fold=10, round=4, n_iter=10, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-19 16:58:05,933:INFO:Checking exceptions
2024-05-19 16:58:05,958:INFO:Copying training dataset
2024-05-19 16:58:05,962:INFO:Checking base model
2024-05-19 16:58:05,962:INFO:Base model : Decision Tree Classifier
2024-05-19 16:58:05,966:INFO:Declaring metric variables
2024-05-19 16:58:05,969:INFO:Defining Hyperparameters
2024-05-19 16:58:06,337:INFO:Tuning with n_jobs=-1
2024-05-19 16:58:06,337:INFO:Initializing RandomizedSearchCV
2024-05-19 16:58:07,145:INFO:best_params: {'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.005, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 14, 'actual_estimator__criterion': 'gini'}
2024-05-19 16:58:07,147:INFO:Hyperparameter search completed
2024-05-19 16:58:07,147:INFO:SubProcess create_model() called ==================================
2024-05-19 16:58:07,149:INFO:Initializing create_model()
2024-05-19 16:58:07,149:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E90B76B90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E93160210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 10, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.005, 'max_features': 1.0, 'max_depth': 14, 'criterion': 'gini'})
2024-05-19 16:58:07,150:INFO:Checking exceptions
2024-05-19 16:58:07,150:INFO:Importing libraries
2024-05-19 16:58:07,150:INFO:Copying training dataset
2024-05-19 16:58:07,159:INFO:Defining folds
2024-05-19 16:58:07,159:INFO:Declaring metric variables
2024-05-19 16:58:07,164:INFO:Importing untrained model
2024-05-19 16:58:07,164:INFO:Declaring custom model
2024-05-19 16:58:07,173:INFO:Decision Tree Classifier Imported successfully
2024-05-19 16:58:07,183:INFO:Starting cross validation
2024-05-19 16:58:07,186:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:58:07,654:INFO:Calculating mean and std
2024-05-19 16:58:07,657:INFO:Creating metrics dataframe
2024-05-19 16:58:07,663:INFO:Finalizing model
2024-05-19 16:58:07,685:INFO:Uploading results into container
2024-05-19 16:58:07,686:INFO:Uploading model into container now
2024-05-19 16:58:07,686:INFO:_master_model_container: 9
2024-05-19 16:58:07,687:INFO:_display_container: 7
2024-05-19 16:58:07,687:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=14, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.005, min_samples_leaf=2,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best')
2024-05-19 16:58:07,687:INFO:create_model() successfully completed......................................
2024-05-19 16:58:07,903:INFO:SubProcess create_model() end ==================================
2024-05-19 16:58:07,903:INFO:choose_better activated
2024-05-19 16:58:07,909:INFO:SubProcess create_model() called ==================================
2024-05-19 16:58:07,910:INFO:Initializing create_model()
2024-05-19 16:58:07,910:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E90B76B90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 16:58:07,910:INFO:Checking exceptions
2024-05-19 16:58:07,912:INFO:Importing libraries
2024-05-19 16:58:07,912:INFO:Copying training dataset
2024-05-19 16:58:07,917:INFO:Defining folds
2024-05-19 16:58:07,917:INFO:Declaring metric variables
2024-05-19 16:58:07,917:INFO:Importing untrained model
2024-05-19 16:58:07,917:INFO:Declaring custom model
2024-05-19 16:58:07,918:INFO:Decision Tree Classifier Imported successfully
2024-05-19 16:58:07,918:INFO:Starting cross validation
2024-05-19 16:58:07,919:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:58:08,368:INFO:Calculating mean and std
2024-05-19 16:58:08,368:INFO:Creating metrics dataframe
2024-05-19 16:58:08,369:INFO:Finalizing model
2024-05-19 16:58:08,399:INFO:Uploading results into container
2024-05-19 16:58:08,400:INFO:Uploading model into container now
2024-05-19 16:58:08,400:INFO:_master_model_container: 10
2024-05-19 16:58:08,400:INFO:_display_container: 8
2024-05-19 16:58:08,400:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best')
2024-05-19 16:58:08,400:INFO:create_model() successfully completed......................................
2024-05-19 16:58:08,604:INFO:SubProcess create_model() end ==================================
2024-05-19 16:58:08,605:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best') result for AUC is 0.7154
2024-05-19 16:58:08,606:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=14, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.005, min_samples_leaf=2,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best') result for AUC is 0.8343
2024-05-19 16:58:08,607:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=14, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.005, min_samples_leaf=2,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best') is best model
2024-05-19 16:58:08,607:INFO:choose_better completed
2024-05-19 16:58:08,607:INFO:Creating Dashboard logs
2024-05-19 16:58:08,611:INFO:Model: Decision Tree Classifier
2024-05-19 16:58:08,677:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': 14, 'max_features': 1.0, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.005, 'min_samples_leaf': 2, 'min_samples_split': 10, 'min_weight_fraction_leaf': 0.0, 'random_state': 888, 'splitter': 'best'}
2024-05-19 16:58:08,831:INFO:Initializing predict_model()
2024-05-19 16:58:08,831:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E90B76B90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=14, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.005, min_samples_leaf=2,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018E93915F80>)
2024-05-19 16:58:08,831:INFO:Checking exceptions
2024-05-19 16:58:08,831:INFO:Preloading libraries
2024-05-19 16:58:09,416:INFO:_master_model_container: 10
2024-05-19 16:58:09,418:INFO:_display_container: 7
2024-05-19 16:58:09,418:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=14, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.005, min_samples_leaf=2,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       random_state=888, splitter='best')
2024-05-19 16:58:09,418:INFO:tune_model() successfully completed......................................
2024-05-19 16:58:09,691:INFO:Initializing tune_model()
2024-05-19 16:58:09,691:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E90B76B90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False), fold=10, round=4, n_iter=10, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-19 16:58:09,691:INFO:Checking exceptions
2024-05-19 16:58:09,710:INFO:Copying training dataset
2024-05-19 16:58:09,714:INFO:Checking base model
2024-05-19 16:58:09,714:INFO:Base model : Random Forest Classifier
2024-05-19 16:58:09,719:INFO:Declaring metric variables
2024-05-19 16:58:09,726:INFO:Defining Hyperparameters
2024-05-19 16:58:10,000:INFO:Tuning with n_jobs=-1
2024-05-19 16:58:10,001:INFO:Initializing RandomizedSearchCV
2024-05-19 16:58:34,356:INFO:best_params: {'actual_estimator__n_estimators': 160, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.005, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 7, 'actual_estimator__criterion': 'entropy', 'actual_estimator__class_weight': 'balanced', 'actual_estimator__bootstrap': True}
2024-05-19 16:58:34,358:INFO:Hyperparameter search completed
2024-05-19 16:58:34,358:INFO:SubProcess create_model() called ==================================
2024-05-19 16:58:34,360:INFO:Initializing create_model()
2024-05-19 16:58:34,360:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E90B76B90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E90BA3B90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 160, 'min_samples_split': 5, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.005, 'max_features': 'log2', 'max_depth': 7, 'criterion': 'entropy', 'class_weight': 'balanced', 'bootstrap': True})
2024-05-19 16:58:34,360:INFO:Checking exceptions
2024-05-19 16:58:34,360:INFO:Importing libraries
2024-05-19 16:58:34,361:INFO:Copying training dataset
2024-05-19 16:58:34,365:INFO:Defining folds
2024-05-19 16:58:34,365:INFO:Declaring metric variables
2024-05-19 16:58:34,369:INFO:Importing untrained model
2024-05-19 16:58:34,369:INFO:Declaring custom model
2024-05-19 16:58:34,375:INFO:Random Forest Classifier Imported successfully
2024-05-19 16:58:34,382:INFO:Starting cross validation
2024-05-19 16:58:34,383:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:58:38,929:INFO:Calculating mean and std
2024-05-19 16:58:38,930:INFO:Creating metrics dataframe
2024-05-19 16:58:38,937:INFO:Finalizing model
2024-05-19 16:58:39,281:INFO:Uploading results into container
2024-05-19 16:58:39,282:INFO:Uploading model into container now
2024-05-19 16:58:39,283:INFO:_master_model_container: 11
2024-05-19 16:58:39,283:INFO:_display_container: 8
2024-05-19 16:58:39,284:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=7, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.005, min_samples_leaf=5,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       n_estimators=160, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False)
2024-05-19 16:58:39,284:INFO:create_model() successfully completed......................................
2024-05-19 16:58:39,504:INFO:SubProcess create_model() end ==================================
2024-05-19 16:58:39,504:INFO:choose_better activated
2024-05-19 16:58:39,510:INFO:SubProcess create_model() called ==================================
2024-05-19 16:58:39,511:INFO:Initializing create_model()
2024-05-19 16:58:39,511:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E90B76B90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-19 16:58:39,511:INFO:Checking exceptions
2024-05-19 16:58:39,513:INFO:Importing libraries
2024-05-19 16:58:39,513:INFO:Copying training dataset
2024-05-19 16:58:39,519:INFO:Defining folds
2024-05-19 16:58:39,519:INFO:Declaring metric variables
2024-05-19 16:58:39,519:INFO:Importing untrained model
2024-05-19 16:58:39,519:INFO:Declaring custom model
2024-05-19 16:58:39,520:INFO:Random Forest Classifier Imported successfully
2024-05-19 16:58:39,522:INFO:Starting cross validation
2024-05-19 16:58:39,522:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2024-05-19 16:58:42,172:INFO:Calculating mean and std
2024-05-19 16:58:42,172:INFO:Creating metrics dataframe
2024-05-19 16:58:42,174:INFO:Finalizing model
2024-05-19 16:58:42,385:INFO:Uploading results into container
2024-05-19 16:58:42,386:INFO:Uploading model into container now
2024-05-19 16:58:42,386:INFO:_master_model_container: 12
2024-05-19 16:58:42,386:INFO:_display_container: 9
2024-05-19 16:58:42,386:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False)
2024-05-19 16:58:42,386:INFO:create_model() successfully completed......................................
2024-05-19 16:58:42,611:INFO:SubProcess create_model() end ==================================
2024-05-19 16:58:42,612:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False) result for AUC is 0.9068
2024-05-19 16:58:42,613:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=7, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.005, min_samples_leaf=5,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       n_estimators=160, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False) result for AUC is 0.9281
2024-05-19 16:58:42,614:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=7, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.005, min_samples_leaf=5,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       n_estimators=160, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False) is best model
2024-05-19 16:58:42,614:INFO:choose_better completed
2024-05-19 16:58:42,615:INFO:Creating Dashboard logs
2024-05-19 16:58:42,621:INFO:Model: Random Forest Classifier
2024-05-19 16:58:42,692:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': 'balanced', 'criterion': 'entropy', 'max_depth': 7, 'max_features': 'log2', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.005, 'min_samples_leaf': 5, 'min_samples_split': 5, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 160, 'n_jobs': -1, 'oob_score': False, 'random_state': 888, 'verbose': 0, 'warm_start': False}
2024-05-19 16:58:42,895:INFO:Initializing predict_model()
2024-05-19 16:58:42,896:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E90B76B90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=7, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.005, min_samples_leaf=5,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       n_estimators=160, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018E9D858680>)
2024-05-19 16:58:42,896:INFO:Checking exceptions
2024-05-19 16:58:42,896:INFO:Preloading libraries
2024-05-19 16:58:43,774:INFO:_master_model_container: 12
2024-05-19 16:58:43,775:INFO:_display_container: 8
2024-05-19 16:58:43,775:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=7, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.005, min_samples_leaf=5,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       n_estimators=160, n_jobs=-1, oob_score=False,
                       random_state=888, verbose=0, warm_start=False)
2024-05-19 16:58:43,776:INFO:tune_model() successfully completed......................................
